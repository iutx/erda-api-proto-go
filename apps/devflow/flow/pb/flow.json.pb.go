// Code generated by protoc-gen-go-json. DO NOT EDIT.
// Source: flow.proto

package pb

import (
	bytes "bytes"
	json "encoding/json"

	jsonpb "github.com/erda-project/erda-infra/pkg/transport/http/encoding/jsonpb"
	protojson "google.golang.org/protobuf/encoding/protojson"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "encoding/json" package it is being compiled against.
var _ json.Marshaler = (*IssueRelationExtra)(nil)
var _ json.Unmarshaler = (*IssueRelationExtra)(nil)
var _ json.Marshaler = (*DevFlowNode)(nil)
var _ json.Unmarshaler = (*DevFlowNode)(nil)
var _ json.Marshaler = (*CreateFlowNodeRequest)(nil)
var _ json.Unmarshaler = (*CreateFlowNodeRequest)(nil)
var _ json.Marshaler = (*CreateFlowNodeResponse)(nil)
var _ json.Unmarshaler = (*CreateFlowNodeResponse)(nil)
var _ json.Marshaler = (*DevFlow)(nil)
var _ json.Unmarshaler = (*DevFlow)(nil)
var _ json.Marshaler = (*OperationMergeRequest)(nil)
var _ json.Unmarshaler = (*OperationMergeRequest)(nil)
var _ json.Marshaler = (*OperationMergeResponse)(nil)
var _ json.Unmarshaler = (*OperationMergeResponse)(nil)
var _ json.Marshaler = (*DeleteFlowNodeRequest)(nil)
var _ json.Unmarshaler = (*DeleteFlowNodeRequest)(nil)
var _ json.Marshaler = (*DeleteFlowNodeResponse)(nil)
var _ json.Unmarshaler = (*DeleteFlowNodeResponse)(nil)
var _ json.Marshaler = (*ReconstructionRequest)(nil)
var _ json.Unmarshaler = (*ReconstructionRequest)(nil)
var _ json.Marshaler = (*ReconstructionResponse)(nil)
var _ json.Unmarshaler = (*ReconstructionResponse)(nil)
var _ json.Marshaler = (*PipelineStepInfo)(nil)
var _ json.Unmarshaler = (*PipelineStepInfo)(nil)
var _ json.Marshaler = (*GetDevFlowInfoRequest)(nil)
var _ json.Unmarshaler = (*GetDevFlowInfoRequest)(nil)
var _ json.Marshaler = (*ChangeBranch)(nil)
var _ json.Unmarshaler = (*ChangeBranch)(nil)
var _ json.Marshaler = (*DevFlowInfo)(nil)
var _ json.Unmarshaler = (*DevFlowInfo)(nil)
var _ json.Marshaler = (*CodeNode)(nil)
var _ json.Unmarshaler = (*CodeNode)(nil)
var _ json.Marshaler = (*TempMergeNode)(nil)
var _ json.Unmarshaler = (*TempMergeNode)(nil)
var _ json.Marshaler = (*PipelineNode)(nil)
var _ json.Unmarshaler = (*PipelineNode)(nil)
var _ json.Marshaler = (*MergeRequestNode)(nil)
var _ json.Unmarshaler = (*MergeRequestNode)(nil)
var _ json.Marshaler = (*GetDevFlowInfoResponse)(nil)
var _ json.Unmarshaler = (*GetDevFlowInfoResponse)(nil)
var _ json.Marshaler = (*Commit)(nil)
var _ json.Unmarshaler = (*Commit)(nil)
var _ json.Marshaler = (*Signature)(nil)
var _ json.Unmarshaler = (*Signature)(nil)
var _ json.Marshaler = (*FlowCallbackRequest)(nil)
var _ json.Unmarshaler = (*FlowCallbackRequest)(nil)
var _ json.Marshaler = (*FlowEventData)(nil)
var _ json.Unmarshaler = (*FlowEventData)(nil)
var _ json.Marshaler = (*FlowCallbackResponse)(nil)
var _ json.Unmarshaler = (*FlowCallbackResponse)(nil)

// IssueRelationExtra implement json.Marshaler.
func (m *IssueRelationExtra) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// IssueRelationExtra implement json.Marshaler.
func (m *IssueRelationExtra) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// DevFlowNode implement json.Marshaler.
func (m *DevFlowNode) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// DevFlowNode implement json.Marshaler.
func (m *DevFlowNode) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CreateFlowNodeRequest implement json.Marshaler.
func (m *CreateFlowNodeRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CreateFlowNodeRequest implement json.Marshaler.
func (m *CreateFlowNodeRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CreateFlowNodeResponse implement json.Marshaler.
func (m *CreateFlowNodeResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CreateFlowNodeResponse implement json.Marshaler.
func (m *CreateFlowNodeResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// DevFlow implement json.Marshaler.
func (m *DevFlow) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// DevFlow implement json.Marshaler.
func (m *DevFlow) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// OperationMergeRequest implement json.Marshaler.
func (m *OperationMergeRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// OperationMergeRequest implement json.Marshaler.
func (m *OperationMergeRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// OperationMergeResponse implement json.Marshaler.
func (m *OperationMergeResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// OperationMergeResponse implement json.Marshaler.
func (m *OperationMergeResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// DeleteFlowNodeRequest implement json.Marshaler.
func (m *DeleteFlowNodeRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// DeleteFlowNodeRequest implement json.Marshaler.
func (m *DeleteFlowNodeRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// DeleteFlowNodeResponse implement json.Marshaler.
func (m *DeleteFlowNodeResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// DeleteFlowNodeResponse implement json.Marshaler.
func (m *DeleteFlowNodeResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ReconstructionRequest implement json.Marshaler.
func (m *ReconstructionRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ReconstructionRequest implement json.Marshaler.
func (m *ReconstructionRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ReconstructionResponse implement json.Marshaler.
func (m *ReconstructionResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ReconstructionResponse implement json.Marshaler.
func (m *ReconstructionResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineStepInfo implement json.Marshaler.
func (m *PipelineStepInfo) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineStepInfo implement json.Marshaler.
func (m *PipelineStepInfo) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GetDevFlowInfoRequest implement json.Marshaler.
func (m *GetDevFlowInfoRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GetDevFlowInfoRequest implement json.Marshaler.
func (m *GetDevFlowInfoRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ChangeBranch implement json.Marshaler.
func (m *ChangeBranch) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ChangeBranch implement json.Marshaler.
func (m *ChangeBranch) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// DevFlowInfo implement json.Marshaler.
func (m *DevFlowInfo) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// DevFlowInfo implement json.Marshaler.
func (m *DevFlowInfo) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CodeNode implement json.Marshaler.
func (m *CodeNode) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CodeNode implement json.Marshaler.
func (m *CodeNode) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TempMergeNode implement json.Marshaler.
func (m *TempMergeNode) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TempMergeNode implement json.Marshaler.
func (m *TempMergeNode) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineNode implement json.Marshaler.
func (m *PipelineNode) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineNode implement json.Marshaler.
func (m *PipelineNode) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// MergeRequestNode implement json.Marshaler.
func (m *MergeRequestNode) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// MergeRequestNode implement json.Marshaler.
func (m *MergeRequestNode) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GetDevFlowInfoResponse implement json.Marshaler.
func (m *GetDevFlowInfoResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GetDevFlowInfoResponse implement json.Marshaler.
func (m *GetDevFlowInfoResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Commit implement json.Marshaler.
func (m *Commit) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Commit implement json.Marshaler.
func (m *Commit) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Signature implement json.Marshaler.
func (m *Signature) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Signature implement json.Marshaler.
func (m *Signature) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// FlowCallbackRequest implement json.Marshaler.
func (m *FlowCallbackRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// FlowCallbackRequest implement json.Marshaler.
func (m *FlowCallbackRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// FlowEventData implement json.Marshaler.
func (m *FlowEventData) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// FlowEventData implement json.Marshaler.
func (m *FlowEventData) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// FlowCallbackResponse implement json.Marshaler.
func (m *FlowCallbackResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// FlowCallbackResponse implement json.Marshaler.
func (m *FlowCallbackResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}
