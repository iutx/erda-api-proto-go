// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: podscaler.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterPodScalerServiceImp podscaler.proto
func RegisterPodScalerServiceImp(regester transport.Register, srv PodScalerServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterPodScalerServiceHandler(regester, PodScalerServiceHandler(srv), _ops.HTTP...)
	RegisterPodScalerServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.orchestrator.podscaler.PodScalerService",
	)
}

var (
	podScalerServiceClientType  = reflect.TypeOf((*PodScalerServiceClient)(nil)).Elem()
	podScalerServiceServerType  = reflect.TypeOf((*PodScalerServiceServer)(nil)).Elem()
	podScalerServiceHandlerType = reflect.TypeOf((*PodScalerServiceHandler)(nil)).Elem()
)

// PodScalerServiceClientType .
func PodScalerServiceClientType() reflect.Type { return podScalerServiceClientType }

// PodScalerServiceServerType .
func PodScalerServiceServerType() reflect.Type { return podScalerServiceServerType }

// PodScalerServiceHandlerType .
func PodScalerServiceHandlerType() reflect.Type { return podScalerServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		podScalerServiceClientType,
		// server types
		podScalerServiceServerType,
		// handler types
		podScalerServiceHandlerType,
	}
}
