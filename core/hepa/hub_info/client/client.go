// Code generated by protoc-gen-go-client. DO NOT EDIT.
// Sources: hub_info.proto

package client

import (
	context "context"

	grpc "github.com/erda-project/erda-infra/pkg/transport/grpc"
	pb "github.com/erda-project/erda-proto-go/core/hepa/endpoint_api/pb"
	grpc1 "google.golang.org/grpc"
)

// Client provide all service clients.
type Client interface {
	// HubInfoService hub_info.proto
	HubInfoService() pb.HubInfoServiceClient
}

// New create client
func New(cc grpc.ClientConnInterface) Client {
	return &serviceClients{
		hubInfoService: pb.NewHubInfoServiceClient(cc),
	}
}

type serviceClients struct {
	hubInfoService pb.HubInfoServiceClient
}

func (c *serviceClients) HubInfoService() pb.HubInfoServiceClient {
	return c.hubInfoService
}

type hubInfoServiceWrapper struct {
	client pb.HubInfoServiceClient
	opts   []grpc1.CallOption
}

func (s *hubInfoServiceWrapper) CreateOrGetHubInfo(ctx context.Context, req *pb.CreateHubInfoReq) (*pb.GetHubInfoResp, error) {
	return s.client.CreateOrGetHubInfo(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *hubInfoServiceWrapper) GetHubInfo(ctx context.Context, req *pb.GetHubInfoReq) (*pb.GetHubInfoResp, error) {
	return s.client.GetHubInfo(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}
