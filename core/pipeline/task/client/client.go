// Code generated by protoc-gen-go-client. DO NOT EDIT.
// Sources: task.proto

package client

import (
	context "context"

	grpc "github.com/erda-project/erda-infra/pkg/transport/grpc"
	pb "github.com/erda-project/erda-proto-go/core/pipeline/task/pb"
	grpc1 "google.golang.org/grpc"
)

// Client provide all service clients.
type Client interface {
	// TaskService task.proto
	TaskService() pb.TaskServiceClient
}

// New create client
func New(cc grpc.ClientConnInterface) Client {
	return &serviceClients{
		taskService: pb.NewTaskServiceClient(cc),
	}
}

type serviceClients struct {
	taskService pb.TaskServiceClient
}

func (c *serviceClients) TaskService() pb.TaskServiceClient {
	return c.taskService
}

type taskServiceWrapper struct {
	client pb.TaskServiceClient
	opts   []grpc1.CallOption
}

func (s *taskServiceWrapper) PipelineTaskDetail(ctx context.Context, req *pb.PipelineTaskDetailRequest) (*pb.PipelineTaskDetailResponse, error) {
	return s.client.PipelineTaskDetail(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *taskServiceWrapper) PipelineTaskGetBootstrapInfo(ctx context.Context, req *pb.PipelineTaskGetBootstrapInfoRequest) (*pb.PipelineTaskGetBootstrapInfoResponse, error) {
	return s.client.PipelineTaskGetBootstrapInfo(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}
