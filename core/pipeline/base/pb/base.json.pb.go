// Code generated by protoc-gen-go-json. DO NOT EDIT.
// Source: base.proto

package pb

import (
	bytes "bytes"
	json "encoding/json"

	jsonpb "github.com/erda-project/erda-infra/pkg/transport/http/encoding/jsonpb"
	protojson "google.golang.org/protobuf/encoding/protojson"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "encoding/json" package it is being compiled against.
var _ json.Marshaler = (*PipelineDTO)(nil)
var _ json.Unmarshaler = (*PipelineDTO)(nil)
var _ json.Marshaler = (*PipelineExtra)(nil)
var _ json.Unmarshaler = (*PipelineExtra)(nil)
var _ json.Marshaler = (*PipelineGC)(nil)
var _ json.Unmarshaler = (*PipelineGC)(nil)
var _ json.Marshaler = (*PipelineResourceGC)(nil)
var _ json.Unmarshaler = (*PipelineResourceGC)(nil)
var _ json.Marshaler = (*PipelineDatabaseGC)(nil)
var _ json.Unmarshaler = (*PipelineDatabaseGC)(nil)
var _ json.Marshaler = (*PipelineDBGCItem)(nil)
var _ json.Unmarshaler = (*PipelineDBGCItem)(nil)
var _ json.Marshaler = (*PipelineRunParam)(nil)
var _ json.Unmarshaler = (*PipelineRunParam)(nil)
var _ json.Marshaler = (*PipelineRunParamWithValue)(nil)
var _ json.Unmarshaler = (*PipelineRunParamWithValue)(nil)
var _ json.Marshaler = (*PipelineUser)(nil)
var _ json.Unmarshaler = (*PipelineUser)(nil)
var _ json.Marshaler = (*ShowMessage)(nil)
var _ json.Unmarshaler = (*ShowMessage)(nil)
var _ json.Marshaler = (*StorageConfig)(nil)
var _ json.Unmarshaler = (*StorageConfig)(nil)
var _ json.Marshaler = (*PipelineButton)(nil)
var _ json.Unmarshaler = (*PipelineButton)(nil)
var _ json.Marshaler = (*PipelineExecuteRecord)(nil)
var _ json.Unmarshaler = (*PipelineExecuteRecord)(nil)
var _ json.Marshaler = (*Breakpoint)(nil)
var _ json.Unmarshaler = (*Breakpoint)(nil)
var _ json.Marshaler = (*BreakpointOn)(nil)
var _ json.Unmarshaler = (*BreakpointOn)(nil)
var _ json.Marshaler = (*PipelineEvent)(nil)
var _ json.Unmarshaler = (*PipelineEvent)(nil)
var _ json.Marshaler = (*PipelineEventSource)(nil)
var _ json.Unmarshaler = (*PipelineEventSource)(nil)
var _ json.Marshaler = (*ErrorResponse)(nil)
var _ json.Unmarshaler = (*ErrorResponse)(nil)
var _ json.Marshaler = (*PipelineOutput)(nil)
var _ json.Unmarshaler = (*PipelineOutput)(nil)
var _ json.Marshaler = (*PipelineOutputWithValue)(nil)
var _ json.Unmarshaler = (*PipelineOutputWithValue)(nil)
var _ json.Marshaler = (*PipelineParam)(nil)
var _ json.Unmarshaler = (*PipelineParam)(nil)
var _ json.Marshaler = (*PipelineParamWithValue)(nil)
var _ json.Unmarshaler = (*PipelineParamWithValue)(nil)
var _ json.Marshaler = (*PipelineYml)(nil)
var _ json.Unmarshaler = (*PipelineYml)(nil)
var _ json.Marshaler = (*PipelineTrigger)(nil)
var _ json.Unmarshaler = (*PipelineTrigger)(nil)
var _ json.Marshaler = (*TriggerConfig)(nil)
var _ json.Unmarshaler = (*TriggerConfig)(nil)
var _ json.Marshaler = (*PushTrigger)(nil)
var _ json.Unmarshaler = (*PushTrigger)(nil)
var _ json.Marshaler = (*MergeTrigger)(nil)
var _ json.Unmarshaler = (*MergeTrigger)(nil)
var _ json.Marshaler = (*NetworkHookInfo)(nil)
var _ json.Unmarshaler = (*NetworkHookInfo)(nil)
var _ json.Marshaler = (*PipelineYmlAction)(nil)
var _ json.Unmarshaler = (*PipelineYmlAction)(nil)
var _ json.Marshaler = (*Resources)(nil)
var _ json.Unmarshaler = (*Resources)(nil)
var _ json.Marshaler = (*CronCompensator)(nil)
var _ json.Unmarshaler = (*CronCompensator)(nil)
var _ json.Marshaler = (*ActionCache)(nil)
var _ json.Unmarshaler = (*ActionCache)(nil)
var _ json.Marshaler = (*TaskLoop)(nil)
var _ json.Unmarshaler = (*TaskLoop)(nil)
var _ json.Marshaler = (*TaskLoopStrategy)(nil)
var _ json.Unmarshaler = (*TaskLoopStrategy)(nil)
var _ json.Marshaler = (*SnippetStages)(nil)
var _ json.Unmarshaler = (*SnippetStages)(nil)
var _ json.Marshaler = (*PipelineStage)(nil)
var _ json.Unmarshaler = (*PipelineStage)(nil)
var _ json.Marshaler = (*PipelineStageDetailDTO)(nil)
var _ json.Unmarshaler = (*PipelineStageDetailDTO)(nil)
var _ json.Marshaler = (*PipelineTaskDTO)(nil)
var _ json.Unmarshaler = (*PipelineTaskDTO)(nil)
var _ json.Marshaler = (*TaskContainer)(nil)
var _ json.Unmarshaler = (*TaskContainer)(nil)
var _ json.Marshaler = (*TaskParamDetail)(nil)
var _ json.Unmarshaler = (*TaskParamDetail)(nil)
var _ json.Marshaler = (*PipelineTaskExtra)(nil)
var _ json.Unmarshaler = (*PipelineTaskExtra)(nil)
var _ json.Marshaler = (*ErrorContext)(nil)
var _ json.Unmarshaler = (*ErrorContext)(nil)
var _ json.Marshaler = (*PipelineTaskResult)(nil)
var _ json.Unmarshaler = (*PipelineTaskResult)(nil)
var _ json.Marshaler = (*PipelineTaskSnippetDetail)(nil)
var _ json.Unmarshaler = (*PipelineTaskSnippetDetail)(nil)
var _ json.Marshaler = (*PipelineTaskMachineStat)(nil)
var _ json.Unmarshaler = (*PipelineTaskMachineStat)(nil)
var _ json.Marshaler = (*PipelineTaskMachineHostStat)(nil)
var _ json.Unmarshaler = (*PipelineTaskMachineHostStat)(nil)
var _ json.Marshaler = (*PipelineTaskMachinePodStat)(nil)
var _ json.Unmarshaler = (*PipelineTaskMachinePodStat)(nil)
var _ json.Marshaler = (*PipelineTaskMachineLoadStat)(nil)
var _ json.Unmarshaler = (*PipelineTaskMachineLoadStat)(nil)
var _ json.Marshaler = (*PipelineTaskMachineMemStat)(nil)
var _ json.Unmarshaler = (*PipelineTaskMachineMemStat)(nil)
var _ json.Marshaler = (*PipelineTaskMachineSwapStat)(nil)
var _ json.Unmarshaler = (*PipelineTaskMachineSwapStat)(nil)
var _ json.Marshaler = (*PipelineTaskActionDetail)(nil)
var _ json.Unmarshaler = (*PipelineTaskActionDetail)(nil)
var _ json.Marshaler = (*SnippetConfig)(nil)
var _ json.Unmarshaler = (*SnippetConfig)(nil)
var _ json.Marshaler = (*DefinitionPageInfo)(nil)
var _ json.Unmarshaler = (*DefinitionPageInfo)(nil)

// PipelineDTO implement json.Marshaler.
func (m *PipelineDTO) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineDTO implement json.Marshaler.
func (m *PipelineDTO) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineExtra implement json.Marshaler.
func (m *PipelineExtra) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineExtra implement json.Marshaler.
func (m *PipelineExtra) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineGC implement json.Marshaler.
func (m *PipelineGC) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineGC implement json.Marshaler.
func (m *PipelineGC) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineResourceGC implement json.Marshaler.
func (m *PipelineResourceGC) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineResourceGC implement json.Marshaler.
func (m *PipelineResourceGC) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineDatabaseGC implement json.Marshaler.
func (m *PipelineDatabaseGC) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineDatabaseGC implement json.Marshaler.
func (m *PipelineDatabaseGC) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineDBGCItem implement json.Marshaler.
func (m *PipelineDBGCItem) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineDBGCItem implement json.Marshaler.
func (m *PipelineDBGCItem) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineRunParam implement json.Marshaler.
func (m *PipelineRunParam) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineRunParam implement json.Marshaler.
func (m *PipelineRunParam) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineRunParamWithValue implement json.Marshaler.
func (m *PipelineRunParamWithValue) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineRunParamWithValue implement json.Marshaler.
func (m *PipelineRunParamWithValue) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineUser implement json.Marshaler.
func (m *PipelineUser) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineUser implement json.Marshaler.
func (m *PipelineUser) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ShowMessage implement json.Marshaler.
func (m *ShowMessage) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ShowMessage implement json.Marshaler.
func (m *ShowMessage) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// StorageConfig implement json.Marshaler.
func (m *StorageConfig) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// StorageConfig implement json.Marshaler.
func (m *StorageConfig) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineButton implement json.Marshaler.
func (m *PipelineButton) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineButton implement json.Marshaler.
func (m *PipelineButton) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineExecuteRecord implement json.Marshaler.
func (m *PipelineExecuteRecord) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineExecuteRecord implement json.Marshaler.
func (m *PipelineExecuteRecord) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Breakpoint implement json.Marshaler.
func (m *Breakpoint) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Breakpoint implement json.Marshaler.
func (m *Breakpoint) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// BreakpointOn implement json.Marshaler.
func (m *BreakpointOn) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// BreakpointOn implement json.Marshaler.
func (m *BreakpointOn) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineEvent implement json.Marshaler.
func (m *PipelineEvent) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineEvent implement json.Marshaler.
func (m *PipelineEvent) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineEventSource implement json.Marshaler.
func (m *PipelineEventSource) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineEventSource implement json.Marshaler.
func (m *PipelineEventSource) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ErrorResponse implement json.Marshaler.
func (m *ErrorResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ErrorResponse implement json.Marshaler.
func (m *ErrorResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineOutput implement json.Marshaler.
func (m *PipelineOutput) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineOutput implement json.Marshaler.
func (m *PipelineOutput) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineOutputWithValue implement json.Marshaler.
func (m *PipelineOutputWithValue) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineOutputWithValue implement json.Marshaler.
func (m *PipelineOutputWithValue) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineParam implement json.Marshaler.
func (m *PipelineParam) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineParam implement json.Marshaler.
func (m *PipelineParam) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineParamWithValue implement json.Marshaler.
func (m *PipelineParamWithValue) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineParamWithValue implement json.Marshaler.
func (m *PipelineParamWithValue) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineYml implement json.Marshaler.
func (m *PipelineYml) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineYml implement json.Marshaler.
func (m *PipelineYml) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineTrigger implement json.Marshaler.
func (m *PipelineTrigger) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineTrigger implement json.Marshaler.
func (m *PipelineTrigger) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TriggerConfig implement json.Marshaler.
func (m *TriggerConfig) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TriggerConfig implement json.Marshaler.
func (m *TriggerConfig) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PushTrigger implement json.Marshaler.
func (m *PushTrigger) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PushTrigger implement json.Marshaler.
func (m *PushTrigger) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// MergeTrigger implement json.Marshaler.
func (m *MergeTrigger) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// MergeTrigger implement json.Marshaler.
func (m *MergeTrigger) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// NetworkHookInfo implement json.Marshaler.
func (m *NetworkHookInfo) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// NetworkHookInfo implement json.Marshaler.
func (m *NetworkHookInfo) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineYmlAction implement json.Marshaler.
func (m *PipelineYmlAction) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineYmlAction implement json.Marshaler.
func (m *PipelineYmlAction) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Resources implement json.Marshaler.
func (m *Resources) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Resources implement json.Marshaler.
func (m *Resources) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CronCompensator implement json.Marshaler.
func (m *CronCompensator) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CronCompensator implement json.Marshaler.
func (m *CronCompensator) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ActionCache implement json.Marshaler.
func (m *ActionCache) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ActionCache implement json.Marshaler.
func (m *ActionCache) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TaskLoop implement json.Marshaler.
func (m *TaskLoop) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TaskLoop implement json.Marshaler.
func (m *TaskLoop) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TaskLoopStrategy implement json.Marshaler.
func (m *TaskLoopStrategy) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TaskLoopStrategy implement json.Marshaler.
func (m *TaskLoopStrategy) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// SnippetStages implement json.Marshaler.
func (m *SnippetStages) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// SnippetStages implement json.Marshaler.
func (m *SnippetStages) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineStage implement json.Marshaler.
func (m *PipelineStage) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineStage implement json.Marshaler.
func (m *PipelineStage) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineStageDetailDTO implement json.Marshaler.
func (m *PipelineStageDetailDTO) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineStageDetailDTO implement json.Marshaler.
func (m *PipelineStageDetailDTO) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineTaskDTO implement json.Marshaler.
func (m *PipelineTaskDTO) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineTaskDTO implement json.Marshaler.
func (m *PipelineTaskDTO) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TaskContainer implement json.Marshaler.
func (m *TaskContainer) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TaskContainer implement json.Marshaler.
func (m *TaskContainer) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TaskParamDetail implement json.Marshaler.
func (m *TaskParamDetail) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TaskParamDetail implement json.Marshaler.
func (m *TaskParamDetail) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineTaskExtra implement json.Marshaler.
func (m *PipelineTaskExtra) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineTaskExtra implement json.Marshaler.
func (m *PipelineTaskExtra) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ErrorContext implement json.Marshaler.
func (m *ErrorContext) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ErrorContext implement json.Marshaler.
func (m *ErrorContext) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineTaskResult implement json.Marshaler.
func (m *PipelineTaskResult) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineTaskResult implement json.Marshaler.
func (m *PipelineTaskResult) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineTaskSnippetDetail implement json.Marshaler.
func (m *PipelineTaskSnippetDetail) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineTaskSnippetDetail implement json.Marshaler.
func (m *PipelineTaskSnippetDetail) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineTaskMachineStat implement json.Marshaler.
func (m *PipelineTaskMachineStat) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineTaskMachineStat implement json.Marshaler.
func (m *PipelineTaskMachineStat) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineTaskMachineHostStat implement json.Marshaler.
func (m *PipelineTaskMachineHostStat) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineTaskMachineHostStat implement json.Marshaler.
func (m *PipelineTaskMachineHostStat) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineTaskMachinePodStat implement json.Marshaler.
func (m *PipelineTaskMachinePodStat) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineTaskMachinePodStat implement json.Marshaler.
func (m *PipelineTaskMachinePodStat) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineTaskMachineLoadStat implement json.Marshaler.
func (m *PipelineTaskMachineLoadStat) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineTaskMachineLoadStat implement json.Marshaler.
func (m *PipelineTaskMachineLoadStat) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineTaskMachineMemStat implement json.Marshaler.
func (m *PipelineTaskMachineMemStat) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineTaskMachineMemStat implement json.Marshaler.
func (m *PipelineTaskMachineMemStat) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineTaskMachineSwapStat implement json.Marshaler.
func (m *PipelineTaskMachineSwapStat) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineTaskMachineSwapStat implement json.Marshaler.
func (m *PipelineTaskMachineSwapStat) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineTaskActionDetail implement json.Marshaler.
func (m *PipelineTaskActionDetail) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineTaskActionDetail implement json.Marshaler.
func (m *PipelineTaskActionDetail) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// SnippetConfig implement json.Marshaler.
func (m *SnippetConfig) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// SnippetConfig implement json.Marshaler.
func (m *SnippetConfig) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// DefinitionPageInfo implement json.Marshaler.
func (m *DefinitionPageInfo) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// DefinitionPageInfo implement json.Marshaler.
func (m *DefinitionPageInfo) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}
