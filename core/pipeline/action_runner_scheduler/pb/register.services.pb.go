// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: runner_task.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterRunnerTaskServiceImp runner_task.proto
func RegisterRunnerTaskServiceImp(regester transport.Register, srv RunnerTaskServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterRunnerTaskServiceHandler(regester, RunnerTaskServiceHandler(srv), _ops.HTTP...)
	RegisterRunnerTaskServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.core.pipeline.action_runner_scheduler.RunnerTaskService",
	)
}

var (
	runnerTaskServiceClientType  = reflect.TypeOf((*RunnerTaskServiceClient)(nil)).Elem()
	runnerTaskServiceServerType  = reflect.TypeOf((*RunnerTaskServiceServer)(nil)).Elem()
	runnerTaskServiceHandlerType = reflect.TypeOf((*RunnerTaskServiceHandler)(nil)).Elem()
)

// RunnerTaskServiceClientType .
func RunnerTaskServiceClientType() reflect.Type { return runnerTaskServiceClientType }

// RunnerTaskServiceServerType .
func RunnerTaskServiceServerType() reflect.Type { return runnerTaskServiceServerType }

// RunnerTaskServiceHandlerType .
func RunnerTaskServiceHandlerType() reflect.Type { return runnerTaskServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		runnerTaskServiceClientType,
		// server types
		runnerTaskServiceServerType,
		// handler types
		runnerTaskServiceHandlerType,
	}
}
