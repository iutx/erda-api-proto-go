// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: org.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterOrgServiceImp org.proto
func RegisterOrgServiceImp(regester transport.Register, srv OrgServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterOrgServiceHandler(regester, OrgServiceHandler(srv), _ops.HTTP...)
	RegisterOrgServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.core.org.OrgService",
	)
}

var (
	orgServiceClientType  = reflect.TypeOf((*OrgServiceClient)(nil)).Elem()
	orgServiceServerType  = reflect.TypeOf((*OrgServiceServer)(nil)).Elem()
	orgServiceHandlerType = reflect.TypeOf((*OrgServiceHandler)(nil)).Elem()
)

// OrgServiceClientType .
func OrgServiceClientType() reflect.Type { return orgServiceClientType }

// OrgServiceServerType .
func OrgServiceServerType() reflect.Type { return orgServiceServerType }

// OrgServiceHandlerType .
func OrgServiceHandlerType() reflect.Type { return orgServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		orgServiceClientType,
		// server types
		orgServiceServerType,
		// handler types
		orgServiceHandlerType,
	}
}
