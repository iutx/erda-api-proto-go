// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: file.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterFileServiceImp file.proto
func RegisterFileServiceImp(regester transport.Register, srv FileServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterFileServiceHandler(regester, FileServiceHandler(srv), _ops.HTTP...)
	RegisterFileServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.core.file.FileService",
	)
}

var (
	fileServiceClientType  = reflect.TypeOf((*FileServiceClient)(nil)).Elem()
	fileServiceServerType  = reflect.TypeOf((*FileServiceServer)(nil)).Elem()
	fileServiceHandlerType = reflect.TypeOf((*FileServiceHandler)(nil)).Elem()
)

// FileServiceClientType .
func FileServiceClientType() reflect.Type { return fileServiceClientType }

// FileServiceServerType .
func FileServiceServerType() reflect.Type { return fileServiceServerType }

// FileServiceHandlerType .
func FileServiceHandlerType() reflect.Type { return fileServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		fileServiceClientType,
		// server types
		fileServiceServerType,
		// handler types
		fileServiceHandlerType,
	}
}
