// Code generated by protoc-gen-go-client. DO NOT EDIT.
// Sources: core-project.proto

package client

import (
	context "context"

	grpc "github.com/erda-project/erda-infra/pkg/transport/grpc"
	pb "github.com/erda-project/erda-proto-go/core/project/pb"
	grpc1 "google.golang.org/grpc"
)

// Client provide all service clients.
type Client interface {
	// Project core-project.proto
	Project() pb.ProjectClient
}

// New create client
func New(cc grpc.ClientConnInterface) Client {
	return &serviceClients{
		project: pb.NewProjectClient(cc),
	}
}

type serviceClients struct {
	project pb.ProjectClient
}

func (c *serviceClients) Project() pb.ProjectClient {
	return c.project
}

type projectWrapper struct {
	client pb.ProjectClient
	opts   []grpc1.CallOption
}

func (s *projectWrapper) CheckProjectExist(ctx context.Context, req *pb.CheckProjectExistReq) (*pb.CheckProjectExistResp, error) {
	return s.client.CheckProjectExist(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *projectWrapper) GetProjectByID(ctx context.Context, req *pb.GetProjectByIDReq) (*pb.ProjectDto, error) {
	return s.client.GetProjectByID(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}
