// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: core-project.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterProjectImp core-project.proto
func RegisterProjectImp(regester transport.Register, srv ProjectServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterProjectHandler(regester, ProjectHandler(srv), _ops.HTTP...)
	RegisterProjectServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.core.project.Project",
	)
}

var (
	projectClientType  = reflect.TypeOf((*ProjectClient)(nil)).Elem()
	projectServerType  = reflect.TypeOf((*ProjectServer)(nil)).Elem()
	projectHandlerType = reflect.TypeOf((*ProjectHandler)(nil)).Elem()
)

// ProjectClientType .
func ProjectClientType() reflect.Type { return projectClientType }

// ProjectServerType .
func ProjectServerType() reflect.Type { return projectServerType }

// ProjectHandlerType .
func ProjectHandlerType() reflect.Type { return projectHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		projectClientType,
		// server types
		projectServerType,
		// handler types
		projectHandlerType,
	}
}
