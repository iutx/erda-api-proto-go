// Code generated by protoc-gen-go-client. DO NOT EDIT.
// Sources: officer.proto

package client

import (
	context "context"

	grpc "github.com/erda-project/erda-infra/pkg/transport/grpc"
	pb "github.com/erda-project/erda-proto-go/openapiv1/officer/pb"
	grpc1 "google.golang.org/grpc"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// Client provide all service clients.
type Client interface {
	// Officer officer.proto
	Officer() pb.OfficerClient
}

// New create client
func New(cc grpc.ClientConnInterface) Client {
	return &serviceClients{
		officer: pb.NewOfficerClient(cc),
	}
}

type serviceClients struct {
	officer pb.OfficerClient
}

func (c *serviceClients) Officer() pb.OfficerClient {
	return c.officer
}

type officerWrapper struct {
	client pb.OfficerClient
	opts   []grpc1.CallOption
}

func (s *officerWrapper) OFFICER_FETCH_SCRIPT(ctx context.Context, req *pb.OFFICER_FETCH_SCRIPT_Request) (*emptypb.Empty, error) {
	return s.client.OFFICER_FETCH_SCRIPT(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *officerWrapper) OFFICER_GET_PRICE(ctx context.Context, req *pb.OFFICER_GET_PRICE_Request) (*emptypb.Empty, error) {
	return s.client.OFFICER_GET_PRICE(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *officerWrapper) OFFICER_GET_SCRIPT_INFO(ctx context.Context, req *pb.OFFICER_GET_SCRIPT_INFO_Request) (*pb.ScriptInfo, error) {
	return s.client.OFFICER_GET_SCRIPT_INFO(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}
