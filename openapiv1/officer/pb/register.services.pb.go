// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: officer.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterOfficerImp officer.proto
func RegisterOfficerImp(regester transport.Register, srv OfficerServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterOfficerHandler(regester, OfficerHandler(srv), _ops.HTTP...)
	RegisterOfficerServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.openapiv1.officer.Officer",
	)
}

var (
	officerClientType  = reflect.TypeOf((*OfficerClient)(nil)).Elem()
	officerServerType  = reflect.TypeOf((*OfficerServer)(nil)).Elem()
	officerHandlerType = reflect.TypeOf((*OfficerHandler)(nil)).Elem()
)

// OfficerClientType .
func OfficerClientType() reflect.Type { return officerClientType }

// OfficerServerType .
func OfficerServerType() reflect.Type { return officerServerType }

// OfficerHandlerType .
func OfficerHandlerType() reflect.Type { return officerHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		officerClientType,
		// server types
		officerServerType,
		// handler types
		officerHandlerType,
	}
}
