// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: openapi.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterOpenapiImp openapi.proto
func RegisterOpenapiImp(regester transport.Register, srv OpenapiServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterOpenapiHandler(regester, OpenapiHandler(srv), _ops.HTTP...)
	RegisterOpenapiServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.openapiv1.openapi.Openapi",
	)
}

var (
	openapiClientType  = reflect.TypeOf((*OpenapiClient)(nil)).Elem()
	openapiServerType  = reflect.TypeOf((*OpenapiServer)(nil)).Elem()
	openapiHandlerType = reflect.TypeOf((*OpenapiHandler)(nil)).Elem()
)

// OpenapiClientType .
func OpenapiClientType() reflect.Type { return openapiClientType }

// OpenapiServerType .
func OpenapiServerType() reflect.Type { return openapiServerType }

// OpenapiHandlerType .
func OpenapiHandlerType() reflect.Type { return openapiHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		openapiClientType,
		// server types
		openapiServerType,
		// handler types
		openapiHandlerType,
	}
}
