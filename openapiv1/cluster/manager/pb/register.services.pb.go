// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: cluster_manager.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterClusterManagerImp cluster_manager.proto
func RegisterClusterManagerImp(regester transport.Register, srv ClusterManagerServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterClusterManagerHandler(regester, ClusterManagerHandler(srv), _ops.HTTP...)
	RegisterClusterManagerServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.openapiv1.cluster.ClusterManager",
	)
}

var (
	clusterManagerClientType  = reflect.TypeOf((*ClusterManagerClient)(nil)).Elem()
	clusterManagerServerType  = reflect.TypeOf((*ClusterManagerServer)(nil)).Elem()
	clusterManagerHandlerType = reflect.TypeOf((*ClusterManagerHandler)(nil)).Elem()
)

// ClusterManagerClientType .
func ClusterManagerClientType() reflect.Type { return clusterManagerClientType }

// ClusterManagerServerType .
func ClusterManagerServerType() reflect.Type { return clusterManagerServerType }

// ClusterManagerHandlerType .
func ClusterManagerHandlerType() reflect.Type { return clusterManagerHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		clusterManagerClientType,
		// server types
		clusterManagerServerType,
		// handler types
		clusterManagerHandlerType,
	}
}
