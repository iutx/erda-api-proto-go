// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: monitor.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterMonitorImp monitor.proto
func RegisterMonitorImp(regester transport.Register, srv MonitorServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterMonitorHandler(regester, MonitorHandler(srv), _ops.HTTP...)
	RegisterMonitorServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.openapiv1.monitor.Monitor",
	)
}

var (
	monitorClientType  = reflect.TypeOf((*MonitorClient)(nil)).Elem()
	monitorServerType  = reflect.TypeOf((*MonitorServer)(nil)).Elem()
	monitorHandlerType = reflect.TypeOf((*MonitorHandler)(nil)).Elem()
)

// MonitorClientType .
func MonitorClientType() reflect.Type { return monitorClientType }

// MonitorServerType .
func MonitorServerType() reflect.Type { return monitorServerType }

// MonitorHandlerType .
func MonitorHandlerType() reflect.Type { return monitorHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		monitorClientType,
		// server types
		monitorServerType,
		// handler types
		monitorHandlerType,
	}
}
