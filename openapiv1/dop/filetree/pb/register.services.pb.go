// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: dop_filetree.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterDopFiletreeImp dop_filetree.proto
func RegisterDopFiletreeImp(regester transport.Register, srv DopFiletreeServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterDopFiletreeHandler(regester, DopFiletreeHandler(srv), _ops.HTTP...)
	RegisterDopFiletreeServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.openapiv1.dop.DopFiletree",
	)
}

var (
	dopFiletreeClientType  = reflect.TypeOf((*DopFiletreeClient)(nil)).Elem()
	dopFiletreeServerType  = reflect.TypeOf((*DopFiletreeServer)(nil)).Elem()
	dopFiletreeHandlerType = reflect.TypeOf((*DopFiletreeHandler)(nil)).Elem()
)

// DopFiletreeClientType .
func DopFiletreeClientType() reflect.Type { return dopFiletreeClientType }

// DopFiletreeServerType .
func DopFiletreeServerType() reflect.Type { return dopFiletreeServerType }

// DopFiletreeHandlerType .
func DopFiletreeHandlerType() reflect.Type { return dopFiletreeHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		dopFiletreeClientType,
		// server types
		dopFiletreeServerType,
		// handler types
		dopFiletreeHandlerType,
	}
}
