// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: dop.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterDopImp dop.proto
func RegisterDopImp(regester transport.Register, srv DopServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterDopHandler(regester, DopHandler(srv), _ops.HTTP...)
	RegisterDopServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.openapiv1.dop.Dop",
	)
}

var (
	dopClientType  = reflect.TypeOf((*DopClient)(nil)).Elem()
	dopServerType  = reflect.TypeOf((*DopServer)(nil)).Elem()
	dopHandlerType = reflect.TypeOf((*DopHandler)(nil)).Elem()
)

// DopClientType .
func DopClientType() reflect.Type { return dopClientType }

// DopServerType .
func DopServerType() reflect.Type { return dopServerType }

// DopHandlerType .
func DopHandlerType() reflect.Type { return dopHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		dopClientType,
		// server types
		dopServerType,
		// handler types
		dopHandlerType,
	}
}
