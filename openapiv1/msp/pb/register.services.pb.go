// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: msp.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterMspImp msp.proto
func RegisterMspImp(regester transport.Register, srv MspServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterMspHandler(regester, MspHandler(srv), _ops.HTTP...)
	RegisterMspServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.openapiv1.msp.Msp",
	)
}

var (
	mspClientType  = reflect.TypeOf((*MspClient)(nil)).Elem()
	mspServerType  = reflect.TypeOf((*MspServer)(nil)).Elem()
	mspHandlerType = reflect.TypeOf((*MspHandler)(nil)).Elem()
)

// MspClientType .
func MspClientType() reflect.Type { return mspClientType }

// MspServerType .
func MspServerType() reflect.Type { return mspServerType }

// MspHandlerType .
func MspHandlerType() reflect.Type { return mspHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		mspClientType,
		// server types
		mspServerType,
		// handler types
		mspHandlerType,
	}
}
