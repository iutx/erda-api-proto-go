// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: msp_apm_alert.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterMspApmAlertImp msp_apm_alert.proto
func RegisterMspApmAlertImp(regester transport.Register, srv MspApmAlertServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterMspApmAlertHandler(regester, MspApmAlertHandler(srv), _ops.HTTP...)
	RegisterMspApmAlertServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.openapiv1.msp.MspApmAlert",
	)
}

var (
	mspApmAlertClientType  = reflect.TypeOf((*MspApmAlertClient)(nil)).Elem()
	mspApmAlertServerType  = reflect.TypeOf((*MspApmAlertServer)(nil)).Elem()
	mspApmAlertHandlerType = reflect.TypeOf((*MspApmAlertHandler)(nil)).Elem()
)

// MspApmAlertClientType .
func MspApmAlertClientType() reflect.Type { return mspApmAlertClientType }

// MspApmAlertServerType .
func MspApmAlertServerType() reflect.Type { return mspApmAlertServerType }

// MspApmAlertHandlerType .
func MspApmAlertHandlerType() reflect.Type { return mspApmAlertHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		mspApmAlertClientType,
		// server types
		mspApmAlertServerType,
		// handler types
		mspApmAlertHandlerType,
	}
}
