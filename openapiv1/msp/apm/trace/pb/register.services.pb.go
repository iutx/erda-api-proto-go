// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: msp_apm_trace.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterMspApmTraceImp msp_apm_trace.proto
func RegisterMspApmTraceImp(regester transport.Register, srv MspApmTraceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterMspApmTraceHandler(regester, MspApmTraceHandler(srv), _ops.HTTP...)
	RegisterMspApmTraceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.openapiv1.msp.MspApmTrace",
	)
}

var (
	mspApmTraceClientType  = reflect.TypeOf((*MspApmTraceClient)(nil)).Elem()
	mspApmTraceServerType  = reflect.TypeOf((*MspApmTraceServer)(nil)).Elem()
	mspApmTraceHandlerType = reflect.TypeOf((*MspApmTraceHandler)(nil)).Elem()
)

// MspApmTraceClientType .
func MspApmTraceClientType() reflect.Type { return mspApmTraceClientType }

// MspApmTraceServerType .
func MspApmTraceServerType() reflect.Type { return mspApmTraceServerType }

// MspApmTraceHandlerType .
func MspApmTraceHandlerType() reflect.Type { return mspApmTraceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		mspApmTraceClientType,
		// server types
		mspApmTraceServerType,
		// handler types
		mspApmTraceHandlerType,
	}
}
