// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: msp_apm_block.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterMspApmBlockImp msp_apm_block.proto
func RegisterMspApmBlockImp(regester transport.Register, srv MspApmBlockServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterMspApmBlockHandler(regester, MspApmBlockHandler(srv), _ops.HTTP...)
	RegisterMspApmBlockServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.openapiv1.msp.MspApmBlock",
	)
}

var (
	mspApmBlockClientType  = reflect.TypeOf((*MspApmBlockClient)(nil)).Elem()
	mspApmBlockServerType  = reflect.TypeOf((*MspApmBlockServer)(nil)).Elem()
	mspApmBlockHandlerType = reflect.TypeOf((*MspApmBlockHandler)(nil)).Elem()
)

// MspApmBlockClientType .
func MspApmBlockClientType() reflect.Type { return mspApmBlockClientType }

// MspApmBlockServerType .
func MspApmBlockServerType() reflect.Type { return mspApmBlockServerType }

// MspApmBlockHandlerType .
func MspApmBlockHandlerType() reflect.Type { return mspApmBlockHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		mspApmBlockClientType,
		// server types
		mspApmBlockServerType,
		// handler types
		mspApmBlockHandlerType,
	}
}
