// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: msp_tenant.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterMspTenantImp msp_tenant.proto
func RegisterMspTenantImp(regester transport.Register, srv MspTenantServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterMspTenantHandler(regester, MspTenantHandler(srv), _ops.HTTP...)
	RegisterMspTenantServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.openapiv1.msp.MspTenant",
	)
}

var (
	mspTenantClientType  = reflect.TypeOf((*MspTenantClient)(nil)).Elem()
	mspTenantServerType  = reflect.TypeOf((*MspTenantServer)(nil)).Elem()
	mspTenantHandlerType = reflect.TypeOf((*MspTenantHandler)(nil)).Elem()
)

// MspTenantClientType .
func MspTenantClientType() reflect.Type { return mspTenantClientType }

// MspTenantServerType .
func MspTenantServerType() reflect.Type { return mspTenantServerType }

// MspTenantHandlerType .
func MspTenantHandlerType() reflect.Type { return mspTenantHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		mspTenantClientType,
		// server types
		mspTenantServerType,
		// handler types
		mspTenantHandlerType,
	}
}
