// Code generated by protoc-gen-go-client. DO NOT EDIT.
// Sources: msp_tenant.proto

package client

import (
	context "context"

	grpc "github.com/erda-project/erda-infra/pkg/transport/grpc"
	pb "github.com/erda-project/erda-proto-go/openapiv1/msp/tenant/pb"
	grpc1 "google.golang.org/grpc"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// Client provide all service clients.
type Client interface {
	// MspTenant msp_tenant.proto
	MspTenant() pb.MspTenantClient
}

// New create client
func New(cc grpc.ClientConnInterface) Client {
	return &serviceClients{
		mspTenant: pb.NewMspTenantClient(cc),
	}
}

type serviceClients struct {
	mspTenant pb.MspTenantClient
}

func (c *serviceClients) MspTenant() pb.MspTenantClient {
	return c.mspTenant
}

type mspTenantWrapper struct {
	client pb.MspTenantClient
	opts   []grpc1.CallOption
}

func (s *mspTenantWrapper) CREATE_TENANTS(ctx context.Context, req *pb.CREATE_TENANTS_Request) (*emptypb.Empty, error) {
	return s.client.CREATE_TENANTS(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *mspTenantWrapper) GET_TENANTS(ctx context.Context, req *pb.GET_TENANTS_Request) (*emptypb.Empty, error) {
	return s.client.GET_TENANTS(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}
