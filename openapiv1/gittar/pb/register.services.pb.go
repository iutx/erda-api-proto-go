// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: gittar.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterGittarImp gittar.proto
func RegisterGittarImp(regester transport.Register, srv GittarServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterGittarHandler(regester, GittarHandler(srv), _ops.HTTP...)
	RegisterGittarServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.openapiv1.gittar.Gittar",
	)
}

var (
	gittarClientType  = reflect.TypeOf((*GittarClient)(nil)).Elem()
	gittarServerType  = reflect.TypeOf((*GittarServer)(nil)).Elem()
	gittarHandlerType = reflect.TypeOf((*GittarHandler)(nil)).Elem()
)

// GittarClientType .
func GittarClientType() reflect.Type { return gittarClientType }

// GittarServerType .
func GittarServerType() reflect.Type { return gittarServerType }

// GittarHandlerType .
func GittarHandlerType() reflect.Type { return gittarHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		gittarClientType,
		// server types
		gittarServerType,
		// handler types
		gittarHandlerType,
	}
}
