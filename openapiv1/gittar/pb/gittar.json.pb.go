// Code generated by protoc-gen-go-json. DO NOT EDIT.
// Source: gittar.proto

package pb

import (
	bytes "bytes"
	json "encoding/json"

	jsonpb "github.com/erda-project/erda-infra/pkg/transport/http/encoding/jsonpb"
	protojson "google.golang.org/protobuf/encoding/protojson"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "encoding/json" package it is being compiled against.
var _ json.Marshaler = (*Branch)(nil)
var _ json.Unmarshaler = (*Branch)(nil)
var _ json.Marshaler = (*CheckRun)(nil)
var _ json.Unmarshaler = (*CheckRun)(nil)
var _ json.Marshaler = (*CheckRuns)(nil)
var _ json.Unmarshaler = (*CheckRuns)(nil)
var _ json.Marshaler = (*Commit)(nil)
var _ json.Unmarshaler = (*Commit)(nil)
var _ json.Marshaler = (*CreateCheckRunResponse)(nil)
var _ json.Unmarshaler = (*CreateCheckRunResponse)(nil)
var _ json.Marshaler = (*DeleteEvent)(nil)
var _ json.Unmarshaler = (*DeleteEvent)(nil)
var _ json.Marshaler = (*Diff)(nil)
var _ json.Unmarshaler = (*Diff)(nil)
var _ json.Marshaler = (*EditActionItem)(nil)
var _ json.Unmarshaler = (*EditActionItem)(nil)
var _ json.Marshaler = (*GITTAR_ARCHIVE_Request)(nil)
var _ json.Unmarshaler = (*GITTAR_ARCHIVE_Request)(nil)
var _ json.Marshaler = (*GITTAR_BLAME_Request)(nil)
var _ json.Unmarshaler = (*GITTAR_BLAME_Request)(nil)
var _ json.Marshaler = (*GITTAR_BLOB_Request)(nil)
var _ json.Unmarshaler = (*GITTAR_BLOB_Request)(nil)
var _ json.Marshaler = (*GITTAR_BRANCH_DELETE_Request)(nil)
var _ json.Unmarshaler = (*GITTAR_BRANCH_DELETE_Request)(nil)
var _ json.Marshaler = (*GITTAR_BRANCH_Request)(nil)
var _ json.Unmarshaler = (*GITTAR_BRANCH_Request)(nil)
var _ json.Marshaler = (*GITTAR_COMMIT_Request)(nil)
var _ json.Unmarshaler = (*GITTAR_COMMIT_Request)(nil)
var _ json.Marshaler = (*GITTAR_COMPARE_Request)(nil)
var _ json.Unmarshaler = (*GITTAR_COMPARE_Request)(nil)
var _ json.Marshaler = (*GITTAR_MERGE_ACTION_POST_Request)(nil)
var _ json.Unmarshaler = (*GITTAR_MERGE_ACTION_POST_Request)(nil)
var _ json.Marshaler = (*GITTAR_MERGE_ACTION_QUERY_Request)(nil)
var _ json.Unmarshaler = (*GITTAR_MERGE_ACTION_QUERY_Request)(nil)
var _ json.Marshaler = (*GITTAR_MERGE_GET_Request)(nil)
var _ json.Unmarshaler = (*GITTAR_MERGE_GET_Request)(nil)
var _ json.Marshaler = (*GITTAR_MR_TEMPLATES_Request)(nil)
var _ json.Unmarshaler = (*GITTAR_MR_TEMPLATES_Request)(nil)
var _ json.Marshaler = (*GITTAR_RAW_Request)(nil)
var _ json.Unmarshaler = (*GITTAR_RAW_Request)(nil)
var _ json.Marshaler = (*GITTAR_REPO_STATS_DEFAULT_Request)(nil)
var _ json.Unmarshaler = (*GITTAR_REPO_STATS_DEFAULT_Request)(nil)
var _ json.Marshaler = (*GITTAR_REPO_STATS_Request)(nil)
var _ json.Unmarshaler = (*GITTAR_REPO_STATS_Request)(nil)
var _ json.Marshaler = (*GITTAR_TAG_DELETE_Request)(nil)
var _ json.Unmarshaler = (*GITTAR_TAG_DELETE_Request)(nil)
var _ json.Marshaler = (*GITTAR_TAG_Request)(nil)
var _ json.Unmarshaler = (*GITTAR_TAG_Request)(nil)
var _ json.Marshaler = (*GITTAR_TREE_Request)(nil)
var _ json.Unmarshaler = (*GITTAR_TREE_Request)(nil)
var _ json.Marshaler = (*GittarBlameResponse)(nil)
var _ json.Unmarshaler = (*GittarBlameResponse)(nil)
var _ json.Marshaler = (*GittarBlobData)(nil)
var _ json.Unmarshaler = (*GittarBlobData)(nil)
var _ json.Marshaler = (*GittarBlobResponse)(nil)
var _ json.Unmarshaler = (*GittarBlobResponse)(nil)
var _ json.Marshaler = (*GittarBranchesResponse)(nil)
var _ json.Unmarshaler = (*GittarBranchesResponse)(nil)
var _ json.Marshaler = (*GittarCommitResponse)(nil)
var _ json.Unmarshaler = (*GittarCommitResponse)(nil)
var _ json.Marshaler = (*GittarCommitsRequest)(nil)
var _ json.Unmarshaler = (*GittarCommitsRequest)(nil)
var _ json.Marshaler = (*GittarCommitsResponse)(nil)
var _ json.Unmarshaler = (*GittarCommitsResponse)(nil)
var _ json.Marshaler = (*GittarCompareData)(nil)
var _ json.Unmarshaler = (*GittarCompareData)(nil)
var _ json.Marshaler = (*GittarCompareResponse)(nil)
var _ json.Unmarshaler = (*GittarCompareResponse)(nil)
var _ json.Marshaler = (*GittarCreateBranchRequest)(nil)
var _ json.Unmarshaler = (*GittarCreateBranchRequest)(nil)
var _ json.Marshaler = (*GittarCreateBranchResponse)(nil)
var _ json.Unmarshaler = (*GittarCreateBranchResponse)(nil)
var _ json.Marshaler = (*GittarCreateCommitRequest)(nil)
var _ json.Unmarshaler = (*GittarCreateCommitRequest)(nil)
var _ json.Marshaler = (*GittarCreateCommitResponse)(nil)
var _ json.Unmarshaler = (*GittarCreateCommitResponse)(nil)
var _ json.Marshaler = (*GittarCreateMergeRequest)(nil)
var _ json.Unmarshaler = (*GittarCreateMergeRequest)(nil)
var _ json.Marshaler = (*GittarCreateMergeResponse)(nil)
var _ json.Unmarshaler = (*GittarCreateMergeResponse)(nil)
var _ json.Marshaler = (*GittarCreateTagRequest)(nil)
var _ json.Unmarshaler = (*GittarCreateTagRequest)(nil)
var _ json.Marshaler = (*GittarCreateTagResponse)(nil)
var _ json.Unmarshaler = (*GittarCreateTagResponse)(nil)
var _ json.Marshaler = (*GittarDeleteBranchResponse)(nil)
var _ json.Unmarshaler = (*GittarDeleteBranchResponse)(nil)
var _ json.Marshaler = (*GittarDeleteResponse)(nil)
var _ json.Unmarshaler = (*GittarDeleteResponse)(nil)
var _ json.Marshaler = (*GittarDiffData)(nil)
var _ json.Unmarshaler = (*GittarDiffData)(nil)
var _ json.Marshaler = (*GittarMergeStatusData)(nil)
var _ json.Unmarshaler = (*GittarMergeStatusData)(nil)
var _ json.Marshaler = (*GittarMergeStatusRequest)(nil)
var _ json.Unmarshaler = (*GittarMergeStatusRequest)(nil)
var _ json.Marshaler = (*GittarMergeStatusResponse)(nil)
var _ json.Unmarshaler = (*GittarMergeStatusResponse)(nil)
var _ json.Marshaler = (*GittarMergeTemplatesResponse)(nil)
var _ json.Unmarshaler = (*GittarMergeTemplatesResponse)(nil)
var _ json.Marshaler = (*GittarQueryMrDetailResponse)(nil)
var _ json.Unmarshaler = (*GittarQueryMrDetailResponse)(nil)
var _ json.Marshaler = (*GittarQueryMrRequest)(nil)
var _ json.Unmarshaler = (*GittarQueryMrRequest)(nil)
var _ json.Marshaler = (*GittarQueryMrResponse)(nil)
var _ json.Unmarshaler = (*GittarQueryMrResponse)(nil)
var _ json.Marshaler = (*GittarStatsData)(nil)
var _ json.Unmarshaler = (*GittarStatsData)(nil)
var _ json.Marshaler = (*GittarStatsResponse)(nil)
var _ json.Unmarshaler = (*GittarStatsResponse)(nil)
var _ json.Marshaler = (*GittarTagsResponse)(nil)
var _ json.Unmarshaler = (*GittarTagsResponse)(nil)
var _ json.Marshaler = (*GittarTreeSearchRequest)(nil)
var _ json.Unmarshaler = (*GittarTreeSearchRequest)(nil)
var _ json.Marshaler = (*GittarTreeSearchResponse)(nil)
var _ json.Unmarshaler = (*GittarTreeSearchResponse)(nil)
var _ json.Marshaler = (*MergeRequestInfo)(nil)
var _ json.Unmarshaler = (*MergeRequestInfo)(nil)
var _ json.Marshaler = (*MergeTemplatesResponseData)(nil)
var _ json.Unmarshaler = (*MergeTemplatesResponseData)(nil)
var _ json.Marshaler = (*QueryMergeRequestsData)(nil)
var _ json.Unmarshaler = (*QueryMergeRequestsData)(nil)
var _ json.Marshaler = (*REPO_DELETE_Request)(nil)
var _ json.Unmarshaler = (*REPO_DELETE_Request)(nil)
var _ json.Marshaler = (*REPO_GET_Request)(nil)
var _ json.Unmarshaler = (*REPO_GET_Request)(nil)
var _ json.Marshaler = (*REPO_POST_Request)(nil)
var _ json.Unmarshaler = (*REPO_POST_Request)(nil)
var _ json.Marshaler = (*REPO_PUT_Request)(nil)
var _ json.Unmarshaler = (*REPO_PUT_Request)(nil)
var _ json.Marshaler = (*Tag)(nil)
var _ json.Unmarshaler = (*Tag)(nil)

// Branch implement json.Marshaler.
func (m *Branch) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Branch implement json.Marshaler.
func (m *Branch) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CheckRun implement json.Marshaler.
func (m *CheckRun) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CheckRun implement json.Marshaler.
func (m *CheckRun) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CheckRuns implement json.Marshaler.
func (m *CheckRuns) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CheckRuns implement json.Marshaler.
func (m *CheckRuns) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Commit implement json.Marshaler.
func (m *Commit) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Commit implement json.Marshaler.
func (m *Commit) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CreateCheckRunResponse implement json.Marshaler.
func (m *CreateCheckRunResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CreateCheckRunResponse implement json.Marshaler.
func (m *CreateCheckRunResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// DeleteEvent implement json.Marshaler.
func (m *DeleteEvent) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// DeleteEvent implement json.Marshaler.
func (m *DeleteEvent) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Diff implement json.Marshaler.
func (m *Diff) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Diff implement json.Marshaler.
func (m *Diff) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// EditActionItem implement json.Marshaler.
func (m *EditActionItem) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// EditActionItem implement json.Marshaler.
func (m *EditActionItem) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GITTAR_ARCHIVE_Request implement json.Marshaler.
func (m *GITTAR_ARCHIVE_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GITTAR_ARCHIVE_Request implement json.Marshaler.
func (m *GITTAR_ARCHIVE_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GITTAR_BLAME_Request implement json.Marshaler.
func (m *GITTAR_BLAME_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GITTAR_BLAME_Request implement json.Marshaler.
func (m *GITTAR_BLAME_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GITTAR_BLOB_Request implement json.Marshaler.
func (m *GITTAR_BLOB_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GITTAR_BLOB_Request implement json.Marshaler.
func (m *GITTAR_BLOB_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GITTAR_BRANCH_DELETE_Request implement json.Marshaler.
func (m *GITTAR_BRANCH_DELETE_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GITTAR_BRANCH_DELETE_Request implement json.Marshaler.
func (m *GITTAR_BRANCH_DELETE_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GITTAR_BRANCH_Request implement json.Marshaler.
func (m *GITTAR_BRANCH_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GITTAR_BRANCH_Request implement json.Marshaler.
func (m *GITTAR_BRANCH_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GITTAR_COMMIT_Request implement json.Marshaler.
func (m *GITTAR_COMMIT_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GITTAR_COMMIT_Request implement json.Marshaler.
func (m *GITTAR_COMMIT_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GITTAR_COMPARE_Request implement json.Marshaler.
func (m *GITTAR_COMPARE_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GITTAR_COMPARE_Request implement json.Marshaler.
func (m *GITTAR_COMPARE_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GITTAR_MERGE_ACTION_POST_Request implement json.Marshaler.
func (m *GITTAR_MERGE_ACTION_POST_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GITTAR_MERGE_ACTION_POST_Request implement json.Marshaler.
func (m *GITTAR_MERGE_ACTION_POST_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GITTAR_MERGE_ACTION_QUERY_Request implement json.Marshaler.
func (m *GITTAR_MERGE_ACTION_QUERY_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GITTAR_MERGE_ACTION_QUERY_Request implement json.Marshaler.
func (m *GITTAR_MERGE_ACTION_QUERY_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GITTAR_MERGE_GET_Request implement json.Marshaler.
func (m *GITTAR_MERGE_GET_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GITTAR_MERGE_GET_Request implement json.Marshaler.
func (m *GITTAR_MERGE_GET_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GITTAR_MR_TEMPLATES_Request implement json.Marshaler.
func (m *GITTAR_MR_TEMPLATES_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GITTAR_MR_TEMPLATES_Request implement json.Marshaler.
func (m *GITTAR_MR_TEMPLATES_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GITTAR_RAW_Request implement json.Marshaler.
func (m *GITTAR_RAW_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GITTAR_RAW_Request implement json.Marshaler.
func (m *GITTAR_RAW_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GITTAR_REPO_STATS_DEFAULT_Request implement json.Marshaler.
func (m *GITTAR_REPO_STATS_DEFAULT_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GITTAR_REPO_STATS_DEFAULT_Request implement json.Marshaler.
func (m *GITTAR_REPO_STATS_DEFAULT_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GITTAR_REPO_STATS_Request implement json.Marshaler.
func (m *GITTAR_REPO_STATS_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GITTAR_REPO_STATS_Request implement json.Marshaler.
func (m *GITTAR_REPO_STATS_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GITTAR_TAG_DELETE_Request implement json.Marshaler.
func (m *GITTAR_TAG_DELETE_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GITTAR_TAG_DELETE_Request implement json.Marshaler.
func (m *GITTAR_TAG_DELETE_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GITTAR_TAG_Request implement json.Marshaler.
func (m *GITTAR_TAG_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GITTAR_TAG_Request implement json.Marshaler.
func (m *GITTAR_TAG_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GITTAR_TREE_Request implement json.Marshaler.
func (m *GITTAR_TREE_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GITTAR_TREE_Request implement json.Marshaler.
func (m *GITTAR_TREE_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarBlameResponse implement json.Marshaler.
func (m *GittarBlameResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarBlameResponse implement json.Marshaler.
func (m *GittarBlameResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarBlobData implement json.Marshaler.
func (m *GittarBlobData) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarBlobData implement json.Marshaler.
func (m *GittarBlobData) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarBlobResponse implement json.Marshaler.
func (m *GittarBlobResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarBlobResponse implement json.Marshaler.
func (m *GittarBlobResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarBranchesResponse implement json.Marshaler.
func (m *GittarBranchesResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarBranchesResponse implement json.Marshaler.
func (m *GittarBranchesResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarCommitResponse implement json.Marshaler.
func (m *GittarCommitResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarCommitResponse implement json.Marshaler.
func (m *GittarCommitResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarCommitsRequest implement json.Marshaler.
func (m *GittarCommitsRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarCommitsRequest implement json.Marshaler.
func (m *GittarCommitsRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarCommitsResponse implement json.Marshaler.
func (m *GittarCommitsResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarCommitsResponse implement json.Marshaler.
func (m *GittarCommitsResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarCompareData implement json.Marshaler.
func (m *GittarCompareData) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarCompareData implement json.Marshaler.
func (m *GittarCompareData) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarCompareResponse implement json.Marshaler.
func (m *GittarCompareResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarCompareResponse implement json.Marshaler.
func (m *GittarCompareResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarCreateBranchRequest implement json.Marshaler.
func (m *GittarCreateBranchRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarCreateBranchRequest implement json.Marshaler.
func (m *GittarCreateBranchRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarCreateBranchResponse implement json.Marshaler.
func (m *GittarCreateBranchResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarCreateBranchResponse implement json.Marshaler.
func (m *GittarCreateBranchResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarCreateCommitRequest implement json.Marshaler.
func (m *GittarCreateCommitRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarCreateCommitRequest implement json.Marshaler.
func (m *GittarCreateCommitRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarCreateCommitResponse implement json.Marshaler.
func (m *GittarCreateCommitResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarCreateCommitResponse implement json.Marshaler.
func (m *GittarCreateCommitResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarCreateMergeRequest implement json.Marshaler.
func (m *GittarCreateMergeRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarCreateMergeRequest implement json.Marshaler.
func (m *GittarCreateMergeRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarCreateMergeResponse implement json.Marshaler.
func (m *GittarCreateMergeResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarCreateMergeResponse implement json.Marshaler.
func (m *GittarCreateMergeResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarCreateTagRequest implement json.Marshaler.
func (m *GittarCreateTagRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarCreateTagRequest implement json.Marshaler.
func (m *GittarCreateTagRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarCreateTagResponse implement json.Marshaler.
func (m *GittarCreateTagResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarCreateTagResponse implement json.Marshaler.
func (m *GittarCreateTagResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarDeleteBranchResponse implement json.Marshaler.
func (m *GittarDeleteBranchResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarDeleteBranchResponse implement json.Marshaler.
func (m *GittarDeleteBranchResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarDeleteResponse implement json.Marshaler.
func (m *GittarDeleteResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarDeleteResponse implement json.Marshaler.
func (m *GittarDeleteResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarDiffData implement json.Marshaler.
func (m *GittarDiffData) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarDiffData implement json.Marshaler.
func (m *GittarDiffData) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarMergeStatusData implement json.Marshaler.
func (m *GittarMergeStatusData) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarMergeStatusData implement json.Marshaler.
func (m *GittarMergeStatusData) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarMergeStatusRequest implement json.Marshaler.
func (m *GittarMergeStatusRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarMergeStatusRequest implement json.Marshaler.
func (m *GittarMergeStatusRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarMergeStatusResponse implement json.Marshaler.
func (m *GittarMergeStatusResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarMergeStatusResponse implement json.Marshaler.
func (m *GittarMergeStatusResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarMergeTemplatesResponse implement json.Marshaler.
func (m *GittarMergeTemplatesResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarMergeTemplatesResponse implement json.Marshaler.
func (m *GittarMergeTemplatesResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarQueryMrDetailResponse implement json.Marshaler.
func (m *GittarQueryMrDetailResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarQueryMrDetailResponse implement json.Marshaler.
func (m *GittarQueryMrDetailResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarQueryMrRequest implement json.Marshaler.
func (m *GittarQueryMrRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarQueryMrRequest implement json.Marshaler.
func (m *GittarQueryMrRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarQueryMrResponse implement json.Marshaler.
func (m *GittarQueryMrResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarQueryMrResponse implement json.Marshaler.
func (m *GittarQueryMrResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarStatsData implement json.Marshaler.
func (m *GittarStatsData) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarStatsData implement json.Marshaler.
func (m *GittarStatsData) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarStatsResponse implement json.Marshaler.
func (m *GittarStatsResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarStatsResponse implement json.Marshaler.
func (m *GittarStatsResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarTagsResponse implement json.Marshaler.
func (m *GittarTagsResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarTagsResponse implement json.Marshaler.
func (m *GittarTagsResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarTreeSearchRequest implement json.Marshaler.
func (m *GittarTreeSearchRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarTreeSearchRequest implement json.Marshaler.
func (m *GittarTreeSearchRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GittarTreeSearchResponse implement json.Marshaler.
func (m *GittarTreeSearchResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GittarTreeSearchResponse implement json.Marshaler.
func (m *GittarTreeSearchResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// MergeRequestInfo implement json.Marshaler.
func (m *MergeRequestInfo) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// MergeRequestInfo implement json.Marshaler.
func (m *MergeRequestInfo) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// MergeTemplatesResponseData implement json.Marshaler.
func (m *MergeTemplatesResponseData) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// MergeTemplatesResponseData implement json.Marshaler.
func (m *MergeTemplatesResponseData) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// QueryMergeRequestsData implement json.Marshaler.
func (m *QueryMergeRequestsData) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// QueryMergeRequestsData implement json.Marshaler.
func (m *QueryMergeRequestsData) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// REPO_DELETE_Request implement json.Marshaler.
func (m *REPO_DELETE_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// REPO_DELETE_Request implement json.Marshaler.
func (m *REPO_DELETE_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// REPO_GET_Request implement json.Marshaler.
func (m *REPO_GET_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// REPO_GET_Request implement json.Marshaler.
func (m *REPO_GET_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// REPO_POST_Request implement json.Marshaler.
func (m *REPO_POST_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// REPO_POST_Request implement json.Marshaler.
func (m *REPO_POST_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// REPO_PUT_Request implement json.Marshaler.
func (m *REPO_PUT_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// REPO_PUT_Request implement json.Marshaler.
func (m *REPO_PUT_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Tag implement json.Marshaler.
func (m *Tag) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Tag implement json.Marshaler.
func (m *Tag) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}
