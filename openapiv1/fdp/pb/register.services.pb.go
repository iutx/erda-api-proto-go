// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: fdp.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterFdpImp fdp.proto
func RegisterFdpImp(regester transport.Register, srv FdpServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterFdpHandler(regester, FdpHandler(srv), _ops.HTTP...)
	RegisterFdpServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.openapiv1.fdp.Fdp",
	)
}

var (
	fdpClientType  = reflect.TypeOf((*FdpClient)(nil)).Elem()
	fdpServerType  = reflect.TypeOf((*FdpServer)(nil)).Elem()
	fdpHandlerType = reflect.TypeOf((*FdpHandler)(nil)).Elem()
)

// FdpClientType .
func FdpClientType() reflect.Type { return fdpClientType }

// FdpServerType .
func FdpServerType() reflect.Type { return fdpServerType }

// FdpHandlerType .
func FdpHandlerType() reflect.Type { return fdpHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		fdpClientType,
		// server types
		fdpServerType,
		// handler types
		fdpHandlerType,
	}
}
