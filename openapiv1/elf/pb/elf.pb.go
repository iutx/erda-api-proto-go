// generated by openapi-gen-protobuf

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: elf.proto

package pb

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/erda-project/erda-proto-go/common/pb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DependencyPackageList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListMetadata          *structpb.Value `protobuf:"bytes,1,opt,name=listMetadata,proto3" json:"listMetadata,omitempty"`
	DependencyPackageSpec *structpb.Value `protobuf:"bytes,2,opt,name=dependencyPackageSpec,proto3" json:"dependencyPackageSpec,omitempty"`
}

func (x *DependencyPackageList) Reset() {
	*x = DependencyPackageList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependencyPackageList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependencyPackageList) ProtoMessage() {}

func (x *DependencyPackageList) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependencyPackageList.ProtoReflect.Descriptor instead.
func (*DependencyPackageList) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{0}
}

func (x *DependencyPackageList) GetListMetadata() *structpb.Value {
	if x != nil {
		return x.ListMetadata
	}
	return nil
}

func (x *DependencyPackageList) GetDependencyPackageSpec() *structpb.Value {
	if x != nil {
		return x.DependencyPackageSpec
	}
	return nil
}

type DependencyPackageListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *structpb.Value `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DependencyPackageListResponse) Reset() {
	*x = DependencyPackageListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependencyPackageListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependencyPackageListResponse) ProtoMessage() {}

func (x *DependencyPackageListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependencyPackageListResponse.ProtoReflect.Descriptor instead.
func (*DependencyPackageListResponse) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{1}
}

func (x *DependencyPackageListResponse) GetData() *structpb.Value {
	if x != nil {
		return x.Data
	}
	return nil
}

type DependencyPackageSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*structpb.Value `protobuf:"bytes,1,rep,name=items,json=data,proto3" json:"items,omitempty"`
}

func (x *DependencyPackageSpec) Reset() {
	*x = DependencyPackageSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependencyPackageSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependencyPackageSpec) ProtoMessage() {}

func (x *DependencyPackageSpec) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependencyPackageSpec.ProtoReflect.Descriptor instead.
func (*DependencyPackageSpec) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{2}
}

func (x *DependencyPackageSpec) GetItems() []*structpb.Value {
	if x != nil {
		return x.Items
	}
	return nil
}

type DependencyPackageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Packages []*structpb.Value `protobuf:"bytes,2,rep,name=packages,proto3" json:"packages,omitempty"`
}

func (x *DependencyPackageType) Reset() {
	*x = DependencyPackageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependencyPackageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependencyPackageType) ProtoMessage() {}

func (x *DependencyPackageType) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependencyPackageType.ProtoReflect.Descriptor instead.
func (*DependencyPackageType) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{3}
}

func (x *DependencyPackageType) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DependencyPackageType) GetPackages() []*structpb.Value {
	if x != nil {
		return x.Packages
	}
	return nil
}

type DependencyPackageTypeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version []string `protobuf:"bytes,2,rep,name=version,proto3" json:"version,omitempty"`
}

func (x *DependencyPackageTypeItem) Reset() {
	*x = DependencyPackageTypeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependencyPackageTypeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependencyPackageTypeItem) ProtoMessage() {}

func (x *DependencyPackageTypeItem) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependencyPackageTypeItem.ProtoReflect.Descriptor instead.
func (*DependencyPackageTypeItem) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{4}
}

func (x *DependencyPackageTypeItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DependencyPackageTypeItem) GetVersion() []string {
	if x != nil {
		return x.Version
	}
	return nil
}

type ELF_ENVIROMENT_DELETE_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ELF_ENVIROMENT_DELETE_Request) Reset() {
	*x = ELF_ENVIROMENT_DELETE_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ELF_ENVIROMENT_DELETE_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ELF_ENVIROMENT_DELETE_Request) ProtoMessage() {}

func (x *ELF_ENVIROMENT_DELETE_Request) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ELF_ENVIROMENT_DELETE_Request.ProtoReflect.Descriptor instead.
func (*ELF_ENVIROMENT_DELETE_Request) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{5}
}

type ELF_ENVIROMENT_GET_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ELF_ENVIROMENT_GET_Request) Reset() {
	*x = ELF_ENVIROMENT_GET_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ELF_ENVIROMENT_GET_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ELF_ENVIROMENT_GET_Request) ProtoMessage() {}

func (x *ELF_ENVIROMENT_GET_Request) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ELF_ENVIROMENT_GET_Request.ProtoReflect.Descriptor instead.
func (*ELF_ENVIROMENT_GET_Request) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{6}
}

type ELF_ENVIROMENT_LIST_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ELF_ENVIROMENT_LIST_Request) Reset() {
	*x = ELF_ENVIROMENT_LIST_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ELF_ENVIROMENT_LIST_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ELF_ENVIROMENT_LIST_Request) ProtoMessage() {}

func (x *ELF_ENVIROMENT_LIST_Request) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ELF_ENVIROMENT_LIST_Request.ProtoReflect.Descriptor instead.
func (*ELF_ENVIROMENT_LIST_Request) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{7}
}

type ELF_NOTEBOOK_DELETE_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ELF_NOTEBOOK_DELETE_Request) Reset() {
	*x = ELF_NOTEBOOK_DELETE_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ELF_NOTEBOOK_DELETE_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ELF_NOTEBOOK_DELETE_Request) ProtoMessage() {}

func (x *ELF_NOTEBOOK_DELETE_Request) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ELF_NOTEBOOK_DELETE_Request.ProtoReflect.Descriptor instead.
func (*ELF_NOTEBOOK_DELETE_Request) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{8}
}

type ELF_NOTEBOOK_GET_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ELF_NOTEBOOK_GET_Request) Reset() {
	*x = ELF_NOTEBOOK_GET_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ELF_NOTEBOOK_GET_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ELF_NOTEBOOK_GET_Request) ProtoMessage() {}

func (x *ELF_NOTEBOOK_GET_Request) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ELF_NOTEBOOK_GET_Request.ProtoReflect.Descriptor instead.
func (*ELF_NOTEBOOK_GET_Request) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{9}
}

type ELF_NOTEBOOK_LIST_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ELF_NOTEBOOK_LIST_Request) Reset() {
	*x = ELF_NOTEBOOK_LIST_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ELF_NOTEBOOK_LIST_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ELF_NOTEBOOK_LIST_Request) ProtoMessage() {}

func (x *ELF_NOTEBOOK_LIST_Request) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ELF_NOTEBOOK_LIST_Request.ProtoReflect.Descriptor instead.
func (*ELF_NOTEBOOK_LIST_Request) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{10}
}

type ELF_PACKAGE_LIST_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ELF_PACKAGE_LIST_Request) Reset() {
	*x = ELF_PACKAGE_LIST_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ELF_PACKAGE_LIST_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ELF_PACKAGE_LIST_Request) ProtoMessage() {}

func (x *ELF_PACKAGE_LIST_Request) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ELF_PACKAGE_LIST_Request.ProtoReflect.Descriptor instead.
func (*ELF_PACKAGE_LIST_Request) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{11}
}

type ElfMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               uint64                 `protobuf:"varint,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description      string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Workspace        string                 `protobuf:"bytes,4,opt,name=workspace,proto3" json:"workspace,omitempty"`
	OwnerName        string                 `protobuf:"bytes,5,opt,name=ownerName,proto3" json:"ownerName,omitempty"`
	OwnerID          uint64                 `protobuf:"varint,6,opt,name=ownerID,proto3" json:"ownerID,omitempty"`
	OrganizationID   uint64                 `protobuf:"varint,7,opt,name=organizationID,proto3" json:"organizationID,omitempty"`
	OrganizationName string                 `protobuf:"bytes,8,opt,name=organizationName,proto3" json:"organizationName,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *ElfMetadata) Reset() {
	*x = ElfMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ElfMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElfMetadata) ProtoMessage() {}

func (x *ElfMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElfMetadata.ProtoReflect.Descriptor instead.
func (*ElfMetadata) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{12}
}

func (x *ElfMetadata) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ElfMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ElfMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ElfMetadata) GetWorkspace() string {
	if x != nil {
		return x.Workspace
	}
	return ""
}

func (x *ElfMetadata) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *ElfMetadata) GetOwnerID() uint64 {
	if x != nil {
		return x.OwnerID
	}
	return 0
}

func (x *ElfMetadata) GetOrganizationID() uint64 {
	if x != nil {
		return x.OrganizationID
	}
	return 0
}

func (x *ElfMetadata) GetOrganizationName() string {
	if x != nil {
		return x.OrganizationName
	}
	return ""
}

func (x *ElfMetadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ElfMetadata) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ElfResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CPU    float64 `protobuf:"fixed64,1,opt,name=cPU,json=cpu,proto3" json:"cPU,omitempty"`
	Memory int64   `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
}

func (x *ElfResource) Reset() {
	*x = ElfResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ElfResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElfResource) ProtoMessage() {}

func (x *ElfResource) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElfResource.ProtoReflect.Descriptor instead.
func (*ElfResource) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{13}
}

func (x *ElfResource) GetCPU() float64 {
	if x != nil {
		return x.CPU
	}
	return 0
}

func (x *ElfResource) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

type Environment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ElfMetadata     *structpb.Value `protobuf:"bytes,1,opt,name=elfMetadata,proto3" json:"elfMetadata,omitempty"`
	EnvironmentSpec *structpb.Value `protobuf:"bytes,2,opt,name=environmentSpec,proto3" json:"environmentSpec,omitempty"`
}

func (x *Environment) Reset() {
	*x = Environment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Environment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Environment) ProtoMessage() {}

func (x *Environment) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Environment.ProtoReflect.Descriptor instead.
func (*Environment) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{14}
}

func (x *Environment) GetElfMetadata() *structpb.Value {
	if x != nil {
		return x.ElfMetadata
	}
	return nil
}

func (x *Environment) GetEnvironmentSpec() *structpb.Value {
	if x != nil {
		return x.EnvironmentSpec
	}
	return nil
}

type EnvironmentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListMetadata        *structpb.Value `protobuf:"bytes,1,opt,name=listMetadata,proto3" json:"listMetadata,omitempty"`
	EnvironmentListSpec *structpb.Value `protobuf:"bytes,2,opt,name=environmentListSpec,proto3" json:"environmentListSpec,omitempty"`
}

func (x *EnvironmentList) Reset() {
	*x = EnvironmentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentList) ProtoMessage() {}

func (x *EnvironmentList) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentList.ProtoReflect.Descriptor instead.
func (*EnvironmentList) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{15}
}

func (x *EnvironmentList) GetListMetadata() *structpb.Value {
	if x != nil {
		return x.ListMetadata
	}
	return nil
}

func (x *EnvironmentList) GetEnvironmentListSpec() *structpb.Value {
	if x != nil {
		return x.EnvironmentListSpec
	}
	return nil
}

type EnvironmentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *structpb.Value `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EnvironmentListResponse) Reset() {
	*x = EnvironmentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentListResponse) ProtoMessage() {}

func (x *EnvironmentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentListResponse.ProtoReflect.Descriptor instead.
func (*EnvironmentListResponse) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{16}
}

func (x *EnvironmentListResponse) GetData() *structpb.Value {
	if x != nil {
		return x.Data
	}
	return nil
}

type EnvironmentListSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*structpb.Value `protobuf:"bytes,1,rep,name=items,json=data,proto3" json:"items,omitempty"`
}

func (x *EnvironmentListSpec) Reset() {
	*x = EnvironmentListSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentListSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentListSpec) ProtoMessage() {}

func (x *EnvironmentListSpec) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentListSpec.ProtoReflect.Descriptor instead.
func (*EnvironmentListSpec) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{17}
}

func (x *EnvironmentListSpec) GetItems() []*structpb.Value {
	if x != nil {
		return x.Items
	}
	return nil
}

type EnvironmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *structpb.Value `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EnvironmentResponse) Reset() {
	*x = EnvironmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentResponse) ProtoMessage() {}

func (x *EnvironmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentResponse.ProtoReflect.Descriptor instead.
func (*EnvironmentResponse) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{18}
}

func (x *EnvironmentResponse) GetData() *structpb.Value {
	if x != nil {
		return x.Data
	}
	return nil
}

type EnvironmentSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requires      []*structpb.Value `protobuf:"bytes,1,rep,name=requires,proto3" json:"requires,omitempty"`
	DBRequires    string            `protobuf:"bytes,2,opt,name=dBRequires,json=-,proto3" json:"dBRequires,omitempty"`
	Labels        map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DBLabels      string            `protobuf:"bytes,4,opt,name=dBLabels,json=-,proto3" json:"dBLabels,omitempty"`
	NotebookCount int64             `protobuf:"varint,5,opt,name=notebookCount,json=notebook_count,proto3" json:"notebookCount,omitempty"`
}

func (x *EnvironmentSpec) Reset() {
	*x = EnvironmentSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentSpec) ProtoMessage() {}

func (x *EnvironmentSpec) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentSpec.ProtoReflect.Descriptor instead.
func (*EnvironmentSpec) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{19}
}

func (x *EnvironmentSpec) GetRequires() []*structpb.Value {
	if x != nil {
		return x.Requires
	}
	return nil
}

func (x *EnvironmentSpec) GetDBRequires() string {
	if x != nil {
		return x.DBRequires
	}
	return ""
}

func (x *EnvironmentSpec) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *EnvironmentSpec) GetDBLabels() string {
	if x != nil {
		return x.DBLabels
	}
	return ""
}

func (x *EnvironmentSpec) GetNotebookCount() int64 {
	if x != nil {
		return x.NotebookCount
	}
	return 0
}

type ListMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListMetadata) Reset() {
	*x = ListMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetadata) ProtoMessage() {}

func (x *ListMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetadata.ProtoReflect.Descriptor instead.
func (*ListMetadata) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{20}
}

func (x *ListMetadata) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type MetadataField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value    string            `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Type     string            `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Optional bool              `protobuf:"varint,4,opt,name=optional,proto3" json:"optional,omitempty"`
	Labels   map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Level    string            `protobuf:"bytes,6,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *MetadataField) Reset() {
	*x = MetadataField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataField) ProtoMessage() {}

func (x *MetadataField) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataField.ProtoReflect.Descriptor instead.
func (*MetadataField) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{21}
}

func (x *MetadataField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetadataField) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *MetadataField) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MetadataField) GetOptional() bool {
	if x != nil {
		return x.Optional
	}
	return false
}

func (x *MetadataField) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *MetadataField) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

type NoteBookList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListMetadata     *structpb.Value `protobuf:"bytes,1,opt,name=listMetadata,proto3" json:"listMetadata,omitempty"`
	NoteBookListSpec *structpb.Value `protobuf:"bytes,2,opt,name=noteBookListSpec,proto3" json:"noteBookListSpec,omitempty"`
}

func (x *NoteBookList) Reset() {
	*x = NoteBookList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoteBookList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteBookList) ProtoMessage() {}

func (x *NoteBookList) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteBookList.ProtoReflect.Descriptor instead.
func (*NoteBookList) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{22}
}

func (x *NoteBookList) GetListMetadata() *structpb.Value {
	if x != nil {
		return x.ListMetadata
	}
	return nil
}

func (x *NoteBookList) GetNoteBookListSpec() *structpb.Value {
	if x != nil {
		return x.NoteBookListSpec
	}
	return nil
}

type NoteBookListSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*structpb.Value `protobuf:"bytes,1,rep,name=items,json=data,proto3" json:"items,omitempty"`
}

func (x *NoteBookListSpec) Reset() {
	*x = NoteBookListSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoteBookListSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteBookListSpec) ProtoMessage() {}

func (x *NoteBookListSpec) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteBookListSpec.ProtoReflect.Descriptor instead.
func (*NoteBookListSpec) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{23}
}

func (x *NoteBookListSpec) GetItems() []*structpb.Value {
	if x != nil {
		return x.Items
	}
	return nil
}

type Notebook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata       []*structpb.Value `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty"`
	NotebookSpec   *structpb.Value   `protobuf:"bytes,2,opt,name=notebookSpec,proto3" json:"notebookSpec,omitempty"`
	NotebookStatus *structpb.Value   `protobuf:"bytes,3,opt,name=notebookStatus,proto3" json:"notebookStatus,omitempty"`
}

func (x *Notebook) Reset() {
	*x = Notebook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notebook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notebook) ProtoMessage() {}

func (x *Notebook) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notebook.ProtoReflect.Descriptor instead.
func (*Notebook) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{24}
}

func (x *Notebook) GetMetadata() []*structpb.Value {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Notebook) GetNotebookSpec() *structpb.Value {
	if x != nil {
		return x.NotebookSpec
	}
	return nil
}

func (x *Notebook) GetNotebookStatus() *structpb.Value {
	if x != nil {
		return x.NotebookStatus
	}
	return nil
}

type NotebookListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *structpb.Value `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *NotebookListResponse) Reset() {
	*x = NotebookListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotebookListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotebookListResponse) ProtoMessage() {}

func (x *NotebookListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotebookListResponse.ProtoReflect.Descriptor instead.
func (*NotebookListResponse) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{25}
}

func (x *NotebookListResponse) GetData() *structpb.Value {
	if x != nil {
		return x.Data
	}
	return nil
}

type NotebookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *structpb.Value `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *NotebookResponse) Reset() {
	*x = NotebookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotebookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotebookResponse) ProtoMessage() {}

func (x *NotebookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotebookResponse.ProtoReflect.Descriptor instead.
func (*NotebookResponse) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{26}
}

func (x *NotebookResponse) GetData() *structpb.Value {
	if x != nil {
		return x.Data
	}
	return nil
}

type NotebookSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Envs             []*structpb.Value `protobuf:"bytes,1,rep,name=envs,proto3" json:"envs,omitempty"`
	ClusterName      string            `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	ProjectName      string            `protobuf:"bytes,3,opt,name=projectName,proto3" json:"projectName,omitempty"`
	ApplicationName  string            `protobuf:"bytes,4,opt,name=applicationName,proto3" json:"applicationName,omitempty"`
	DBEnvs           string            `protobuf:"bytes,5,opt,name=dBEnvs,json=-,proto3" json:"dBEnvs,omitempty"`
	Image            string            `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	RequirementEnvID uint64            `protobuf:"varint,7,opt,name=requirementEnvID,proto3" json:"requirementEnvID,omitempty"`
	DataSourceID     uint64            `protobuf:"varint,8,opt,name=dataSourceID,json=datasourceID,proto3" json:"dataSourceID,omitempty"`
	GenericDomain    string            `protobuf:"bytes,9,opt,name=genericDomain,proto3" json:"genericDomain,omitempty"`
	ClusterDomain    string            `protobuf:"bytes,10,opt,name=clusterDomain,proto3" json:"clusterDomain,omitempty"`
	ElfResource      *structpb.Value   `protobuf:"bytes,11,opt,name=elfResource,json=resource,proto3" json:"elfResource,omitempty"`
}

func (x *NotebookSpec) Reset() {
	*x = NotebookSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotebookSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotebookSpec) ProtoMessage() {}

func (x *NotebookSpec) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotebookSpec.ProtoReflect.Descriptor instead.
func (*NotebookSpec) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{27}
}

func (x *NotebookSpec) GetEnvs() []*structpb.Value {
	if x != nil {
		return x.Envs
	}
	return nil
}

func (x *NotebookSpec) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *NotebookSpec) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *NotebookSpec) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *NotebookSpec) GetDBEnvs() string {
	if x != nil {
		return x.DBEnvs
	}
	return ""
}

func (x *NotebookSpec) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *NotebookSpec) GetRequirementEnvID() uint64 {
	if x != nil {
		return x.RequirementEnvID
	}
	return 0
}

func (x *NotebookSpec) GetDataSourceID() uint64 {
	if x != nil {
		return x.DataSourceID
	}
	return 0
}

func (x *NotebookSpec) GetGenericDomain() string {
	if x != nil {
		return x.GenericDomain
	}
	return ""
}

func (x *NotebookSpec) GetClusterDomain() string {
	if x != nil {
		return x.ClusterDomain
	}
	return ""
}

func (x *NotebookSpec) GetElfResource() *structpb.Value {
	if x != nil {
		return x.ElfResource
	}
	return nil
}

type NotebookStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=startedAt,proto3" json:"startedAt,omitempty"`
	State     string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *NotebookStatus) Reset() {
	*x = NotebookStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotebookStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotebookStatus) ProtoMessage() {}

func (x *NotebookStatus) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotebookStatus.ProtoReflect.Descriptor instead.
func (*NotebookStatus) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{28}
}

func (x *NotebookStatus) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *NotebookStatus) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type Package struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Package) Reset() {
	*x = Package{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Package) ProtoMessage() {}

func (x *Package) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Package.ProtoReflect.Descriptor instead.
func (*Package) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{29}
}

func (x *Package) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Package) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Require struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Packages []*structpb.Value `protobuf:"bytes,2,rep,name=packages,proto3" json:"packages,omitempty"`
}

func (x *Require) Reset() {
	*x = Require{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elf_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Require) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Require) ProtoMessage() {}

func (x *Require) ProtoReflect() protoreflect.Message {
	mi := &file_elf_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Require.ProtoReflect.Descriptor instead.
func (*Require) Descriptor() ([]byte, []int) {
	return file_elf_proto_rawDescGZIP(), []int{30}
}

func (x *Require) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Require) GetPackages() []*structpb.Value {
	if x != nil {
		return x.Packages
	}
	return nil
}

var File_elf_proto protoreflect.FileDescriptor

var file_elf_proto_rawDesc = []byte{
	0x0a, 0x09, 0x65, 0x6c, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x65, 0x6c, 0x66, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x01, 0x0a, 0x15, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x4c, 0x0a, 0x15, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x15, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x22, 0x4b, 0x0a,
	0x1d, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x44, 0x0a, 0x15, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x5f, 0x0a, 0x15, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a,
	0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x73, 0x22, 0x49, 0x0a, 0x19, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x1f, 0x0a, 0x1d,
	0x45, 0x4c, 0x46, 0x5f, 0x45, 0x4e, 0x56, 0x49, 0x52, 0x4f, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1c, 0x0a,
	0x1a, 0x45, 0x4c, 0x46, 0x5f, 0x45, 0x4e, 0x56, 0x49, 0x52, 0x4f, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x47, 0x45, 0x54, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x45,
	0x4c, 0x46, 0x5f, 0x45, 0x4e, 0x56, 0x49, 0x52, 0x4f, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x49,
	0x53, 0x54, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x45, 0x4c,
	0x46, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54,
	0x45, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x45, 0x4c, 0x46,
	0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x45, 0x4c, 0x46, 0x5f, 0x4e, 0x4f, 0x54,
	0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x45, 0x4c, 0x46, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x41, 0x47,
	0x45, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xf1,
	0x02, 0x0a, 0x0b, 0x45, 0x6c, 0x66, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x37, 0x0a, 0x0b, 0x45, 0x6c, 0x66, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x50, 0x55, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03,
	0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0x89, 0x01, 0x0a, 0x0b,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x65,
	0x6c, 0x66, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x65, 0x6c, 0x66, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x0f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x22, 0x97, 0x01, 0x0a, 0x0f, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x6c,
	0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x13, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x13, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x22, 0x45, 0x0a, 0x17, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x42, 0x0a, 0x13, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x41, 0x0a, 0x13,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x9c, 0x02, 0x0a, 0x0f, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x32, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x12, 0x15, 0x0a, 0x0a, 0x64, 0x42, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x2d, 0x12, 0x47,
	0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e,
	0x65, 0x6c, 0x66, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x13, 0x0a, 0x08, 0x64, 0x42, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x2d, 0x12, 0x25, 0x0a, 0x0d,
	0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x24,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x81, 0x02, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x12, 0x45, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76,
	0x31, 0x2e, 0x65, 0x6c, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x39, 0x0a,
	0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8e, 0x01, 0x0a, 0x0c, 0x4e, 0x6f, 0x74,
	0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x6c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x42, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x22, 0x3f, 0x0a, 0x10, 0x4e, 0x6f, 0x74,
	0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2b, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xba, 0x01, 0x0a, 0x08, 0x4e,
	0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x32, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0c, 0x6e,
	0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x12, 0x3e, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x42, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3e, 0x0a, 0x10, 0x4e,
	0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa4, 0x03, 0x0a, 0x0c,
	0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2a, 0x0a, 0x04,
	0x65, 0x6e, 0x76, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x11, 0x0a, 0x06, 0x64, 0x42, 0x45, 0x6e, 0x76, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x2d, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e,
	0x76, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12,
	0x24, 0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x35, 0x0a, 0x0b, 0x65,
	0x6c, 0x66, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0x60, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x37, 0x0a, 0x07, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x51, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x08,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73,
	0x32, 0x9f, 0x11, 0x0a, 0x03, 0x65, 0x6c, 0x66, 0x12, 0xbb, 0x01, 0x0a, 0x15, 0x45, 0x4c, 0x46,
	0x5f, 0x45, 0x4e, 0x56, 0x49, 0x52, 0x4f, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x12, 0x1f, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x76, 0x31, 0x2e, 0x65, 0x6c, 0x66, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x1a, 0x27, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x31, 0x2e, 0x65, 0x6c, 0x66, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x16, 0x22, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0xfa, 0x81, 0xf9, 0x1b, 0x37, 0x0a,
	0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x02, 0x20, 0x01, 0x3a, 0x1b, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x3a, 0x20, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe7, 0x8e, 0xaf, 0xe5, 0xa2, 0x83,
	0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x12, 0xd3, 0x01, 0x0a, 0x15, 0x45, 0x4c, 0x46, 0x5f, 0x45,
	0x4e, 0x56, 0x49, 0x52, 0x4f, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x12, 0x31, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76,
	0x31, 0x2e, 0x65, 0x6c, 0x66, 0x2e, 0x45, 0x4c, 0x46, 0x5f, 0x45, 0x4e, 0x56, 0x49, 0x52, 0x4f,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x31, 0x2e, 0x65, 0x6c, 0x66, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x19, 0x2a, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2a, 0xfa, 0x81, 0xf9,
	0x1b, 0x3a, 0x0a, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2a, 0x32, 0x02, 0x20, 0x01, 0x3a,
	0x1b, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x3a, 0x20, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4,
	0xe7, 0x8e, 0xaf, 0xe5, 0xa2, 0x83, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x12, 0xcd, 0x01, 0x0a,
	0x12, 0x45, 0x4c, 0x46, 0x5f, 0x45, 0x4e, 0x56, 0x49, 0x52, 0x4f, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x47, 0x45, 0x54, 0x12, 0x2e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x31, 0x2e, 0x65, 0x6c, 0x66, 0x2e, 0x45, 0x4c, 0x46, 0x5f, 0x45, 0x4e, 0x56,
	0x49, 0x52, 0x4f, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x31, 0x2e, 0x65, 0x6c, 0x66, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2a, 0xfa, 0x81, 0xf9,
	0x1b, 0x3a, 0x0a, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2a, 0x32, 0x02, 0x20, 0x01, 0x3a,
	0x1b, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x3a, 0x20, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96,
	0xe7, 0x8e, 0xaf, 0xe5, 0xa2, 0x83, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x12, 0xd3, 0x01, 0x0a,
	0x13, 0x45, 0x4c, 0x46, 0x5f, 0x45, 0x4e, 0x56, 0x49, 0x52, 0x4f, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x4c, 0x49, 0x53, 0x54, 0x12, 0x2f, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x65, 0x6c, 0x66, 0x2e, 0x45, 0x4c, 0x46, 0x5f, 0x45, 0x4e,
	0x56, 0x49, 0x52, 0x4f, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x65, 0x6c, 0x66, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x5e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0xfa, 0x81, 0xf9, 0x1b, 0x3d, 0x0a, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x02, 0x20, 0x01, 0x3a,
	0x21, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x3a, 0x20, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96,
	0xe7, 0x8e, 0xaf, 0xe5, 0xa2, 0x83, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0xe5, 0x88, 0x97, 0xe8,
	0xa1, 0xa8, 0x12, 0xc1, 0x01, 0x0a, 0x15, 0x45, 0x4c, 0x46, 0x5f, 0x45, 0x4e, 0x56, 0x49, 0x52,
	0x4f, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x12, 0x1f, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x65, 0x6c,
	0x66, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x27, 0x2e,
	0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x65,
	0x6c, 0x66, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x1a, 0x17,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2a, 0xfa, 0x81, 0xf9, 0x1b, 0x3a, 0x0a, 0x17, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x2a, 0x2a, 0x32, 0x02, 0x20, 0x01, 0x3a, 0x1b, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x3a, 0x20, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe7, 0x8e, 0xaf, 0xe5, 0xa2, 0x83,
	0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x12, 0xb0, 0x01, 0x0a, 0x13, 0x45, 0x4c, 0x46, 0x5f, 0x4e,
	0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x12, 0x1c,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e,
	0x65, 0x6c, 0x66, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x1a, 0x24, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x65, 0x6c,
	0x66, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x55, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x11, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0xfa, 0x81, 0xf9,
	0x1b, 0x37, 0x0a, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x32, 0x02, 0x20, 0x01, 0x3a, 0x1e, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x3a, 0x20, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe7, 0xac, 0x94, 0xe8, 0xae, 0xb0,
	0xe6, 0x9c, 0xac, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x12, 0xc9, 0x01, 0x0a, 0x13, 0x45, 0x4c,
	0x46, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54,
	0x45, 0x12, 0x2f, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x76, 0x31, 0x2e, 0x65, 0x6c, 0x66, 0x2e, 0x45, 0x4c, 0x46, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42,
	0x4f, 0x4f, 0x4b, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x76, 0x31, 0x2e, 0x65, 0x6c, 0x66, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16,
	0x2a, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x73, 0x2f, 0x2a, 0x2a, 0xfa, 0x81, 0xf9, 0x1b, 0x3a, 0x0a, 0x14, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x2a,
	0x2a, 0x32, 0x02, 0x20, 0x01, 0x3a, 0x1e, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x3a, 0x20,
	0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe7, 0xac, 0x94, 0xe8, 0xae, 0xb0, 0xe6, 0x9c, 0xac, 0xe9,
	0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x12, 0xc9, 0x01, 0x0a, 0x10, 0x45, 0x4c, 0x46, 0x5f, 0x4e, 0x4f,
	0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x47, 0x45, 0x54, 0x12, 0x2c, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x65, 0x6c, 0x66, 0x2e,
	0x45, 0x4c, 0x46, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x47, 0x45, 0x54,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x65, 0x6c, 0x66, 0x2e, 0x4e, 0x6f,
	0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x2a, 0x2a, 0xfa, 0x81, 0xf9, 0x1b,
	0x40, 0x0a, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x2a, 0x2a, 0x32, 0x02, 0x20, 0x01, 0x3a, 0x24, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x3a, 0x20, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0xac, 0x94, 0xe8,
	0xae, 0xb0, 0xe6, 0x9c, 0xac, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0xe8, 0xaf, 0xa6, 0xe6, 0x83,
	0x85, 0x12, 0xc9, 0x01, 0x0a, 0x11, 0x45, 0x4c, 0x46, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f,
	0x4f, 0x4b, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x12, 0x2d, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x65, 0x6c, 0x66, 0x2e, 0x45, 0x4c, 0x46,
	0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x65, 0x6c, 0x66, 0x2e, 0x4e, 0x6f, 0x74, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x5b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0xfa, 0x81, 0xf9, 0x1b, 0x3d,
	0x0a, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x73, 0x32, 0x02, 0x20, 0x01, 0x3a, 0x24, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x3a, 0x20, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0xac, 0x94, 0xe8, 0xae, 0xb0, 0xe6, 0x9c,
	0xac, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x12, 0xb6, 0x01,
	0x0a, 0x13, 0x45, 0x4c, 0x46, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x12, 0x1c, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x65, 0x6c, 0x66, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x1a, 0x24, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x31, 0x2e, 0x65, 0x6c, 0x66, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x1a, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x2a, 0x2a, 0xfa, 0x81, 0xf9, 0x1b, 0x3a, 0x0a, 0x14, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2f,
	0x2a, 0x2a, 0x32, 0x02, 0x20, 0x01, 0x3a, 0x1e, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x3a,
	0x20, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe7, 0xac, 0x94, 0xe8, 0xae, 0xb0, 0xe6, 0x9c, 0xac,
	0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x12, 0xbd, 0x01, 0x0a, 0x10, 0x45, 0x4c, 0x46, 0x5f, 0x50,
	0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x12, 0x2c, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x65, 0x6c, 0x66,
	0x2e, 0x45, 0x4c, 0x46, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x5f, 0x4c, 0x49, 0x53,
	0x54, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x65, 0x6c, 0x66, 0x2e, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f,
	0x64, 0x73, 0xfa, 0x81, 0xf9, 0x1b, 0x2f, 0x0a, 0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x6d, 0x6f, 0x64, 0x73, 0x32, 0x02, 0x20, 0x01, 0x3a, 0x1b, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x3a, 0x20, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe7, 0x8e, 0xaf, 0xe5, 0xa2, 0x83,
	0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x1a, 0x0a, 0xc2, 0xc4, 0xcb, 0x1c, 0x05, 0x22, 0x03, 0x65,
	0x6c, 0x66, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x65, 0x72,
	0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x2f, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x76, 0x31, 0x2f, 0x65, 0x6c, 0x66, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_elf_proto_rawDescOnce sync.Once
	file_elf_proto_rawDescData = file_elf_proto_rawDesc
)

func file_elf_proto_rawDescGZIP() []byte {
	file_elf_proto_rawDescOnce.Do(func() {
		file_elf_proto_rawDescData = protoimpl.X.CompressGZIP(file_elf_proto_rawDescData)
	})
	return file_elf_proto_rawDescData
}

var file_elf_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_elf_proto_goTypes = []interface{}{
	(*DependencyPackageList)(nil),         // 0: erda.openapiv1.elf.DependencyPackageList
	(*DependencyPackageListResponse)(nil), // 1: erda.openapiv1.elf.DependencyPackageListResponse
	(*DependencyPackageSpec)(nil),         // 2: erda.openapiv1.elf.DependencyPackageSpec
	(*DependencyPackageType)(nil),         // 3: erda.openapiv1.elf.DependencyPackageType
	(*DependencyPackageTypeItem)(nil),     // 4: erda.openapiv1.elf.DependencyPackageTypeItem
	(*ELF_ENVIROMENT_DELETE_Request)(nil), // 5: erda.openapiv1.elf.ELF_ENVIROMENT_DELETE_Request
	(*ELF_ENVIROMENT_GET_Request)(nil),    // 6: erda.openapiv1.elf.ELF_ENVIROMENT_GET_Request
	(*ELF_ENVIROMENT_LIST_Request)(nil),   // 7: erda.openapiv1.elf.ELF_ENVIROMENT_LIST_Request
	(*ELF_NOTEBOOK_DELETE_Request)(nil),   // 8: erda.openapiv1.elf.ELF_NOTEBOOK_DELETE_Request
	(*ELF_NOTEBOOK_GET_Request)(nil),      // 9: erda.openapiv1.elf.ELF_NOTEBOOK_GET_Request
	(*ELF_NOTEBOOK_LIST_Request)(nil),     // 10: erda.openapiv1.elf.ELF_NOTEBOOK_LIST_Request
	(*ELF_PACKAGE_LIST_Request)(nil),      // 11: erda.openapiv1.elf.ELF_PACKAGE_LIST_Request
	(*ElfMetadata)(nil),                   // 12: erda.openapiv1.elf.ElfMetadata
	(*ElfResource)(nil),                   // 13: erda.openapiv1.elf.ElfResource
	(*Environment)(nil),                   // 14: erda.openapiv1.elf.Environment
	(*EnvironmentList)(nil),               // 15: erda.openapiv1.elf.EnvironmentList
	(*EnvironmentListResponse)(nil),       // 16: erda.openapiv1.elf.EnvironmentListResponse
	(*EnvironmentListSpec)(nil),           // 17: erda.openapiv1.elf.EnvironmentListSpec
	(*EnvironmentResponse)(nil),           // 18: erda.openapiv1.elf.EnvironmentResponse
	(*EnvironmentSpec)(nil),               // 19: erda.openapiv1.elf.EnvironmentSpec
	(*ListMetadata)(nil),                  // 20: erda.openapiv1.elf.ListMetadata
	(*MetadataField)(nil),                 // 21: erda.openapiv1.elf.MetadataField
	(*NoteBookList)(nil),                  // 22: erda.openapiv1.elf.NoteBookList
	(*NoteBookListSpec)(nil),              // 23: erda.openapiv1.elf.NoteBookListSpec
	(*Notebook)(nil),                      // 24: erda.openapiv1.elf.Notebook
	(*NotebookListResponse)(nil),          // 25: erda.openapiv1.elf.NotebookListResponse
	(*NotebookResponse)(nil),              // 26: erda.openapiv1.elf.NotebookResponse
	(*NotebookSpec)(nil),                  // 27: erda.openapiv1.elf.NotebookSpec
	(*NotebookStatus)(nil),                // 28: erda.openapiv1.elf.NotebookStatus
	(*Package)(nil),                       // 29: erda.openapiv1.elf.Package
	(*Require)(nil),                       // 30: erda.openapiv1.elf.Require
	nil,                                   // 31: erda.openapiv1.elf.EnvironmentSpec.LabelsEntry
	nil,                                   // 32: erda.openapiv1.elf.MetadataField.LabelsEntry
	(*structpb.Value)(nil),                // 33: google.protobuf.Value
	(*timestamppb.Timestamp)(nil),         // 34: google.protobuf.Timestamp
}
var file_elf_proto_depIdxs = []int32{
	33, // 0: erda.openapiv1.elf.DependencyPackageList.listMetadata:type_name -> google.protobuf.Value
	33, // 1: erda.openapiv1.elf.DependencyPackageList.dependencyPackageSpec:type_name -> google.protobuf.Value
	33, // 2: erda.openapiv1.elf.DependencyPackageListResponse.data:type_name -> google.protobuf.Value
	33, // 3: erda.openapiv1.elf.DependencyPackageSpec.items:type_name -> google.protobuf.Value
	33, // 4: erda.openapiv1.elf.DependencyPackageType.packages:type_name -> google.protobuf.Value
	34, // 5: erda.openapiv1.elf.ElfMetadata.createdAt:type_name -> google.protobuf.Timestamp
	34, // 6: erda.openapiv1.elf.ElfMetadata.updatedAt:type_name -> google.protobuf.Timestamp
	33, // 7: erda.openapiv1.elf.Environment.elfMetadata:type_name -> google.protobuf.Value
	33, // 8: erda.openapiv1.elf.Environment.environmentSpec:type_name -> google.protobuf.Value
	33, // 9: erda.openapiv1.elf.EnvironmentList.listMetadata:type_name -> google.protobuf.Value
	33, // 10: erda.openapiv1.elf.EnvironmentList.environmentListSpec:type_name -> google.protobuf.Value
	33, // 11: erda.openapiv1.elf.EnvironmentListResponse.data:type_name -> google.protobuf.Value
	33, // 12: erda.openapiv1.elf.EnvironmentListSpec.items:type_name -> google.protobuf.Value
	33, // 13: erda.openapiv1.elf.EnvironmentResponse.data:type_name -> google.protobuf.Value
	33, // 14: erda.openapiv1.elf.EnvironmentSpec.requires:type_name -> google.protobuf.Value
	31, // 15: erda.openapiv1.elf.EnvironmentSpec.labels:type_name -> erda.openapiv1.elf.EnvironmentSpec.LabelsEntry
	32, // 16: erda.openapiv1.elf.MetadataField.labels:type_name -> erda.openapiv1.elf.MetadataField.LabelsEntry
	33, // 17: erda.openapiv1.elf.NoteBookList.listMetadata:type_name -> google.protobuf.Value
	33, // 18: erda.openapiv1.elf.NoteBookList.noteBookListSpec:type_name -> google.protobuf.Value
	33, // 19: erda.openapiv1.elf.NoteBookListSpec.items:type_name -> google.protobuf.Value
	33, // 20: erda.openapiv1.elf.Notebook.metadata:type_name -> google.protobuf.Value
	33, // 21: erda.openapiv1.elf.Notebook.notebookSpec:type_name -> google.protobuf.Value
	33, // 22: erda.openapiv1.elf.Notebook.notebookStatus:type_name -> google.protobuf.Value
	33, // 23: erda.openapiv1.elf.NotebookListResponse.data:type_name -> google.protobuf.Value
	33, // 24: erda.openapiv1.elf.NotebookResponse.data:type_name -> google.protobuf.Value
	33, // 25: erda.openapiv1.elf.NotebookSpec.envs:type_name -> google.protobuf.Value
	33, // 26: erda.openapiv1.elf.NotebookSpec.elfResource:type_name -> google.protobuf.Value
	34, // 27: erda.openapiv1.elf.NotebookStatus.startedAt:type_name -> google.protobuf.Timestamp
	33, // 28: erda.openapiv1.elf.Require.packages:type_name -> google.protobuf.Value
	14, // 29: erda.openapiv1.elf.elf.ELF_ENVIROMENT_CREATE:input_type -> erda.openapiv1.elf.Environment
	5,  // 30: erda.openapiv1.elf.elf.ELF_ENVIROMENT_DELETE:input_type -> erda.openapiv1.elf.ELF_ENVIROMENT_DELETE_Request
	6,  // 31: erda.openapiv1.elf.elf.ELF_ENVIROMENT_GET:input_type -> erda.openapiv1.elf.ELF_ENVIROMENT_GET_Request
	7,  // 32: erda.openapiv1.elf.elf.ELF_ENVIROMENT_LIST:input_type -> erda.openapiv1.elf.ELF_ENVIROMENT_LIST_Request
	14, // 33: erda.openapiv1.elf.elf.ELF_ENVIROMENT_UPDATE:input_type -> erda.openapiv1.elf.Environment
	24, // 34: erda.openapiv1.elf.elf.ELF_NOTEBOOK_CREATE:input_type -> erda.openapiv1.elf.Notebook
	8,  // 35: erda.openapiv1.elf.elf.ELF_NOTEBOOK_DELETE:input_type -> erda.openapiv1.elf.ELF_NOTEBOOK_DELETE_Request
	9,  // 36: erda.openapiv1.elf.elf.ELF_NOTEBOOK_GET:input_type -> erda.openapiv1.elf.ELF_NOTEBOOK_GET_Request
	10, // 37: erda.openapiv1.elf.elf.ELF_NOTEBOOK_LIST:input_type -> erda.openapiv1.elf.ELF_NOTEBOOK_LIST_Request
	24, // 38: erda.openapiv1.elf.elf.ELF_NOTEBOOK_UPDATE:input_type -> erda.openapiv1.elf.Notebook
	11, // 39: erda.openapiv1.elf.elf.ELF_PACKAGE_LIST:input_type -> erda.openapiv1.elf.ELF_PACKAGE_LIST_Request
	18, // 40: erda.openapiv1.elf.elf.ELF_ENVIROMENT_CREATE:output_type -> erda.openapiv1.elf.EnvironmentResponse
	18, // 41: erda.openapiv1.elf.elf.ELF_ENVIROMENT_DELETE:output_type -> erda.openapiv1.elf.EnvironmentResponse
	18, // 42: erda.openapiv1.elf.elf.ELF_ENVIROMENT_GET:output_type -> erda.openapiv1.elf.EnvironmentResponse
	16, // 43: erda.openapiv1.elf.elf.ELF_ENVIROMENT_LIST:output_type -> erda.openapiv1.elf.EnvironmentListResponse
	18, // 44: erda.openapiv1.elf.elf.ELF_ENVIROMENT_UPDATE:output_type -> erda.openapiv1.elf.EnvironmentResponse
	26, // 45: erda.openapiv1.elf.elf.ELF_NOTEBOOK_CREATE:output_type -> erda.openapiv1.elf.NotebookResponse
	26, // 46: erda.openapiv1.elf.elf.ELF_NOTEBOOK_DELETE:output_type -> erda.openapiv1.elf.NotebookResponse
	26, // 47: erda.openapiv1.elf.elf.ELF_NOTEBOOK_GET:output_type -> erda.openapiv1.elf.NotebookResponse
	25, // 48: erda.openapiv1.elf.elf.ELF_NOTEBOOK_LIST:output_type -> erda.openapiv1.elf.NotebookListResponse
	26, // 49: erda.openapiv1.elf.elf.ELF_NOTEBOOK_UPDATE:output_type -> erda.openapiv1.elf.NotebookResponse
	1,  // 50: erda.openapiv1.elf.elf.ELF_PACKAGE_LIST:output_type -> erda.openapiv1.elf.DependencyPackageListResponse
	40, // [40:51] is the sub-list for method output_type
	29, // [29:40] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_elf_proto_init() }
func file_elf_proto_init() {
	if File_elf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_elf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependencyPackageList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependencyPackageListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependencyPackageSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependencyPackageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependencyPackageTypeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ELF_ENVIROMENT_DELETE_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ELF_ENVIROMENT_GET_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ELF_ENVIROMENT_LIST_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ELF_NOTEBOOK_DELETE_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ELF_NOTEBOOK_GET_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ELF_NOTEBOOK_LIST_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ELF_PACKAGE_LIST_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ElfMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ElfResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Environment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentListSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoteBookList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoteBookListSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notebook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotebookListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotebookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotebookSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotebookStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Package); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elf_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Require); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_elf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_elf_proto_goTypes,
		DependencyIndexes: file_elf_proto_depIdxs,
		MessageInfos:      file_elf_proto_msgTypes,
	}.Build()
	File_elf_proto = out.File
	file_elf_proto_rawDesc = nil
	file_elf_proto_goTypes = nil
	file_elf_proto_depIdxs = nil
}
