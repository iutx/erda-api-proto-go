// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: elf.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterElfImp elf.proto
func RegisterElfImp(regester transport.Register, srv ElfServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterElfHandler(regester, ElfHandler(srv), _ops.HTTP...)
	RegisterElfServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.openapiv1.elf.Elf",
	)
}

var (
	elfClientType  = reflect.TypeOf((*ElfClient)(nil)).Elem()
	elfServerType  = reflect.TypeOf((*ElfServer)(nil)).Elem()
	elfHandlerType = reflect.TypeOf((*ElfHandler)(nil)).Elem()
)

// ElfClientType .
func ElfClientType() reflect.Type { return elfClientType }

// ElfServerType .
func ElfServerType() reflect.Type { return elfServerType }

// ElfHandlerType .
func ElfHandlerType() reflect.Type { return elfHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		elfClientType,
		// server types
		elfServerType,
		// handler types
		elfHandlerType,
	}
}
