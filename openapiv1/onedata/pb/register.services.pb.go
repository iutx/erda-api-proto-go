// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: onedata.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterOnedataImp onedata.proto
func RegisterOnedataImp(regester transport.Register, srv OnedataServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterOnedataHandler(regester, OnedataHandler(srv), _ops.HTTP...)
	RegisterOnedataServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.openapiv1.onedata.Onedata",
	)
}

var (
	onedataClientType  = reflect.TypeOf((*OnedataClient)(nil)).Elem()
	onedataServerType  = reflect.TypeOf((*OnedataServer)(nil)).Elem()
	onedataHandlerType = reflect.TypeOf((*OnedataHandler)(nil)).Elem()
)

// OnedataClientType .
func OnedataClientType() reflect.Type { return onedataClientType }

// OnedataServerType .
func OnedataServerType() reflect.Type { return onedataServerType }

// OnedataHandlerType .
func OnedataHandlerType() reflect.Type { return onedataHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		onedataClientType,
		// server types
		onedataServerType,
		// handler types
		onedataHandlerType,
	}
}
