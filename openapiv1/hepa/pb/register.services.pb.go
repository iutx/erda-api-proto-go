// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: hepa.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterHepaImp hepa.proto
func RegisterHepaImp(regester transport.Register, srv HepaServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterHepaHandler(regester, HepaHandler(srv), _ops.HTTP...)
	RegisterHepaServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.openapiv1.hepa.Hepa",
	)
}

var (
	hepaClientType  = reflect.TypeOf((*HepaClient)(nil)).Elem()
	hepaServerType  = reflect.TypeOf((*HepaServer)(nil)).Elem()
	hepaHandlerType = reflect.TypeOf((*HepaHandler)(nil)).Elem()
)

// HepaClientType .
func HepaClientType() reflect.Type { return hepaClientType }

// HepaServerType .
func HepaServerType() reflect.Type { return hepaServerType }

// HepaHandlerType .
func HepaHandlerType() reflect.Type { return hepaHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		hepaClientType,
		// server types
		hepaServerType,
		// handler types
		hepaHandlerType,
	}
}
