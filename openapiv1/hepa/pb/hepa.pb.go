// generated by openapi-gen-protobuf

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: hepa.proto

package pb

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/erda-project/erda-proto-go/common/pb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DomainListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeID uint64 `protobuf:"varint,1,opt,name=runtimeID,json=runtimeId,proto3" json:"runtimeID,omitempty"`
}

func (x *DomainListRequest) Reset() {
	*x = DomainListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hepa_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainListRequest) ProtoMessage() {}

func (x *DomainListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hepa_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainListRequest.ProtoReflect.Descriptor instead.
func (*DomainListRequest) Descriptor() ([]byte, []int) {
	return file_hepa_proto_rawDescGZIP(), []int{0}
}

func (x *DomainListRequest) GetRuntimeID() uint64 {
	if x != nil {
		return x.RuntimeID
	}
	return 0
}

type DomainListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]*structpb.Value `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DomainListResponse) Reset() {
	*x = DomainListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hepa_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainListResponse) ProtoMessage() {}

func (x *DomainListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hepa_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainListResponse.ProtoReflect.Descriptor instead.
func (*DomainListResponse) Descriptor() ([]byte, []int) {
	return file_hepa_proto_rawDescGZIP(), []int{1}
}

func (x *DomainListResponse) GetData() map[string]*structpb.Value {
	if x != nil {
		return x.Data
	}
	return nil
}

type HEPA_DOMAINS_GET_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HEPA_DOMAINS_GET_Request) Reset() {
	*x = HEPA_DOMAINS_GET_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hepa_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HEPA_DOMAINS_GET_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HEPA_DOMAINS_GET_Request) ProtoMessage() {}

func (x *HEPA_DOMAINS_GET_Request) ProtoReflect() protoreflect.Message {
	mi := &file_hepa_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HEPA_DOMAINS_GET_Request.ProtoReflect.Descriptor instead.
func (*HEPA_DOMAINS_GET_Request) Descriptor() ([]byte, []int) {
	return file_hepa_proto_rawDescGZIP(), []int{2}
}

type HEPA_RUNTIME_SERVICE_DOMAIN_UPDATE_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeId   string `protobuf:"bytes,1,opt,name=runtimeId,proto3" json:"runtimeId,omitempty"`     // generated from path variable: runtimeId. You should change the proto type if necessary.
	ServiceName string `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"` // generated from path variable: serviceName. You should change the proto type if necessary.
}

func (x *HEPA_RUNTIME_SERVICE_DOMAIN_UPDATE_Request) Reset() {
	*x = HEPA_RUNTIME_SERVICE_DOMAIN_UPDATE_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hepa_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HEPA_RUNTIME_SERVICE_DOMAIN_UPDATE_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HEPA_RUNTIME_SERVICE_DOMAIN_UPDATE_Request) ProtoMessage() {}

func (x *HEPA_RUNTIME_SERVICE_DOMAIN_UPDATE_Request) ProtoReflect() protoreflect.Message {
	mi := &file_hepa_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HEPA_RUNTIME_SERVICE_DOMAIN_UPDATE_Request.ProtoReflect.Descriptor instead.
func (*HEPA_RUNTIME_SERVICE_DOMAIN_UPDATE_Request) Descriptor() ([]byte, []int) {
	return file_hepa_proto_rawDescGZIP(), []int{3}
}

func (x *HEPA_RUNTIME_SERVICE_DOMAIN_UPDATE_Request) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *HEPA_RUNTIME_SERVICE_DOMAIN_UPDATE_Request) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

var File_hepa_proto protoreflect.FileDescriptor

var file_hepa_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x68, 0x65, 0x70, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x68, 0x65, 0x70,
	0x61, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x31, 0x0a, 0x11, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0xac,
	0x01, 0x0a, 0x12, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x31, 0x2e, 0x68, 0x65, 0x70, 0x61, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x4f, 0x0a, 0x09,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1a, 0x0a,
	0x18, 0x48, 0x45, 0x50, 0x41, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x53, 0x5f, 0x47, 0x45,
	0x54, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6c, 0x0a, 0x2a, 0x48, 0x45, 0x50,
	0x41, 0x5f, 0x52, 0x55, 0x4e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0xc3, 0x05, 0x0a, 0x04, 0x68, 0x65, 0x70, 0x61,
	0x12, 0x9a, 0x01, 0x0a, 0x10, 0x48, 0x45, 0x50, 0x41, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e,
	0x53, 0x5f, 0x47, 0x45, 0x54, 0x12, 0x2d, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x68, 0x65, 0x70, 0x61, 0x2e, 0x48, 0x45, 0x50, 0x41,
	0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x53, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x73, 0xfa, 0x81, 0xf9, 0x1b, 0x26, 0x0a, 0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x32, 0x02, 0x10, 0x01, 0x3a, 0x12, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f,
	0x96, 0xe5, 0x9f, 0x9f, 0xe5, 0x90, 0x8d, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x12, 0xe0, 0x01,
	0x0a, 0x17, 0x48, 0x45, 0x50, 0x41, 0x5f, 0x52, 0x55, 0x4e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x44,
	0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x47, 0x45, 0x54, 0x12, 0x26, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x68, 0x65, 0x70, 0x61, 0x2e,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x76, 0x31, 0x2e, 0x68, 0x65, 0x70, 0x61, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x74, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x27, 0x12, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x2f, 0x7b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x44, 0x7d, 0x2f, 0x6b, 0x38,
	0x73, 0x2d, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0xfa, 0x81, 0xf9, 0x1b, 0x42, 0x0a, 0x25,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2f, 0x7b, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x44, 0x7d, 0x2f, 0x6b, 0x38, 0x73, 0x2d, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x32, 0x02, 0x10, 0x01, 0x3a, 0x15, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f,
	0x96, 0x20, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x20, 0xe5, 0x9f, 0x9f, 0xe5, 0x90, 0x8d,
	0x12, 0xad, 0x02, 0x0a, 0x22, 0x48, 0x45, 0x50, 0x41, 0x5f, 0x52, 0x55, 0x4e, 0x54, 0x49, 0x4d,
	0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e,
	0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x12, 0x3f, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x68, 0x65, 0x70, 0x61, 0x2e, 0x48, 0x45,
	0x50, 0x41, 0x5f, 0x52, 0x55, 0x4e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0xad, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x1a, 0x38, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2f, 0x7b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x49, 0x64, 0x7d, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x73, 0xfa, 0x81, 0xf9, 0x1b, 0x68, 0x0a, 0x38, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2f, 0x7b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x49, 0x64, 0x7d, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x73, 0x32, 0x02, 0x10, 0x01, 0x3a, 0x28, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0x20, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x20, 0xe5, 0x86, 0x85, 0xe6, 0x8c, 0x87, 0xe5, 0xae, 0x9a,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0xe7, 0x9a, 0x84, 0xe5, 0x9f, 0x9f, 0xe5, 0x90, 0x8d,
	0x1a, 0x0b, 0xc2, 0xc4, 0xcb, 0x1c, 0x06, 0x22, 0x04, 0x68, 0x65, 0x70, 0x61, 0x42, 0x39, 0x5a,
	0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x72, 0x64, 0x61,
	0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31,
	0x2f, 0x68, 0x65, 0x70, 0x61, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hepa_proto_rawDescOnce sync.Once
	file_hepa_proto_rawDescData = file_hepa_proto_rawDesc
)

func file_hepa_proto_rawDescGZIP() []byte {
	file_hepa_proto_rawDescOnce.Do(func() {
		file_hepa_proto_rawDescData = protoimpl.X.CompressGZIP(file_hepa_proto_rawDescData)
	})
	return file_hepa_proto_rawDescData
}

var file_hepa_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_hepa_proto_goTypes = []interface{}{
	(*DomainListRequest)(nil),                          // 0: erda.openapiv1.hepa.DomainListRequest
	(*DomainListResponse)(nil),                         // 1: erda.openapiv1.hepa.DomainListResponse
	(*HEPA_DOMAINS_GET_Request)(nil),                   // 2: erda.openapiv1.hepa.HEPA_DOMAINS_GET_Request
	(*HEPA_RUNTIME_SERVICE_DOMAIN_UPDATE_Request)(nil), // 3: erda.openapiv1.hepa.HEPA_RUNTIME_SERVICE_DOMAIN_UPDATE_Request
	nil,                    // 4: erda.openapiv1.hepa.DomainListResponse.DataEntry
	(*structpb.Value)(nil), // 5: google.protobuf.Value
	(*emptypb.Empty)(nil),  // 6: google.protobuf.Empty
}
var file_hepa_proto_depIdxs = []int32{
	4, // 0: erda.openapiv1.hepa.DomainListResponse.data:type_name -> erda.openapiv1.hepa.DomainListResponse.DataEntry
	5, // 1: erda.openapiv1.hepa.DomainListResponse.DataEntry.value:type_name -> google.protobuf.Value
	2, // 2: erda.openapiv1.hepa.hepa.HEPA_DOMAINS_GET:input_type -> erda.openapiv1.hepa.HEPA_DOMAINS_GET_Request
	0, // 3: erda.openapiv1.hepa.hepa.HEPA_RUNTIME_DOMAIN_GET:input_type -> erda.openapiv1.hepa.DomainListRequest
	3, // 4: erda.openapiv1.hepa.hepa.HEPA_RUNTIME_SERVICE_DOMAIN_UPDATE:input_type -> erda.openapiv1.hepa.HEPA_RUNTIME_SERVICE_DOMAIN_UPDATE_Request
	6, // 5: erda.openapiv1.hepa.hepa.HEPA_DOMAINS_GET:output_type -> google.protobuf.Empty
	1, // 6: erda.openapiv1.hepa.hepa.HEPA_RUNTIME_DOMAIN_GET:output_type -> erda.openapiv1.hepa.DomainListResponse
	6, // 7: erda.openapiv1.hepa.hepa.HEPA_RUNTIME_SERVICE_DOMAIN_UPDATE:output_type -> google.protobuf.Empty
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_hepa_proto_init() }
func file_hepa_proto_init() {
	if File_hepa_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hepa_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hepa_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hepa_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HEPA_DOMAINS_GET_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hepa_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HEPA_RUNTIME_SERVICE_DOMAIN_UPDATE_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hepa_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hepa_proto_goTypes,
		DependencyIndexes: file_hepa_proto_depIdxs,
		MessageInfos:      file_hepa_proto_msgTypes,
	}.Build()
	File_hepa_proto = out.File
	file_hepa_proto_rawDesc = nil
	file_hepa_proto_goTypes = nil
	file_hepa_proto_depIdxs = nil
}
