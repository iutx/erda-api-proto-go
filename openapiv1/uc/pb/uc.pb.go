// generated by openapi-gen-protobuf

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: uc.proto

package pb

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/erda-project/erda-proto-go/common/pb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PwdSecurityConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaptchaChallengeNumber   int64 `protobuf:"varint,1,opt,name=captchaChallengeNumber,proto3" json:"captchaChallengeNumber,omitempty"`
	ContinuousPwdErrorNumber int64 `protobuf:"varint,2,opt,name=continuousPwdErrorNumber,proto3" json:"continuousPwdErrorNumber,omitempty"`
	MaxPwdErrorNumber        int64 `protobuf:"varint,3,opt,name=maxPwdErrorNumber,proto3" json:"maxPwdErrorNumber,omitempty"`
	ResetPassWordPeriod      int64 `protobuf:"varint,4,opt,name=resetPassWordPeriod,proto3" json:"resetPassWordPeriod,omitempty"`
}

func (x *PwdSecurityConfig) Reset() {
	*x = PwdSecurityConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PwdSecurityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PwdSecurityConfig) ProtoMessage() {}

func (x *PwdSecurityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PwdSecurityConfig.ProtoReflect.Descriptor instead.
func (*PwdSecurityConfig) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{0}
}

func (x *PwdSecurityConfig) GetCaptchaChallengeNumber() int64 {
	if x != nil {
		return x.CaptchaChallengeNumber
	}
	return 0
}

func (x *PwdSecurityConfig) GetContinuousPwdErrorNumber() int64 {
	if x != nil {
		return x.ContinuousPwdErrorNumber
	}
	return 0
}

func (x *PwdSecurityConfig) GetMaxPwdErrorNumber() int64 {
	if x != nil {
		return x.MaxPwdErrorNumber
	}
	return 0
}

func (x *PwdSecurityConfig) GetResetPassWordPeriod() int64 {
	if x != nil {
		return x.ResetPassWordPeriod
	}
	return 0
}

type PwdSecurityConfigGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *structpb.Value `protobuf:"bytes,1,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *PwdSecurityConfigGetResponse) Reset() {
	*x = PwdSecurityConfigGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PwdSecurityConfigGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PwdSecurityConfigGetResponse) ProtoMessage() {}

func (x *PwdSecurityConfigGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PwdSecurityConfigGetResponse.ProtoReflect.Descriptor instead.
func (*PwdSecurityConfigGetResponse) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{1}
}

func (x *PwdSecurityConfigGetResponse) GetData() *structpb.Value {
	if x != nil {
		return x.Data
	}
	return nil
}

type PwdSecurityConfigUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PwdSecurityConfig *structpb.Value `protobuf:"bytes,1,opt,name=pwdSecurityConfig,proto3" json:"pwdSecurityConfig,omitempty"`
}

func (x *PwdSecurityConfigUpdateRequest) Reset() {
	*x = PwdSecurityConfigUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PwdSecurityConfigUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PwdSecurityConfigUpdateRequest) ProtoMessage() {}

func (x *PwdSecurityConfigUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PwdSecurityConfigUpdateRequest.ProtoReflect.Descriptor instead.
func (*PwdSecurityConfigUpdateRequest) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{2}
}

func (x *PwdSecurityConfigUpdateRequest) GetPwdSecurityConfig() *structpb.Value {
	if x != nil {
		return x.PwdSecurityConfig
	}
	return nil
}

type PwdSecurityConfigUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PwdSecurityConfigUpdateResponse) Reset() {
	*x = PwdSecurityConfigUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PwdSecurityConfigUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PwdSecurityConfigUpdateResponse) ProtoMessage() {}

func (x *PwdSecurityConfigUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PwdSecurityConfigUpdateResponse.ProtoReflect.Descriptor instead.
func (*PwdSecurityConfigUpdateResponse) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{3}
}

type UC_PWD_SECURITY_CONFIG_GET_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UC_PWD_SECURITY_CONFIG_GET_Request) Reset() {
	*x = UC_PWD_SECURITY_CONFIG_GET_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UC_PWD_SECURITY_CONFIG_GET_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UC_PWD_SECURITY_CONFIG_GET_Request) ProtoMessage() {}

func (x *UC_PWD_SECURITY_CONFIG_GET_Request) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UC_PWD_SECURITY_CONFIG_GET_Request.ProtoReflect.Descriptor instead.
func (*UC_PWD_SECURITY_CONFIG_GET_Request) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{4}
}

type UC_USER_LIST_LOGIN_METHOD_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UC_USER_LIST_LOGIN_METHOD_Request) Reset() {
	*x = UC_USER_LIST_LOGIN_METHOD_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UC_USER_LIST_LOGIN_METHOD_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UC_USER_LIST_LOGIN_METHOD_Request) ProtoMessage() {}

func (x *UC_USER_LIST_LOGIN_METHOD_Request) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UC_USER_LIST_LOGIN_METHOD_Request.ProtoReflect.Descriptor instead.
func (*UC_USER_LIST_LOGIN_METHOD_Request) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{5}
}

type UserBatchFreezeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIDs []string `protobuf:"bytes,1,rep,name=userIDs,proto3" json:"userIDs,omitempty"`
}

func (x *UserBatchFreezeRequest) Reset() {
	*x = UserBatchFreezeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBatchFreezeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBatchFreezeRequest) ProtoMessage() {}

func (x *UserBatchFreezeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBatchFreezeRequest.ProtoReflect.Descriptor instead.
func (*UserBatchFreezeRequest) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{6}
}

func (x *UserBatchFreezeRequest) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type UserBatchFreezeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserBatchFreezeResponse) Reset() {
	*x = UserBatchFreezeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBatchFreezeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBatchFreezeResponse) ProtoMessage() {}

func (x *UserBatchFreezeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBatchFreezeResponse.ProtoReflect.Descriptor instead.
func (*UserBatchFreezeResponse) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{7}
}

type UserBatchUnFreezeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIDs []string `protobuf:"bytes,1,rep,name=userIDs,proto3" json:"userIDs,omitempty"`
}

func (x *UserBatchUnFreezeRequest) Reset() {
	*x = UserBatchUnFreezeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBatchUnFreezeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBatchUnFreezeRequest) ProtoMessage() {}

func (x *UserBatchUnFreezeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBatchUnFreezeRequest.ProtoReflect.Descriptor instead.
func (*UserBatchUnFreezeRequest) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{8}
}

func (x *UserBatchUnFreezeRequest) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type UserBatchUnFreezeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserBatchUnFreezeResponse) Reset() {
	*x = UserBatchUnFreezeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBatchUnFreezeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBatchUnFreezeResponse) ProtoMessage() {}

func (x *UserBatchUnFreezeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBatchUnFreezeResponse.ProtoReflect.Descriptor instead.
func (*UserBatchUnFreezeResponse) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{9}
}

type UserBatchUpdateLoginMethodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIDs []string `protobuf:"bytes,1,rep,name=userIDs,proto3" json:"userIDs,omitempty"`
	Source  string   `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *UserBatchUpdateLoginMethodRequest) Reset() {
	*x = UserBatchUpdateLoginMethodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBatchUpdateLoginMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBatchUpdateLoginMethodRequest) ProtoMessage() {}

func (x *UserBatchUpdateLoginMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBatchUpdateLoginMethodRequest.ProtoReflect.Descriptor instead.
func (*UserBatchUpdateLoginMethodRequest) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{10}
}

func (x *UserBatchUpdateLoginMethodRequest) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

func (x *UserBatchUpdateLoginMethodRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type UserBatchUpdateLoginMethodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserBatchUpdateLoginMethodResponse) Reset() {
	*x = UserBatchUpdateLoginMethodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBatchUpdateLoginMethodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBatchUpdateLoginMethodResponse) ProtoMessage() {}

func (x *UserBatchUpdateLoginMethodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBatchUpdateLoginMethodResponse.ProtoReflect.Descriptor instead.
func (*UserBatchUpdateLoginMethodResponse) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{11}
}

type UserCreateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Nick     string `protobuf:"bytes,2,opt,name=nick,proto3" json:"nick,omitempty"`
	Phone    string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Email    string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *UserCreateItem) Reset() {
	*x = UserCreateItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCreateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCreateItem) ProtoMessage() {}

func (x *UserCreateItem) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCreateItem.ProtoReflect.Descriptor instead.
func (*UserCreateItem) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{12}
}

func (x *UserCreateItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserCreateItem) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *UserCreateItem) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserCreateItem) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserCreateItem) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UserCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*structpb.Value `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *UserCreateRequest) Reset() {
	*x = UserCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCreateRequest) ProtoMessage() {}

func (x *UserCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCreateRequest.ProtoReflect.Descriptor instead.
func (*UserCreateRequest) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{13}
}

func (x *UserCreateRequest) GetUsers() []*structpb.Value {
	if x != nil {
		return x.Users
	}
	return nil
}

type UserCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserCreateResponse) Reset() {
	*x = UserCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCreateResponse) ProtoMessage() {}

func (x *UserCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCreateResponse.ProtoReflect.Descriptor instead.
func (*UserCreateResponse) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{14}
}

type UserFreezeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserFreezeRequest) Reset() {
	*x = UserFreezeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFreezeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFreezeRequest) ProtoMessage() {}

func (x *UserFreezeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFreezeRequest.ProtoReflect.Descriptor instead.
func (*UserFreezeRequest) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{15}
}

func (x *UserFreezeRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type UserFreezeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFreezeResponse) Reset() {
	*x = UserFreezeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFreezeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFreezeResponse) ProtoMessage() {}

func (x *UserFreezeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFreezeResponse.ProtoReflect.Descriptor instead.
func (*UserFreezeResponse) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{16}
}

type UserListLoginMethodData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName string `protobuf:"bytes,1,opt,name=displayName,proto3" json:"displayName,omitempty"`
	Value       string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UserListLoginMethodData) Reset() {
	*x = UserListLoginMethodData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListLoginMethodData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListLoginMethodData) ProtoMessage() {}

func (x *UserListLoginMethodData) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListLoginMethodData.ProtoReflect.Descriptor instead.
func (*UserListLoginMethodData) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{17}
}

func (x *UserListLoginMethodData) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UserListLoginMethodData) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type UserListLoginMethodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*structpb.Value `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *UserListLoginMethodResponse) Reset() {
	*x = UserListLoginMethodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListLoginMethodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListLoginMethodResponse) ProtoMessage() {}

func (x *UserListLoginMethodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListLoginMethodResponse.ProtoReflect.Descriptor instead.
func (*UserListLoginMethodResponse) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{18}
}

func (x *UserListLoginMethodResponse) GetData() []*structpb.Value {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserPagingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Nick     string `protobuf:"bytes,2,opt,name=nick,proto3" json:"nick,omitempty"`
	Phone    string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Email    string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Locked   *int64 `protobuf:"varint,5,opt,name=locked,proto3,oneof" json:"locked,omitempty"`
	Source   string `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`
	PageNo   int64  `protobuf:"varint,7,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize int64  `protobuf:"varint,8,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *UserPagingRequest) Reset() {
	*x = UserPagingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPagingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPagingRequest) ProtoMessage() {}

func (x *UserPagingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPagingRequest.ProtoReflect.Descriptor instead.
func (*UserPagingRequest) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{19}
}

func (x *UserPagingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserPagingRequest) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *UserPagingRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserPagingRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserPagingRequest) GetLocked() int64 {
	if x != nil && x.Locked != nil {
		return *x.Locked
	}
	return 0
}

func (x *UserPagingRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *UserPagingRequest) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *UserPagingRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type UserPagingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *structpb.Value `protobuf:"bytes,1,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *UserPagingResponse) Reset() {
	*x = UserPagingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPagingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPagingResponse) ProtoMessage() {}

func (x *UserPagingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPagingResponse.ProtoReflect.Descriptor instead.
func (*UserPagingResponse) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{20}
}

func (x *UserPagingResponse) GetData() *structpb.Value {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserUnfreezeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserUnfreezeRequest) Reset() {
	*x = UserUnfreezeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUnfreezeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUnfreezeRequest) ProtoMessage() {}

func (x *UserUnfreezeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUnfreezeRequest.ProtoReflect.Descriptor instead.
func (*UserUnfreezeRequest) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{21}
}

func (x *UserUnfreezeRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type UserUnfreezeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserUnfreezeResponse) Reset() {
	*x = UserUnfreezeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUnfreezeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUnfreezeResponse) ProtoMessage() {}

func (x *UserUnfreezeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUnfreezeResponse.ProtoReflect.Descriptor instead.
func (*UserUnfreezeResponse) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{22}
}

type UserUpdateInfoRequset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,json=userId,proto3" json:"userID,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Nick   string `protobuf:"bytes,3,opt,name=nick,proto3" json:"nick,omitempty"`
	Mobile string `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email  string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UserUpdateInfoRequset) Reset() {
	*x = UserUpdateInfoRequset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateInfoRequset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateInfoRequset) ProtoMessage() {}

func (x *UserUpdateInfoRequset) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateInfoRequset.ProtoReflect.Descriptor instead.
func (*UserUpdateInfoRequset) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{23}
}

func (x *UserUpdateInfoRequset) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserUpdateInfoRequset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserUpdateInfoRequset) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *UserUpdateInfoRequset) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserUpdateInfoRequset) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type UserUpdateInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserUpdateInfoResponse) Reset() {
	*x = UserUpdateInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateInfoResponse) ProtoMessage() {}

func (x *UserUpdateInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateInfoResponse.ProtoReflect.Descriptor instead.
func (*UserUpdateInfoResponse) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{24}
}

type UserUpdateLoginMethodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     string `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	UserID string `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID,omitempty"` // generated from path variable: userID. You should change the proto type if necessary.
}

func (x *UserUpdateLoginMethodRequest) Reset() {
	*x = UserUpdateLoginMethodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateLoginMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateLoginMethodRequest) ProtoMessage() {}

func (x *UserUpdateLoginMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateLoginMethodRequest.ProtoReflect.Descriptor instead.
func (*UserUpdateLoginMethodRequest) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{25}
}

func (x *UserUpdateLoginMethodRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UserUpdateLoginMethodRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *UserUpdateLoginMethodRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type UserUpdateLoginMethodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserUpdateLoginMethodResponse) Reset() {
	*x = UserUpdateLoginMethodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateLoginMethodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateLoginMethodResponse) ProtoMessage() {}

func (x *UserUpdateLoginMethodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateLoginMethodResponse.ProtoReflect.Descriptor instead.
func (*UserUpdateLoginMethodResponse) Descriptor() ([]byte, []int) {
	return file_uc_proto_rawDescGZIP(), []int{26}
}

var File_uc_proto protoreflect.FileDescriptor

var file_uc_proto_rawDesc = []byte{
	0x0a, 0x08, 0x75, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x75, 0x63, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x01, 0x0a, 0x11, 0x50, 0x77, 0x64, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x36, 0x0a,
	0x16, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x63,
	0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75,
	0x6f, 0x75, 0x73, 0x50, 0x77, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75,
	0x6f, 0x75, 0x73, 0x50, 0x77, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x50, 0x77, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6d, 0x61,
	0x78, 0x50, 0x77, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x30, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x64,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x22, 0x58, 0x0a, 0x1c, 0x50, 0x77, 0x64, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x66, 0x0a, 0x1e, 0x50,
	0x77, 0x64, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a,
	0x11, 0x70, 0x77, 0x64, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x11, 0x70, 0x77, 0x64, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0x21, 0x0a, 0x1f, 0x50, 0x77, 0x64, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x0a, 0x22, 0x55, 0x43, 0x5f, 0x50, 0x57, 0x44,
	0x5f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x23, 0x0a, 0x21,
	0x55, 0x43, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x4c, 0x4f, 0x47,
	0x49, 0x4e, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x32, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x46, 0x72,
	0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x34, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x6e, 0x46,
	0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x55, 0x6e, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a, 0x21, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x24, 0x0a, 0x22, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x80, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0x41, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x0a, 0x11,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x51, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x49, 0x0a, 0x1b, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdb, 0x01,
	0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x22, 0x4e, 0x0a, 0x12, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2d, 0x0a, 0x13, 0x55,
	0x73, 0x65, 0x72, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x18, 0x0a, 0x16, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x1c, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x1f, 0x0a, 0x1d, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x93, 0x18, 0x0a, 0x02, 0x75, 0x63, 0x12, 0x93, 0x02, 0x0a,
	0x1a, 0x55, 0x43, 0x5f, 0x50, 0x57, 0x44, 0x5f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59,
	0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x47, 0x45, 0x54, 0x12, 0x35, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x75, 0x63, 0x2e,
	0x55, 0x43, 0x5f, 0x50, 0x57, 0x44, 0x5f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x5f,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x76, 0x31, 0x2e, 0x75, 0x63, 0x2e, 0x50, 0x77, 0x64, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x8c, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x67, 0x65, 0x74, 0x2d, 0x70, 0x77, 0x64, 0x2d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0xfa, 0x81, 0xf9, 0x1b, 0x55, 0x0a, 0x2a, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x70, 0x77, 0x64, 0x2d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x32, 0x04, 0x10, 0x01, 0x20, 0x01, 0x3a,
	0x21, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x3a, 0x20, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2,
	0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0xe5, 0xae, 0x89, 0xe5, 0x85, 0xa8, 0xe9, 0x85, 0x8d, 0xe7,
	0xbd, 0xae, 0x12, 0x9b, 0x02, 0x0a, 0x1d, 0x55, 0x43, 0x5f, 0x50, 0x57, 0x44, 0x5f, 0x53, 0x45,
	0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x12, 0x31, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x75, 0x63, 0x2e, 0x50, 0x77, 0x64, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x75, 0x63, 0x2e, 0x50, 0x77, 0x64, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x92, 0x01, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2f, 0x22, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2d,
	0x70, 0x77, 0x64, 0x2d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2d, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0xfa, 0x81, 0xf9, 0x1b, 0x58, 0x0a, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2d, 0x70, 0x77, 0x64, 0x2d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x32, 0x04, 0x10, 0x01, 0x20, 0x01, 0x3a, 0x21, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x3a, 0x20, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe5, 0xaf,
	0x86, 0xe7, 0xa0, 0x81, 0xe5, 0xae, 0x89, 0xe5, 0x85, 0xa8, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae,
	0x12, 0xdf, 0x01, 0x0a, 0x14, 0x55, 0x43, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x42, 0x41, 0x54,
	0x43, 0x48, 0x5f, 0x46, 0x52, 0x45, 0x45, 0x5a, 0x45, 0x12, 0x29, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x75, 0x63, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x75, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x70, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x1a, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x2d, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0xfa, 0x81, 0xf9, 0x1b, 0x44, 0x0a, 0x1f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2d, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x32,
	0x04, 0x10, 0x01, 0x20, 0x01, 0x3a, 0x1b, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x3a, 0x20,
	0xe6, 0x89, 0xb9, 0xe9, 0x87, 0x8f, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0x86, 0xbb, 0xe7,
	0xbb, 0x93, 0x12, 0xe9, 0x01, 0x0a, 0x16, 0x55, 0x43, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x42,
	0x41, 0x54, 0x43, 0x48, 0x5f, 0x55, 0x4e, 0x46, 0x52, 0x45, 0x45, 0x5a, 0x45, 0x12, 0x2b, 0x2e,
	0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x75,
	0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x6e, 0x46, 0x72, 0x65,
	0x65, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x75, 0x63, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x6e, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23,
	0x1a, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2d, 0x75, 0x6e, 0x66, 0x72, 0x65,
	0x65, 0x7a, 0x65, 0xfa, 0x81, 0xf9, 0x1b, 0x46, 0x0a, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x2d, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x32, 0x04, 0x10, 0x01, 0x20,
	0x01, 0x3a, 0x1b, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x3a, 0x20, 0xe6, 0x89, 0xb9, 0xe9,
	0x87, 0x8f, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe8, 0xa7, 0xa3, 0xe5, 0x86, 0xbb, 0x12, 0xa9,
	0x02, 0x0a, 0x21, 0x55, 0x43, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x42, 0x41, 0x54, 0x43, 0x48,
	0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x4d, 0x45,
	0x54, 0x48, 0x4f, 0x44, 0x12, 0x34, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x75, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x75, 0x63, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x96, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x22, 0x2c, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x2d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x2d, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0xfa, 0x81, 0xf9, 0x1b, 0x5d, 0x0a, 0x2c, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x2d, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x32, 0x04, 0x10, 0x01, 0x20,
	0x01, 0x3a, 0x27, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x3a, 0x20, 0xe6, 0x89, 0xb9, 0xe9,
	0x87, 0x8f, 0xe4, 0xbf, 0xae, 0xe6, 0x94, 0xb9, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x99,
	0xbb, 0xe5, 0xbd, 0x95, 0xe6, 0x96, 0xb9, 0xe5, 0xbc, 0x8f, 0x12, 0x9f, 0x01, 0x0a, 0x0e, 0x55,
	0x43, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x12, 0x24, 0x2e,
	0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x75,
	0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x31, 0x2e, 0x75, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0c, 0x22, 0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0xfa, 0x81,
	0xf9, 0x1b, 0x29, 0x0a, 0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x32,
	0x04, 0x10, 0x01, 0x20, 0x01, 0x3a, 0x15, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x3a, 0x20,
	0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0x12, 0xae, 0x01, 0x0a,
	0x0e, 0x55, 0x43, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x12,
	0x24, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31,
	0x2e, 0x75, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x5e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0xfa, 0x81, 0xf9, 0x1b, 0x38, 0x0a, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x32, 0x04, 0x10, 0x01, 0x20, 0x01, 0x3a, 0x15, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x3a,
	0x20, 0xe5, 0xaf, 0xbc, 0xe5, 0x87, 0xba, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x12, 0xcf, 0x01,
	0x0a, 0x0e, 0x55, 0x43, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x46, 0x52, 0x45, 0x45, 0x5a, 0x45,
	0x12, 0x24, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76,
	0x31, 0x2e, 0x75, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x75, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x70, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x24, 0x1a, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x7d, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0xfa, 0x81, 0xf9, 0x1b, 0x41, 0x0a, 0x22,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x7d, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x66, 0x72, 0x65, 0x65,
	0x7a, 0x65, 0x32, 0x04, 0x10, 0x01, 0x20, 0x01, 0x3a, 0x15, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x3a, 0x20, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0x86, 0xbb, 0xe7, 0xbb, 0x93, 0x12,
	0x93, 0x02, 0x0a, 0x19, 0x55, 0x43, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x49, 0x53, 0x54,
	0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x12, 0x34, 0x2e,
	0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x75,
	0x63, 0x2e, 0x55, 0x43, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x4c,
	0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x31, 0x2e, 0x75, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x8f, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2d, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0xfa, 0x81, 0xf9, 0x1b, 0x5e, 0x0a, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x2d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2d, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x32, 0x04, 0x10,
	0x01, 0x20, 0x01, 0x3a, 0x30, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x3a, 0x20, 0xe8, 0x8e,
	0xb7, 0xe5, 0x8f, 0x96, 0xe5, 0xbd, 0x93, 0xe5, 0x89, 0x8d, 0xe7, 0x8e, 0xaf, 0xe5, 0xa2, 0x83,
	0xe6, 0x94, 0xaf, 0xe6, 0x8c, 0x81, 0xe7, 0x9a, 0x84, 0xe7, 0x99, 0xbb, 0xe5, 0xbd, 0x95, 0xe6,
	0x96, 0xb9, 0xe5, 0xbc, 0x8f, 0x12, 0xbd, 0x01, 0x0a, 0x0e, 0x55, 0x43, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x50, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x12, 0x24, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x75, 0x63, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e,
	0x75, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0xfa, 0x81, 0xf9, 0x1b, 0x38, 0x0a, 0x19, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x32, 0x04, 0x10, 0x01, 0x20, 0x01, 0x3a, 0x15,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x3a, 0x20, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5,
	0x88, 0x86, 0xe9, 0xa1, 0xb5, 0x12, 0xd9, 0x01, 0x0a, 0x10, 0x55, 0x43, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x55, 0x4e, 0x46, 0x52, 0x45, 0x45, 0x5a, 0x45, 0x12, 0x26, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x75, 0x63, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x76, 0x31, 0x2e, 0x75, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x6e, 0x66, 0x72, 0x65,
	0x65, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x74, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x26, 0x1a, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f,
	0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x7d, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0xfa, 0x81, 0xf9, 0x1b, 0x43, 0x0a, 0x24,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x7d, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x75, 0x6e, 0x66, 0x72,
	0x65, 0x65, 0x7a, 0x65, 0x32, 0x04, 0x10, 0x01, 0x20, 0x01, 0x3a, 0x15, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x3a, 0x20, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe8, 0xa7, 0xa3, 0xe5, 0x86,
	0xbb, 0x12, 0x99, 0x02, 0x0a, 0x1b, 0x55, 0x43, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f,
	0x44, 0x12, 0x2f, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x76, 0x31, 0x2e, 0x75, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x30, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x76, 0x31, 0x2e, 0x75, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x96, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x22, 0x2f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x7d, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x2d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2d, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0xfa, 0x81,
	0xf9, 0x1b, 0x5a, 0x0a, 0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f,
	0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x7d, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2d, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x32, 0x04, 0x10, 0x01, 0x20, 0x01, 0x3a, 0x21, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x3a, 0x20, 0xe4, 0xbf, 0xae, 0xe6, 0x94, 0xb9, 0xe7, 0x94, 0xa8, 0xe6, 0x88,
	0xb7, 0xe7, 0x99, 0xbb, 0xe5, 0xbd, 0x95, 0xe6, 0x96, 0xb9, 0xe5, 0xbc, 0x8f, 0x12, 0xe0, 0x01,
	0x0a, 0x17, 0x55, 0x43, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x49, 0x4e, 0x46, 0x4f, 0x12, 0x28, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x75, 0x63, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x73, 0x65, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x31, 0x2e, 0x75, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x70,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x1a, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x75,
	0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0xfa, 0x81, 0xf9, 0x1b, 0x44, 0x0a, 0x1f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x2d, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0x04, 0x10,
	0x01, 0x20, 0x01, 0x3a, 0x1b, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x3a, 0x20, 0xe6, 0x9b,
	0xb4, 0xe6, 0x96, 0xb0, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf,
	0x1a, 0x09, 0xc2, 0xc4, 0xcb, 0x1c, 0x04, 0x22, 0x02, 0x75, 0x63, 0x42, 0x37, 0x5a, 0x35, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2d, 0x67, 0x6f, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2f, 0x75,
	0x63, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_uc_proto_rawDescOnce sync.Once
	file_uc_proto_rawDescData = file_uc_proto_rawDesc
)

func file_uc_proto_rawDescGZIP() []byte {
	file_uc_proto_rawDescOnce.Do(func() {
		file_uc_proto_rawDescData = protoimpl.X.CompressGZIP(file_uc_proto_rawDescData)
	})
	return file_uc_proto_rawDescData
}

var file_uc_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_uc_proto_goTypes = []interface{}{
	(*PwdSecurityConfig)(nil),                  // 0: erda.openapiv1.uc.PwdSecurityConfig
	(*PwdSecurityConfigGetResponse)(nil),       // 1: erda.openapiv1.uc.PwdSecurityConfigGetResponse
	(*PwdSecurityConfigUpdateRequest)(nil),     // 2: erda.openapiv1.uc.PwdSecurityConfigUpdateRequest
	(*PwdSecurityConfigUpdateResponse)(nil),    // 3: erda.openapiv1.uc.PwdSecurityConfigUpdateResponse
	(*UC_PWD_SECURITY_CONFIG_GET_Request)(nil), // 4: erda.openapiv1.uc.UC_PWD_SECURITY_CONFIG_GET_Request
	(*UC_USER_LIST_LOGIN_METHOD_Request)(nil),  // 5: erda.openapiv1.uc.UC_USER_LIST_LOGIN_METHOD_Request
	(*UserBatchFreezeRequest)(nil),             // 6: erda.openapiv1.uc.UserBatchFreezeRequest
	(*UserBatchFreezeResponse)(nil),            // 7: erda.openapiv1.uc.UserBatchFreezeResponse
	(*UserBatchUnFreezeRequest)(nil),           // 8: erda.openapiv1.uc.UserBatchUnFreezeRequest
	(*UserBatchUnFreezeResponse)(nil),          // 9: erda.openapiv1.uc.UserBatchUnFreezeResponse
	(*UserBatchUpdateLoginMethodRequest)(nil),  // 10: erda.openapiv1.uc.UserBatchUpdateLoginMethodRequest
	(*UserBatchUpdateLoginMethodResponse)(nil), // 11: erda.openapiv1.uc.UserBatchUpdateLoginMethodResponse
	(*UserCreateItem)(nil),                     // 12: erda.openapiv1.uc.UserCreateItem
	(*UserCreateRequest)(nil),                  // 13: erda.openapiv1.uc.UserCreateRequest
	(*UserCreateResponse)(nil),                 // 14: erda.openapiv1.uc.UserCreateResponse
	(*UserFreezeRequest)(nil),                  // 15: erda.openapiv1.uc.UserFreezeRequest
	(*UserFreezeResponse)(nil),                 // 16: erda.openapiv1.uc.UserFreezeResponse
	(*UserListLoginMethodData)(nil),            // 17: erda.openapiv1.uc.UserListLoginMethodData
	(*UserListLoginMethodResponse)(nil),        // 18: erda.openapiv1.uc.UserListLoginMethodResponse
	(*UserPagingRequest)(nil),                  // 19: erda.openapiv1.uc.UserPagingRequest
	(*UserPagingResponse)(nil),                 // 20: erda.openapiv1.uc.UserPagingResponse
	(*UserUnfreezeRequest)(nil),                // 21: erda.openapiv1.uc.UserUnfreezeRequest
	(*UserUnfreezeResponse)(nil),               // 22: erda.openapiv1.uc.UserUnfreezeResponse
	(*UserUpdateInfoRequset)(nil),              // 23: erda.openapiv1.uc.UserUpdateInfoRequset
	(*UserUpdateInfoResponse)(nil),             // 24: erda.openapiv1.uc.UserUpdateInfoResponse
	(*UserUpdateLoginMethodRequest)(nil),       // 25: erda.openapiv1.uc.UserUpdateLoginMethodRequest
	(*UserUpdateLoginMethodResponse)(nil),      // 26: erda.openapiv1.uc.UserUpdateLoginMethodResponse
	(*structpb.Value)(nil),                     // 27: google.protobuf.Value
	(*emptypb.Empty)(nil),                      // 28: google.protobuf.Empty
}
var file_uc_proto_depIdxs = []int32{
	27, // 0: erda.openapiv1.uc.PwdSecurityConfigGetResponse.data:type_name -> google.protobuf.Value
	27, // 1: erda.openapiv1.uc.PwdSecurityConfigUpdateRequest.pwdSecurityConfig:type_name -> google.protobuf.Value
	27, // 2: erda.openapiv1.uc.UserCreateRequest.users:type_name -> google.protobuf.Value
	27, // 3: erda.openapiv1.uc.UserListLoginMethodResponse.data:type_name -> google.protobuf.Value
	27, // 4: erda.openapiv1.uc.UserPagingResponse.data:type_name -> google.protobuf.Value
	4,  // 5: erda.openapiv1.uc.uc.UC_PWD_SECURITY_CONFIG_GET:input_type -> erda.openapiv1.uc.UC_PWD_SECURITY_CONFIG_GET_Request
	2,  // 6: erda.openapiv1.uc.uc.UC_PWD_SECURITY_CONFIG_UPDATE:input_type -> erda.openapiv1.uc.PwdSecurityConfigUpdateRequest
	6,  // 7: erda.openapiv1.uc.uc.UC_USER_BATCH_FREEZE:input_type -> erda.openapiv1.uc.UserBatchFreezeRequest
	8,  // 8: erda.openapiv1.uc.uc.UC_USER_BATCH_UNFREEZE:input_type -> erda.openapiv1.uc.UserBatchUnFreezeRequest
	10, // 9: erda.openapiv1.uc.uc.UC_USER_BATCH_UPDATE_LOGIN_METHOD:input_type -> erda.openapiv1.uc.UserBatchUpdateLoginMethodRequest
	13, // 10: erda.openapiv1.uc.uc.UC_USER_CREATE:input_type -> erda.openapiv1.uc.UserCreateRequest
	19, // 11: erda.openapiv1.uc.uc.UC_USER_EXPORT:input_type -> erda.openapiv1.uc.UserPagingRequest
	15, // 12: erda.openapiv1.uc.uc.UC_USER_FREEZE:input_type -> erda.openapiv1.uc.UserFreezeRequest
	5,  // 13: erda.openapiv1.uc.uc.UC_USER_LIST_LOGIN_METHOD:input_type -> erda.openapiv1.uc.UC_USER_LIST_LOGIN_METHOD_Request
	19, // 14: erda.openapiv1.uc.uc.UC_USER_PAGING:input_type -> erda.openapiv1.uc.UserPagingRequest
	21, // 15: erda.openapiv1.uc.uc.UC_USER_UNFREEZE:input_type -> erda.openapiv1.uc.UserUnfreezeRequest
	25, // 16: erda.openapiv1.uc.uc.UC_USER_UPDATE_LOGIN_METHOD:input_type -> erda.openapiv1.uc.UserUpdateLoginMethodRequest
	23, // 17: erda.openapiv1.uc.uc.UC_USER_UPDATE_USERINFO:input_type -> erda.openapiv1.uc.UserUpdateInfoRequset
	1,  // 18: erda.openapiv1.uc.uc.UC_PWD_SECURITY_CONFIG_GET:output_type -> erda.openapiv1.uc.PwdSecurityConfigGetResponse
	3,  // 19: erda.openapiv1.uc.uc.UC_PWD_SECURITY_CONFIG_UPDATE:output_type -> erda.openapiv1.uc.PwdSecurityConfigUpdateResponse
	7,  // 20: erda.openapiv1.uc.uc.UC_USER_BATCH_FREEZE:output_type -> erda.openapiv1.uc.UserBatchFreezeResponse
	9,  // 21: erda.openapiv1.uc.uc.UC_USER_BATCH_UNFREEZE:output_type -> erda.openapiv1.uc.UserBatchUnFreezeResponse
	11, // 22: erda.openapiv1.uc.uc.UC_USER_BATCH_UPDATE_LOGIN_METHOD:output_type -> erda.openapiv1.uc.UserBatchUpdateLoginMethodResponse
	14, // 23: erda.openapiv1.uc.uc.UC_USER_CREATE:output_type -> erda.openapiv1.uc.UserCreateResponse
	28, // 24: erda.openapiv1.uc.uc.UC_USER_EXPORT:output_type -> google.protobuf.Empty
	16, // 25: erda.openapiv1.uc.uc.UC_USER_FREEZE:output_type -> erda.openapiv1.uc.UserFreezeResponse
	18, // 26: erda.openapiv1.uc.uc.UC_USER_LIST_LOGIN_METHOD:output_type -> erda.openapiv1.uc.UserListLoginMethodResponse
	20, // 27: erda.openapiv1.uc.uc.UC_USER_PAGING:output_type -> erda.openapiv1.uc.UserPagingResponse
	22, // 28: erda.openapiv1.uc.uc.UC_USER_UNFREEZE:output_type -> erda.openapiv1.uc.UserUnfreezeResponse
	26, // 29: erda.openapiv1.uc.uc.UC_USER_UPDATE_LOGIN_METHOD:output_type -> erda.openapiv1.uc.UserUpdateLoginMethodResponse
	24, // 30: erda.openapiv1.uc.uc.UC_USER_UPDATE_USERINFO:output_type -> erda.openapiv1.uc.UserUpdateInfoResponse
	18, // [18:31] is the sub-list for method output_type
	5,  // [5:18] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_uc_proto_init() }
func file_uc_proto_init() {
	if File_uc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_uc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PwdSecurityConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PwdSecurityConfigGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PwdSecurityConfigUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PwdSecurityConfigUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UC_PWD_SECURITY_CONFIG_GET_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UC_USER_LIST_LOGIN_METHOD_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBatchFreezeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBatchFreezeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBatchUnFreezeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBatchUnFreezeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBatchUpdateLoginMethodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBatchUpdateLoginMethodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCreateItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFreezeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFreezeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListLoginMethodData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListLoginMethodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPagingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPagingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUnfreezeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUnfreezeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateInfoRequset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateLoginMethodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateLoginMethodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_uc_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_uc_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_uc_proto_msgTypes[20].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_uc_proto_goTypes,
		DependencyIndexes: file_uc_proto_depIdxs,
		MessageInfos:      file_uc_proto_msgTypes,
	}.Build()
	File_uc_proto = out.File
	file_uc_proto_rawDesc = nil
	file_uc_proto_goTypes = nil
	file_uc_proto_depIdxs = nil
}
