// Code generated by protoc-gen-go-json. DO NOT EDIT.
// Source: testplatform_testplan.proto

package pb

import (
	bytes "bytes"
	json "encoding/json"

	jsonpb "github.com/erda-project/erda-infra/pkg/transport/http/encoding/jsonpb"
	protojson "google.golang.org/protobuf/encoding/protojson"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "encoding/json" package it is being compiled against.
var _ json.Marshaler = (*AUTOTESTS_TESTPLAN_EXECUTE_Request)(nil)
var _ json.Unmarshaler = (*AUTOTESTS_TESTPLAN_EXECUTE_Request)(nil)
var _ json.Marshaler = (*AUTOTESTS_TESTPLAN_PAGING_Request)(nil)
var _ json.Unmarshaler = (*AUTOTESTS_TESTPLAN_PAGING_Request)(nil)
var _ json.Marshaler = (*CANCEL_APITEST_Request)(nil)
var _ json.Unmarshaler = (*CANCEL_APITEST_Request)(nil)
var _ json.Marshaler = (*DELETE_Request)(nil)
var _ json.Unmarshaler = (*DELETE_Request)(nil)
var _ json.Marshaler = (*EXECUTE_APITEST_Request)(nil)
var _ json.Unmarshaler = (*EXECUTE_APITEST_Request)(nil)
var _ json.Marshaler = (*GENERATE_REPORT_Request)(nil)
var _ json.Unmarshaler = (*GENERATE_REPORT_Request)(nil)
var _ json.Marshaler = (*GET_Request)(nil)
var _ json.Unmarshaler = (*GET_Request)(nil)
var _ json.Marshaler = (*TestPlan)(nil)
var _ json.Unmarshaler = (*TestPlan)(nil)
var _ json.Marshaler = (*TestPlanCreateRequest)(nil)
var _ json.Unmarshaler = (*TestPlanCreateRequest)(nil)
var _ json.Marshaler = (*TestPlanCreateResponse)(nil)
var _ json.Unmarshaler = (*TestPlanCreateResponse)(nil)
var _ json.Marshaler = (*TestPlanGetResponse)(nil)
var _ json.Unmarshaler = (*TestPlanGetResponse)(nil)
var _ json.Marshaler = (*TestPlanPagingRequest)(nil)
var _ json.Unmarshaler = (*TestPlanPagingRequest)(nil)
var _ json.Marshaler = (*TestPlanPagingResponse)(nil)
var _ json.Unmarshaler = (*TestPlanPagingResponse)(nil)
var _ json.Marshaler = (*TestPlanPagingResponseData)(nil)
var _ json.Unmarshaler = (*TestPlanPagingResponseData)(nil)
var _ json.Marshaler = (*TestPlanRelsCount)(nil)
var _ json.Unmarshaler = (*TestPlanRelsCount)(nil)
var _ json.Marshaler = (*TestPlanReportGenerateResponse)(nil)
var _ json.Unmarshaler = (*TestPlanReportGenerateResponse)(nil)
var _ json.Marshaler = (*TestPlanTestSetListResponse)(nil)
var _ json.Unmarshaler = (*TestPlanTestSetListResponse)(nil)
var _ json.Marshaler = (*TestPlanTestSetsListRequest)(nil)
var _ json.Unmarshaler = (*TestPlanTestSetsListRequest)(nil)
var _ json.Marshaler = (*TestPlanUpdateRequest)(nil)
var _ json.Unmarshaler = (*TestPlanUpdateRequest)(nil)
var _ json.Marshaler = (*TestSet)(nil)
var _ json.Unmarshaler = (*TestSet)(nil)

// AUTOTESTS_TESTPLAN_EXECUTE_Request implement json.Marshaler.
func (m *AUTOTESTS_TESTPLAN_EXECUTE_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// AUTOTESTS_TESTPLAN_EXECUTE_Request implement json.Marshaler.
func (m *AUTOTESTS_TESTPLAN_EXECUTE_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// AUTOTESTS_TESTPLAN_PAGING_Request implement json.Marshaler.
func (m *AUTOTESTS_TESTPLAN_PAGING_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// AUTOTESTS_TESTPLAN_PAGING_Request implement json.Marshaler.
func (m *AUTOTESTS_TESTPLAN_PAGING_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CANCEL_APITEST_Request implement json.Marshaler.
func (m *CANCEL_APITEST_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CANCEL_APITEST_Request implement json.Marshaler.
func (m *CANCEL_APITEST_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// DELETE_Request implement json.Marshaler.
func (m *DELETE_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// DELETE_Request implement json.Marshaler.
func (m *DELETE_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// EXECUTE_APITEST_Request implement json.Marshaler.
func (m *EXECUTE_APITEST_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// EXECUTE_APITEST_Request implement json.Marshaler.
func (m *EXECUTE_APITEST_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GENERATE_REPORT_Request implement json.Marshaler.
func (m *GENERATE_REPORT_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GENERATE_REPORT_Request implement json.Marshaler.
func (m *GENERATE_REPORT_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GET_Request implement json.Marshaler.
func (m *GET_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GET_Request implement json.Marshaler.
func (m *GET_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestPlan implement json.Marshaler.
func (m *TestPlan) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestPlan implement json.Marshaler.
func (m *TestPlan) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestPlanCreateRequest implement json.Marshaler.
func (m *TestPlanCreateRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestPlanCreateRequest implement json.Marshaler.
func (m *TestPlanCreateRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestPlanCreateResponse implement json.Marshaler.
func (m *TestPlanCreateResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestPlanCreateResponse implement json.Marshaler.
func (m *TestPlanCreateResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestPlanGetResponse implement json.Marshaler.
func (m *TestPlanGetResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestPlanGetResponse implement json.Marshaler.
func (m *TestPlanGetResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestPlanPagingRequest implement json.Marshaler.
func (m *TestPlanPagingRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestPlanPagingRequest implement json.Marshaler.
func (m *TestPlanPagingRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestPlanPagingResponse implement json.Marshaler.
func (m *TestPlanPagingResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestPlanPagingResponse implement json.Marshaler.
func (m *TestPlanPagingResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestPlanPagingResponseData implement json.Marshaler.
func (m *TestPlanPagingResponseData) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestPlanPagingResponseData implement json.Marshaler.
func (m *TestPlanPagingResponseData) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestPlanRelsCount implement json.Marshaler.
func (m *TestPlanRelsCount) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestPlanRelsCount implement json.Marshaler.
func (m *TestPlanRelsCount) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestPlanReportGenerateResponse implement json.Marshaler.
func (m *TestPlanReportGenerateResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestPlanReportGenerateResponse implement json.Marshaler.
func (m *TestPlanReportGenerateResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestPlanTestSetListResponse implement json.Marshaler.
func (m *TestPlanTestSetListResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestPlanTestSetListResponse implement json.Marshaler.
func (m *TestPlanTestSetListResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestPlanTestSetsListRequest implement json.Marshaler.
func (m *TestPlanTestSetsListRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestPlanTestSetsListRequest implement json.Marshaler.
func (m *TestPlanTestSetsListRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestPlanUpdateRequest implement json.Marshaler.
func (m *TestPlanUpdateRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestPlanUpdateRequest implement json.Marshaler.
func (m *TestPlanUpdateRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestSet implement json.Marshaler.
func (m *TestSet) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestSet implement json.Marshaler.
func (m *TestSet) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}
