// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: testplatform_testplan_rel.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterTestplatformTestplanRelImp testplatform_testplan_rel.proto
func RegisterTestplatformTestplanRelImp(regester transport.Register, srv TestplatformTestplanRelServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterTestplatformTestplanRelHandler(regester, TestplatformTestplanRelHandler(srv), _ops.HTTP...)
	RegisterTestplatformTestplanRelServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.openapiv1.testplatform.TestplatformTestplanRel",
	)
}

var (
	testplatformTestplanRelClientType  = reflect.TypeOf((*TestplatformTestplanRelClient)(nil)).Elem()
	testplatformTestplanRelServerType  = reflect.TypeOf((*TestplatformTestplanRelServer)(nil)).Elem()
	testplatformTestplanRelHandlerType = reflect.TypeOf((*TestplatformTestplanRelHandler)(nil)).Elem()
)

// TestplatformTestplanRelClientType .
func TestplatformTestplanRelClientType() reflect.Type { return testplatformTestplanRelClientType }

// TestplatformTestplanRelServerType .
func TestplatformTestplanRelServerType() reflect.Type { return testplatformTestplanRelServerType }

// TestplatformTestplanRelHandlerType .
func TestplatformTestplanRelHandlerType() reflect.Type { return testplatformTestplanRelHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		testplatformTestplanRelClientType,
		// server types
		testplatformTestplanRelServerType,
		// handler types
		testplatformTestplanRelHandlerType,
	}
}
