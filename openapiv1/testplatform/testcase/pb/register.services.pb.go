// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: testplatform_testcase.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterTestplatformTestcaseImp testplatform_testcase.proto
func RegisterTestplatformTestcaseImp(regester transport.Register, srv TestplatformTestcaseServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterTestplatformTestcaseHandler(regester, TestplatformTestcaseHandler(srv), _ops.HTTP...)
	RegisterTestplatformTestcaseServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.openapiv1.testplatform.TestplatformTestcase",
	)
}

var (
	testplatformTestcaseClientType  = reflect.TypeOf((*TestplatformTestcaseClient)(nil)).Elem()
	testplatformTestcaseServerType  = reflect.TypeOf((*TestplatformTestcaseServer)(nil)).Elem()
	testplatformTestcaseHandlerType = reflect.TypeOf((*TestplatformTestcaseHandler)(nil)).Elem()
)

// TestplatformTestcaseClientType .
func TestplatformTestcaseClientType() reflect.Type { return testplatformTestcaseClientType }

// TestplatformTestcaseServerType .
func TestplatformTestcaseServerType() reflect.Type { return testplatformTestcaseServerType }

// TestplatformTestcaseHandlerType .
func TestplatformTestcaseHandlerType() reflect.Type { return testplatformTestcaseHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		testplatformTestcaseClientType,
		// server types
		testplatformTestcaseServerType,
		// handler types
		testplatformTestcaseHandlerType,
	}
}
