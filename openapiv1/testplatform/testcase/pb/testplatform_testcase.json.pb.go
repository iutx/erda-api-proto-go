// Code generated by protoc-gen-go-json. DO NOT EDIT.
// Source: testplatform_testcase.proto

package pb

import (
	bytes "bytes"
	json "encoding/json"

	jsonpb "github.com/erda-project/erda-infra/pkg/transport/http/encoding/jsonpb"
	protojson "google.golang.org/protobuf/encoding/protojson"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "encoding/json" package it is being compiled against.
var _ json.Marshaler = (*GET_Request)(nil)
var _ json.Unmarshaler = (*GET_Request)(nil)
var _ json.Marshaler = (*TestCaseBatchCleanFromRecycleBinRequest)(nil)
var _ json.Unmarshaler = (*TestCaseBatchCleanFromRecycleBinRequest)(nil)
var _ json.Marshaler = (*TestCaseBatchCleanFromRecycleBinResponse)(nil)
var _ json.Unmarshaler = (*TestCaseBatchCleanFromRecycleBinResponse)(nil)
var _ json.Marshaler = (*TestCaseBatchCopyRequest)(nil)
var _ json.Unmarshaler = (*TestCaseBatchCopyRequest)(nil)
var _ json.Marshaler = (*TestCaseBatchCopyResponse)(nil)
var _ json.Unmarshaler = (*TestCaseBatchCopyResponse)(nil)
var _ json.Marshaler = (*TestCaseBatchUpdateRequest)(nil)
var _ json.Unmarshaler = (*TestCaseBatchUpdateRequest)(nil)
var _ json.Marshaler = (*TestCaseBatchUpdateResponse)(nil)
var _ json.Unmarshaler = (*TestCaseBatchUpdateResponse)(nil)
var _ json.Marshaler = (*TestCaseCreateRequest)(nil)
var _ json.Unmarshaler = (*TestCaseCreateRequest)(nil)
var _ json.Marshaler = (*TestCaseCreateResponse)(nil)
var _ json.Unmarshaler = (*TestCaseCreateResponse)(nil)
var _ json.Marshaler = (*TestCaseExportRequest)(nil)
var _ json.Unmarshaler = (*TestCaseExportRequest)(nil)
var _ json.Marshaler = (*TestCaseExportResponse)(nil)
var _ json.Unmarshaler = (*TestCaseExportResponse)(nil)
var _ json.Marshaler = (*TestCaseGetResponse)(nil)
var _ json.Unmarshaler = (*TestCaseGetResponse)(nil)
var _ json.Marshaler = (*TestCaseImportRequest)(nil)
var _ json.Unmarshaler = (*TestCaseImportRequest)(nil)
var _ json.Marshaler = (*TestCaseImportResponse)(nil)
var _ json.Unmarshaler = (*TestCaseImportResponse)(nil)
var _ json.Marshaler = (*TestCasePagingRequest)(nil)
var _ json.Unmarshaler = (*TestCasePagingRequest)(nil)
var _ json.Marshaler = (*TestCasePagingResponse)(nil)
var _ json.Unmarshaler = (*TestCasePagingResponse)(nil)
var _ json.Marshaler = (*TestCaseStepAndResult)(nil)
var _ json.Unmarshaler = (*TestCaseStepAndResult)(nil)
var _ json.Marshaler = (*TestCaseUpdateRequest)(nil)
var _ json.Unmarshaler = (*TestCaseUpdateRequest)(nil)
var _ json.Marshaler = (*TestCaseUpdateResponse)(nil)
var _ json.Unmarshaler = (*TestCaseUpdateResponse)(nil)

// GET_Request implement json.Marshaler.
func (m *GET_Request) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GET_Request implement json.Marshaler.
func (m *GET_Request) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCaseBatchCleanFromRecycleBinRequest implement json.Marshaler.
func (m *TestCaseBatchCleanFromRecycleBinRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCaseBatchCleanFromRecycleBinRequest implement json.Marshaler.
func (m *TestCaseBatchCleanFromRecycleBinRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCaseBatchCleanFromRecycleBinResponse implement json.Marshaler.
func (m *TestCaseBatchCleanFromRecycleBinResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCaseBatchCleanFromRecycleBinResponse implement json.Marshaler.
func (m *TestCaseBatchCleanFromRecycleBinResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCaseBatchCopyRequest implement json.Marshaler.
func (m *TestCaseBatchCopyRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCaseBatchCopyRequest implement json.Marshaler.
func (m *TestCaseBatchCopyRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCaseBatchCopyResponse implement json.Marshaler.
func (m *TestCaseBatchCopyResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCaseBatchCopyResponse implement json.Marshaler.
func (m *TestCaseBatchCopyResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCaseBatchUpdateRequest implement json.Marshaler.
func (m *TestCaseBatchUpdateRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCaseBatchUpdateRequest implement json.Marshaler.
func (m *TestCaseBatchUpdateRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCaseBatchUpdateResponse implement json.Marshaler.
func (m *TestCaseBatchUpdateResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCaseBatchUpdateResponse implement json.Marshaler.
func (m *TestCaseBatchUpdateResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCaseCreateRequest implement json.Marshaler.
func (m *TestCaseCreateRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCaseCreateRequest implement json.Marshaler.
func (m *TestCaseCreateRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCaseCreateResponse implement json.Marshaler.
func (m *TestCaseCreateResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCaseCreateResponse implement json.Marshaler.
func (m *TestCaseCreateResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCaseExportRequest implement json.Marshaler.
func (m *TestCaseExportRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCaseExportRequest implement json.Marshaler.
func (m *TestCaseExportRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCaseExportResponse implement json.Marshaler.
func (m *TestCaseExportResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCaseExportResponse implement json.Marshaler.
func (m *TestCaseExportResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCaseGetResponse implement json.Marshaler.
func (m *TestCaseGetResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCaseGetResponse implement json.Marshaler.
func (m *TestCaseGetResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCaseImportRequest implement json.Marshaler.
func (m *TestCaseImportRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCaseImportRequest implement json.Marshaler.
func (m *TestCaseImportRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCaseImportResponse implement json.Marshaler.
func (m *TestCaseImportResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCaseImportResponse implement json.Marshaler.
func (m *TestCaseImportResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCasePagingRequest implement json.Marshaler.
func (m *TestCasePagingRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCasePagingRequest implement json.Marshaler.
func (m *TestCasePagingRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCasePagingResponse implement json.Marshaler.
func (m *TestCasePagingResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCasePagingResponse implement json.Marshaler.
func (m *TestCasePagingResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCaseStepAndResult implement json.Marshaler.
func (m *TestCaseStepAndResult) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCaseStepAndResult implement json.Marshaler.
func (m *TestCaseStepAndResult) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCaseUpdateRequest implement json.Marshaler.
func (m *TestCaseUpdateRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCaseUpdateRequest implement json.Marshaler.
func (m *TestCaseUpdateRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCaseUpdateResponse implement json.Marshaler.
func (m *TestCaseUpdateResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCaseUpdateResponse implement json.Marshaler.
func (m *TestCaseUpdateResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}
