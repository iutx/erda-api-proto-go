// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: api_gateway.proto

package pb

import (
	"bytes"
	"errors"
	"fmt"
	"net"
	"net/mail"
	"net/url"
	"regexp"
	"sort"
	"strings"
	"time"
	"unicode/utf8"

	"google.golang.org/protobuf/types/known/anypb"
)

// ensure the imports are used
var (
	_ = bytes.MinRead
	_ = errors.New("")
	_ = fmt.Print
	_ = utf8.UTFMax
	_ = (*regexp.Regexp)(nil)
	_ = (*strings.Reader)(nil)
	_ = net.IPv4len
	_ = time.Duration(0)
	_ = (*url.URL)(nil)
	_ = (*mail.Address)(nil)
	_ = anypb.Any{}
	_ = sort.Sort
)

// Validate checks the field values on API_GATEWAY_API_CREATE_Request with the
// rules defined in the proto definition for this message. If any rules are
// violated, the first error encountered is returned, or nil if there are no violations.
func (m *API_GATEWAY_API_CREATE_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_API_CREATE_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_API_CREATE_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_API_CREATE_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_API_CREATE_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return API_GATEWAY_API_CREATE_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_API_CREATE_RequestMultiError is an error wrapping multiple
// validation errors returned by API_GATEWAY_API_CREATE_Request.ValidateAll()
// if the designated constraints aren't met.
type API_GATEWAY_API_CREATE_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_API_CREATE_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_API_CREATE_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_API_CREATE_RequestValidationError is the validation error
// returned by API_GATEWAY_API_CREATE_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_API_CREATE_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_API_CREATE_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_API_CREATE_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_API_CREATE_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_API_CREATE_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_API_CREATE_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_API_CREATE_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_API_CREATE_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_API_CREATE_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_API_CREATE_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_API_CREATE_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_API_DELETE_Request with the
// rules defined in the proto definition for this message. If any rules are
// violated, the first error encountered is returned, or nil if there are no violations.
func (m *API_GATEWAY_API_DELETE_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_API_DELETE_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_API_DELETE_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_API_DELETE_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_API_DELETE_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	// no validation rules for ApiId

	if len(errors) > 0 {
		return API_GATEWAY_API_DELETE_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_API_DELETE_RequestMultiError is an error wrapping multiple
// validation errors returned by API_GATEWAY_API_DELETE_Request.ValidateAll()
// if the designated constraints aren't met.
type API_GATEWAY_API_DELETE_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_API_DELETE_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_API_DELETE_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_API_DELETE_RequestValidationError is the validation error
// returned by API_GATEWAY_API_DELETE_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_API_DELETE_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_API_DELETE_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_API_DELETE_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_API_DELETE_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_API_DELETE_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_API_DELETE_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_API_DELETE_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_API_DELETE_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_API_DELETE_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_API_DELETE_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_API_DELETE_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_API_LIST_Request with the
// rules defined in the proto definition for this message. If any rules are
// violated, the first error encountered is returned, or nil if there are no violations.
func (m *API_GATEWAY_API_LIST_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_API_LIST_Request with the
// rules defined in the proto definition for this message. If any rules are
// violated, the result is a list of violation errors wrapped in
// API_GATEWAY_API_LIST_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_API_LIST_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_API_LIST_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return API_GATEWAY_API_LIST_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_API_LIST_RequestMultiError is an error wrapping multiple
// validation errors returned by API_GATEWAY_API_LIST_Request.ValidateAll() if
// the designated constraints aren't met.
type API_GATEWAY_API_LIST_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_API_LIST_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_API_LIST_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_API_LIST_RequestValidationError is the validation error returned
// by API_GATEWAY_API_LIST_Request.Validate if the designated constraints
// aren't met.
type API_GATEWAY_API_LIST_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_API_LIST_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_API_LIST_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_API_LIST_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_API_LIST_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_API_LIST_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_API_LIST_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_API_LIST_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_API_LIST_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_API_LIST_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_API_LIST_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_API_UPDATE_Request with the
// rules defined in the proto definition for this message. If any rules are
// violated, the first error encountered is returned, or nil if there are no violations.
func (m *API_GATEWAY_API_UPDATE_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_API_UPDATE_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_API_UPDATE_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_API_UPDATE_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_API_UPDATE_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	// no validation rules for ApiId

	if len(errors) > 0 {
		return API_GATEWAY_API_UPDATE_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_API_UPDATE_RequestMultiError is an error wrapping multiple
// validation errors returned by API_GATEWAY_API_UPDATE_Request.ValidateAll()
// if the designated constraints aren't met.
type API_GATEWAY_API_UPDATE_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_API_UPDATE_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_API_UPDATE_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_API_UPDATE_RequestValidationError is the validation error
// returned by API_GATEWAY_API_UPDATE_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_API_UPDATE_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_API_UPDATE_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_API_UPDATE_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_API_UPDATE_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_API_UPDATE_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_API_UPDATE_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_API_UPDATE_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_API_UPDATE_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_API_UPDATE_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_API_UPDATE_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_API_UPDATE_RequestValidationError{}

// Validate checks the field values on
// API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_Request with the rules defined in the
// proto definition for this message. If any rules are violated, the first
// error encountered is returned, or nil if there are no violations.
func (m *API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on
// API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_Request with the rules defined in the
// proto definition for this message. If any rules are violated, the result is
// a list of violation errors wrapped in
// API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	// no validation rules for Category

	if len(errors) > 0 {
		return API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_RequestMultiError is an error wrapping
// multiple validation errors returned by
// API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_Request.ValidateAll() if the
// designated constraints aren't met.
type API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_RequestValidationError is the
// validation error returned by
// API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_RequestValidationError) Reason() string {
	return e.reason
}

// Cause function returns cause value.
func (e API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_CATEGORY_CREATE_OR_UPDATE_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_CATEGORY_CREATE_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the first error encountered is returned, or nil if there are
// no violations.
func (m *API_GATEWAY_CATEGORY_CREATE_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_CATEGORY_CREATE_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_CATEGORY_CREATE_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_CATEGORY_CREATE_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_CATEGORY_CREATE_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	// no validation rules for Category

	if len(errors) > 0 {
		return API_GATEWAY_CATEGORY_CREATE_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_CATEGORY_CREATE_RequestMultiError is an error wrapping multiple
// validation errors returned by
// API_GATEWAY_CATEGORY_CREATE_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_CATEGORY_CREATE_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_CATEGORY_CREATE_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_CATEGORY_CREATE_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_CATEGORY_CREATE_RequestValidationError is the validation error
// returned by API_GATEWAY_CATEGORY_CREATE_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_CATEGORY_CREATE_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_CATEGORY_CREATE_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_CATEGORY_CREATE_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_CATEGORY_CREATE_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_CATEGORY_CREATE_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_CATEGORY_CREATE_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_CATEGORY_CREATE_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_CATEGORY_CREATE_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_CATEGORY_CREATE_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_CATEGORY_CREATE_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_CATEGORY_CREATE_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_CATEGORY_DELETE_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the first error encountered is returned, or nil if there are
// no violations.
func (m *API_GATEWAY_CATEGORY_DELETE_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_CATEGORY_DELETE_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_CATEGORY_DELETE_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_CATEGORY_DELETE_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_CATEGORY_DELETE_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	// no validation rules for Category

	// no validation rules for PolicyId

	if len(errors) > 0 {
		return API_GATEWAY_CATEGORY_DELETE_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_CATEGORY_DELETE_RequestMultiError is an error wrapping multiple
// validation errors returned by
// API_GATEWAY_CATEGORY_DELETE_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_CATEGORY_DELETE_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_CATEGORY_DELETE_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_CATEGORY_DELETE_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_CATEGORY_DELETE_RequestValidationError is the validation error
// returned by API_GATEWAY_CATEGORY_DELETE_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_CATEGORY_DELETE_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_CATEGORY_DELETE_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_CATEGORY_DELETE_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_CATEGORY_DELETE_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_CATEGORY_DELETE_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_CATEGORY_DELETE_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_CATEGORY_DELETE_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_CATEGORY_DELETE_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_CATEGORY_DELETE_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_CATEGORY_DELETE_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_CATEGORY_DELETE_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_CATEGORY_INFO_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the first error encountered is returned, or nil if there are
// no violations.
func (m *API_GATEWAY_CATEGORY_INFO_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_CATEGORY_INFO_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_CATEGORY_INFO_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_CATEGORY_INFO_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_CATEGORY_INFO_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	// no validation rules for Category

	if len(errors) > 0 {
		return API_GATEWAY_CATEGORY_INFO_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_CATEGORY_INFO_RequestMultiError is an error wrapping multiple
// validation errors returned by
// API_GATEWAY_CATEGORY_INFO_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_CATEGORY_INFO_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_CATEGORY_INFO_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_CATEGORY_INFO_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_CATEGORY_INFO_RequestValidationError is the validation error
// returned by API_GATEWAY_CATEGORY_INFO_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_CATEGORY_INFO_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_CATEGORY_INFO_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_CATEGORY_INFO_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_CATEGORY_INFO_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_CATEGORY_INFO_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_CATEGORY_INFO_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_CATEGORY_INFO_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_CATEGORY_INFO_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_CATEGORY_INFO_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_CATEGORY_INFO_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_CATEGORY_INFO_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_CATEGORY_UPDATE_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the first error encountered is returned, or nil if there are
// no violations.
func (m *API_GATEWAY_CATEGORY_UPDATE_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_CATEGORY_UPDATE_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_CATEGORY_UPDATE_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_CATEGORY_UPDATE_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_CATEGORY_UPDATE_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	// no validation rules for Category

	// no validation rules for PolicyId

	if len(errors) > 0 {
		return API_GATEWAY_CATEGORY_UPDATE_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_CATEGORY_UPDATE_RequestMultiError is an error wrapping multiple
// validation errors returned by
// API_GATEWAY_CATEGORY_UPDATE_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_CATEGORY_UPDATE_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_CATEGORY_UPDATE_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_CATEGORY_UPDATE_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_CATEGORY_UPDATE_RequestValidationError is the validation error
// returned by API_GATEWAY_CATEGORY_UPDATE_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_CATEGORY_UPDATE_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_CATEGORY_UPDATE_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_CATEGORY_UPDATE_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_CATEGORY_UPDATE_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_CATEGORY_UPDATE_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_CATEGORY_UPDATE_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_CATEGORY_UPDATE_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_CATEGORY_UPDATE_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_CATEGORY_UPDATE_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_CATEGORY_UPDATE_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_CATEGORY_UPDATE_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_CHECK_COMPAT_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the first error encountered is returned, or nil if there are
// no violations.
func (m *API_GATEWAY_CHECK_COMPAT_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_CHECK_COMPAT_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_CHECK_COMPAT_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_CHECK_COMPAT_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_CHECK_COMPAT_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return API_GATEWAY_CHECK_COMPAT_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_CHECK_COMPAT_RequestMultiError is an error wrapping multiple
// validation errors returned by
// API_GATEWAY_CHECK_COMPAT_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_CHECK_COMPAT_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_CHECK_COMPAT_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_CHECK_COMPAT_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_CHECK_COMPAT_RequestValidationError is the validation error
// returned by API_GATEWAY_CHECK_COMPAT_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_CHECK_COMPAT_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_CHECK_COMPAT_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_CHECK_COMPAT_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_CHECK_COMPAT_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_CHECK_COMPAT_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_CHECK_COMPAT_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_CHECK_COMPAT_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_CHECK_COMPAT_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_CHECK_COMPAT_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_CHECK_COMPAT_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_CHECK_COMPAT_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_CONSUMER_API_EDIT_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the first error encountered is returned, or nil if
// there are no violations.
func (m *API_GATEWAY_CONSUMER_API_EDIT_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_CONSUMER_API_EDIT_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_CONSUMER_API_EDIT_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_CONSUMER_API_EDIT_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_CONSUMER_API_EDIT_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return API_GATEWAY_CONSUMER_API_EDIT_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_CONSUMER_API_EDIT_RequestMultiError is an error wrapping
// multiple validation errors returned by
// API_GATEWAY_CONSUMER_API_EDIT_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_CONSUMER_API_EDIT_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_CONSUMER_API_EDIT_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_CONSUMER_API_EDIT_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_CONSUMER_API_EDIT_RequestValidationError is the validation error
// returned by API_GATEWAY_CONSUMER_API_EDIT_Request.Validate if the
// designated constraints aren't met.
type API_GATEWAY_CONSUMER_API_EDIT_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_CONSUMER_API_EDIT_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_CONSUMER_API_EDIT_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_CONSUMER_API_EDIT_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_CONSUMER_API_EDIT_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_CONSUMER_API_EDIT_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_CONSUMER_API_EDIT_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_CONSUMER_API_EDIT_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_CONSUMER_API_EDIT_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_CONSUMER_API_EDIT_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_CONSUMER_API_EDIT_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_CONSUMER_API_INFO_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the first error encountered is returned, or nil if
// there are no violations.
func (m *API_GATEWAY_CONSUMER_API_INFO_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_CONSUMER_API_INFO_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_CONSUMER_API_INFO_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_CONSUMER_API_INFO_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_CONSUMER_API_INFO_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return API_GATEWAY_CONSUMER_API_INFO_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_CONSUMER_API_INFO_RequestMultiError is an error wrapping
// multiple validation errors returned by
// API_GATEWAY_CONSUMER_API_INFO_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_CONSUMER_API_INFO_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_CONSUMER_API_INFO_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_CONSUMER_API_INFO_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_CONSUMER_API_INFO_RequestValidationError is the validation error
// returned by API_GATEWAY_CONSUMER_API_INFO_Request.Validate if the
// designated constraints aren't met.
type API_GATEWAY_CONSUMER_API_INFO_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_CONSUMER_API_INFO_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_CONSUMER_API_INFO_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_CONSUMER_API_INFO_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_CONSUMER_API_INFO_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_CONSUMER_API_INFO_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_CONSUMER_API_INFO_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_CONSUMER_API_INFO_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_CONSUMER_API_INFO_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_CONSUMER_API_INFO_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_CONSUMER_API_INFO_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_CONSUMER_CREATE_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the first error encountered is returned, or nil if there are
// no violations.
func (m *API_GATEWAY_CONSUMER_CREATE_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_CONSUMER_CREATE_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_CONSUMER_CREATE_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_CONSUMER_CREATE_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_CONSUMER_CREATE_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return API_GATEWAY_CONSUMER_CREATE_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_CONSUMER_CREATE_RequestMultiError is an error wrapping multiple
// validation errors returned by
// API_GATEWAY_CONSUMER_CREATE_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_CONSUMER_CREATE_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_CONSUMER_CREATE_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_CONSUMER_CREATE_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_CONSUMER_CREATE_RequestValidationError is the validation error
// returned by API_GATEWAY_CONSUMER_CREATE_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_CONSUMER_CREATE_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_CONSUMER_CREATE_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_CONSUMER_CREATE_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_CONSUMER_CREATE_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_CONSUMER_CREATE_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_CONSUMER_CREATE_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_CONSUMER_CREATE_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_CONSUMER_CREATE_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_CONSUMER_CREATE_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_CONSUMER_CREATE_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_CONSUMER_CREATE_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_CONSUMER_DELETE_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the first error encountered is returned, or nil if there are
// no violations.
func (m *API_GATEWAY_CONSUMER_DELETE_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_CONSUMER_DELETE_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_CONSUMER_DELETE_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_CONSUMER_DELETE_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_CONSUMER_DELETE_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	// no validation rules for ConsumerId

	if len(errors) > 0 {
		return API_GATEWAY_CONSUMER_DELETE_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_CONSUMER_DELETE_RequestMultiError is an error wrapping multiple
// validation errors returned by
// API_GATEWAY_CONSUMER_DELETE_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_CONSUMER_DELETE_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_CONSUMER_DELETE_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_CONSUMER_DELETE_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_CONSUMER_DELETE_RequestValidationError is the validation error
// returned by API_GATEWAY_CONSUMER_DELETE_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_CONSUMER_DELETE_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_CONSUMER_DELETE_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_CONSUMER_DELETE_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_CONSUMER_DELETE_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_CONSUMER_DELETE_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_CONSUMER_DELETE_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_CONSUMER_DELETE_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_CONSUMER_DELETE_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_CONSUMER_DELETE_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_CONSUMER_DELETE_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_CONSUMER_DELETE_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_CONSUMER_EDIT_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the first error encountered is returned, or nil if there are
// no violations.
func (m *API_GATEWAY_CONSUMER_EDIT_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_CONSUMER_EDIT_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_CONSUMER_EDIT_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_CONSUMER_EDIT_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_CONSUMER_EDIT_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return API_GATEWAY_CONSUMER_EDIT_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_CONSUMER_EDIT_RequestMultiError is an error wrapping multiple
// validation errors returned by
// API_GATEWAY_CONSUMER_EDIT_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_CONSUMER_EDIT_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_CONSUMER_EDIT_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_CONSUMER_EDIT_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_CONSUMER_EDIT_RequestValidationError is the validation error
// returned by API_GATEWAY_CONSUMER_EDIT_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_CONSUMER_EDIT_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_CONSUMER_EDIT_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_CONSUMER_EDIT_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_CONSUMER_EDIT_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_CONSUMER_EDIT_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_CONSUMER_EDIT_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_CONSUMER_EDIT_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_CONSUMER_EDIT_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_CONSUMER_EDIT_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_CONSUMER_EDIT_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_CONSUMER_EDIT_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_CONSUMER_INFO_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the first error encountered is returned, or nil if there are
// no violations.
func (m *API_GATEWAY_CONSUMER_INFO_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_CONSUMER_INFO_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_CONSUMER_INFO_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_CONSUMER_INFO_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_CONSUMER_INFO_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	// no validation rules for ConsumerId

	if len(errors) > 0 {
		return API_GATEWAY_CONSUMER_INFO_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_CONSUMER_INFO_RequestMultiError is an error wrapping multiple
// validation errors returned by
// API_GATEWAY_CONSUMER_INFO_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_CONSUMER_INFO_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_CONSUMER_INFO_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_CONSUMER_INFO_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_CONSUMER_INFO_RequestValidationError is the validation error
// returned by API_GATEWAY_CONSUMER_INFO_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_CONSUMER_INFO_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_CONSUMER_INFO_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_CONSUMER_INFO_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_CONSUMER_INFO_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_CONSUMER_INFO_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_CONSUMER_INFO_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_CONSUMER_INFO_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_CONSUMER_INFO_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_CONSUMER_INFO_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_CONSUMER_INFO_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_CONSUMER_INFO_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_CONSUMER_INFO_UPDATE_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the first error encountered is returned, or nil if
// there are no violations.
func (m *API_GATEWAY_CONSUMER_INFO_UPDATE_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on
// API_GATEWAY_CONSUMER_INFO_UPDATE_Request with the rules defined in the
// proto definition for this message. If any rules are violated, the result is
// a list of violation errors wrapped in
// API_GATEWAY_CONSUMER_INFO_UPDATE_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_CONSUMER_INFO_UPDATE_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_CONSUMER_INFO_UPDATE_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	// no validation rules for ConsumerId

	if len(errors) > 0 {
		return API_GATEWAY_CONSUMER_INFO_UPDATE_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_CONSUMER_INFO_UPDATE_RequestMultiError is an error wrapping
// multiple validation errors returned by
// API_GATEWAY_CONSUMER_INFO_UPDATE_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_CONSUMER_INFO_UPDATE_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_CONSUMER_INFO_UPDATE_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_CONSUMER_INFO_UPDATE_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_CONSUMER_INFO_UPDATE_RequestValidationError is the validation
// error returned by API_GATEWAY_CONSUMER_INFO_UPDATE_Request.Validate if the
// designated constraints aren't met.
type API_GATEWAY_CONSUMER_INFO_UPDATE_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_CONSUMER_INFO_UPDATE_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_CONSUMER_INFO_UPDATE_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_CONSUMER_INFO_UPDATE_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_CONSUMER_INFO_UPDATE_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_CONSUMER_INFO_UPDATE_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_CONSUMER_INFO_UPDATE_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_CONSUMER_INFO_UPDATE_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_CONSUMER_INFO_UPDATE_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_CONSUMER_INFO_UPDATE_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_CONSUMER_INFO_UPDATE_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_CONSUMER_LIST_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the first error encountered is returned, or nil if there are
// no violations.
func (m *API_GATEWAY_CONSUMER_LIST_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_CONSUMER_LIST_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_CONSUMER_LIST_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_CONSUMER_LIST_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_CONSUMER_LIST_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return API_GATEWAY_CONSUMER_LIST_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_CONSUMER_LIST_RequestMultiError is an error wrapping multiple
// validation errors returned by
// API_GATEWAY_CONSUMER_LIST_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_CONSUMER_LIST_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_CONSUMER_LIST_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_CONSUMER_LIST_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_CONSUMER_LIST_RequestValidationError is the validation error
// returned by API_GATEWAY_CONSUMER_LIST_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_CONSUMER_LIST_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_CONSUMER_LIST_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_CONSUMER_LIST_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_CONSUMER_LIST_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_CONSUMER_LIST_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_CONSUMER_LIST_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_CONSUMER_LIST_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_CONSUMER_LIST_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_CONSUMER_LIST_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_CONSUMER_LIST_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_CONSUMER_LIST_RequestValidationError{}

// Validate checks the field values on
// API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_Request with the rules defined in the
// proto definition for this message. If any rules are violated, the first
// error encountered is returned, or nil if there are no violations.
func (m *API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on
// API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_Request with the rules defined in the
// proto definition for this message. If any rules are violated, the result is
// a list of violation errors wrapped in
// API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_RequestMultiError is an error wrapping
// multiple validation errors returned by
// API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_RequestValidationError is the validation
// error returned by API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_Request.Validate if
// the designated constraints aren't met.
type API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_DOMAIN_CREATE_OR_UPDATE_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_DOMAIN_INFO_Request with the
// rules defined in the proto definition for this message. If any rules are
// violated, the first error encountered is returned, or nil if there are no violations.
func (m *API_GATEWAY_DOMAIN_INFO_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_DOMAIN_INFO_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_DOMAIN_INFO_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_DOMAIN_INFO_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_DOMAIN_INFO_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return API_GATEWAY_DOMAIN_INFO_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_DOMAIN_INFO_RequestMultiError is an error wrapping multiple
// validation errors returned by API_GATEWAY_DOMAIN_INFO_Request.ValidateAll()
// if the designated constraints aren't met.
type API_GATEWAY_DOMAIN_INFO_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_DOMAIN_INFO_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_DOMAIN_INFO_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_DOMAIN_INFO_RequestValidationError is the validation error
// returned by API_GATEWAY_DOMAIN_INFO_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_DOMAIN_INFO_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_DOMAIN_INFO_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_DOMAIN_INFO_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_DOMAIN_INFO_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_DOMAIN_INFO_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_DOMAIN_INFO_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_DOMAIN_INFO_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_DOMAIN_INFO_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_DOMAIN_INFO_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_DOMAIN_INFO_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_DOMAIN_INFO_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_OPENAPI_CREATE_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the first error encountered is returned, or nil if there are
// no violations.
func (m *API_GATEWAY_OPENAPI_CREATE_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_OPENAPI_CREATE_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_OPENAPI_CREATE_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_OPENAPI_CREATE_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_OPENAPI_CREATE_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return API_GATEWAY_OPENAPI_CREATE_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_OPENAPI_CREATE_RequestMultiError is an error wrapping multiple
// validation errors returned by
// API_GATEWAY_OPENAPI_CREATE_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_OPENAPI_CREATE_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_OPENAPI_CREATE_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_OPENAPI_CREATE_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_OPENAPI_CREATE_RequestValidationError is the validation error
// returned by API_GATEWAY_OPENAPI_CREATE_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_OPENAPI_CREATE_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_OPENAPI_CREATE_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_OPENAPI_CREATE_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_OPENAPI_CREATE_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_OPENAPI_CREATE_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_OPENAPI_CREATE_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_OPENAPI_CREATE_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_OPENAPI_CREATE_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_OPENAPI_CREATE_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_OPENAPI_CREATE_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_OPENAPI_CREATE_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_OPENAPI_DELETE_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the first error encountered is returned, or nil if there are
// no violations.
func (m *API_GATEWAY_OPENAPI_DELETE_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_OPENAPI_DELETE_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_OPENAPI_DELETE_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_OPENAPI_DELETE_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_OPENAPI_DELETE_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return API_GATEWAY_OPENAPI_DELETE_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_OPENAPI_DELETE_RequestMultiError is an error wrapping multiple
// validation errors returned by
// API_GATEWAY_OPENAPI_DELETE_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_OPENAPI_DELETE_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_OPENAPI_DELETE_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_OPENAPI_DELETE_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_OPENAPI_DELETE_RequestValidationError is the validation error
// returned by API_GATEWAY_OPENAPI_DELETE_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_OPENAPI_DELETE_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_OPENAPI_DELETE_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_OPENAPI_DELETE_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_OPENAPI_DELETE_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_OPENAPI_DELETE_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_OPENAPI_DELETE_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_OPENAPI_DELETE_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_OPENAPI_DELETE_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_OPENAPI_DELETE_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_OPENAPI_DELETE_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_OPENAPI_DELETE_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_OPENAPI_GET_Request with the
// rules defined in the proto definition for this message. If any rules are
// violated, the first error encountered is returned, or nil if there are no violations.
func (m *API_GATEWAY_OPENAPI_GET_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_OPENAPI_GET_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_OPENAPI_GET_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_OPENAPI_GET_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_OPENAPI_GET_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return API_GATEWAY_OPENAPI_GET_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_OPENAPI_GET_RequestMultiError is an error wrapping multiple
// validation errors returned by API_GATEWAY_OPENAPI_GET_Request.ValidateAll()
// if the designated constraints aren't met.
type API_GATEWAY_OPENAPI_GET_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_OPENAPI_GET_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_OPENAPI_GET_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_OPENAPI_GET_RequestValidationError is the validation error
// returned by API_GATEWAY_OPENAPI_GET_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_OPENAPI_GET_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_OPENAPI_GET_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_OPENAPI_GET_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_OPENAPI_GET_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_OPENAPI_GET_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_OPENAPI_GET_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_OPENAPI_GET_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_OPENAPI_GET_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_OPENAPI_GET_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_OPENAPI_GET_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_OPENAPI_GET_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_OPENAPI_UPDATE_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the first error encountered is returned, or nil if there are
// no violations.
func (m *API_GATEWAY_OPENAPI_UPDATE_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_OPENAPI_UPDATE_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_OPENAPI_UPDATE_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_OPENAPI_UPDATE_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_OPENAPI_UPDATE_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return API_GATEWAY_OPENAPI_UPDATE_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_OPENAPI_UPDATE_RequestMultiError is an error wrapping multiple
// validation errors returned by
// API_GATEWAY_OPENAPI_UPDATE_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_OPENAPI_UPDATE_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_OPENAPI_UPDATE_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_OPENAPI_UPDATE_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_OPENAPI_UPDATE_RequestValidationError is the validation error
// returned by API_GATEWAY_OPENAPI_UPDATE_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_OPENAPI_UPDATE_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_OPENAPI_UPDATE_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_OPENAPI_UPDATE_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_OPENAPI_UPDATE_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_OPENAPI_UPDATE_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_OPENAPI_UPDATE_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_OPENAPI_UPDATE_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_OPENAPI_UPDATE_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_OPENAPI_UPDATE_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_OPENAPI_UPDATE_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_OPENAPI_UPDATE_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_PUBLISH_AUTHN_GET_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the first error encountered is returned, or nil if
// there are no violations.
func (m *API_GATEWAY_PUBLISH_AUTHN_GET_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_PUBLISH_AUTHN_GET_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_PUBLISH_AUTHN_GET_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_PUBLISH_AUTHN_GET_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_PUBLISH_AUTHN_GET_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	// no validation rules for ApiPublishId

	if len(errors) > 0 {
		return API_GATEWAY_PUBLISH_AUTHN_GET_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_PUBLISH_AUTHN_GET_RequestMultiError is an error wrapping
// multiple validation errors returned by
// API_GATEWAY_PUBLISH_AUTHN_GET_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_PUBLISH_AUTHN_GET_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_PUBLISH_AUTHN_GET_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_PUBLISH_AUTHN_GET_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_PUBLISH_AUTHN_GET_RequestValidationError is the validation error
// returned by API_GATEWAY_PUBLISH_AUTHN_GET_Request.Validate if the
// designated constraints aren't met.
type API_GATEWAY_PUBLISH_AUTHN_GET_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_PUBLISH_AUTHN_GET_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_PUBLISH_AUTHN_GET_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_PUBLISH_AUTHN_GET_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_PUBLISH_AUTHN_GET_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_PUBLISH_AUTHN_GET_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_PUBLISH_AUTHN_GET_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_PUBLISH_AUTHN_GET_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_PUBLISH_AUTHN_GET_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_PUBLISH_AUTHN_GET_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_PUBLISH_AUTHN_GET_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_PUBLISH_SUBSCRIBE_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the first error encountered is returned, or nil if
// there are no violations.
func (m *API_GATEWAY_PUBLISH_SUBSCRIBE_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_PUBLISH_SUBSCRIBE_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_PUBLISH_SUBSCRIBE_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_PUBLISH_SUBSCRIBE_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_PUBLISH_SUBSCRIBE_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	// no validation rules for ApiPublishId

	if len(errors) > 0 {
		return API_GATEWAY_PUBLISH_SUBSCRIBE_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_PUBLISH_SUBSCRIBE_RequestMultiError is an error wrapping
// multiple validation errors returned by
// API_GATEWAY_PUBLISH_SUBSCRIBE_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_PUBLISH_SUBSCRIBE_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_PUBLISH_SUBSCRIBE_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_PUBLISH_SUBSCRIBE_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_PUBLISH_SUBSCRIBE_RequestValidationError is the validation error
// returned by API_GATEWAY_PUBLISH_SUBSCRIBE_Request.Validate if the
// designated constraints aren't met.
type API_GATEWAY_PUBLISH_SUBSCRIBE_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_PUBLISH_SUBSCRIBE_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_PUBLISH_SUBSCRIBE_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_PUBLISH_SUBSCRIBE_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_PUBLISH_SUBSCRIBE_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_PUBLISH_SUBSCRIBE_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_PUBLISH_SUBSCRIBE_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_PUBLISH_SUBSCRIBE_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_PUBLISH_SUBSCRIBE_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_PUBLISH_SUBSCRIBE_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_PUBLISH_SUBSCRIBE_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_PUBLISH_SWAGGER_GET_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the first error encountered is returned, or nil if
// there are no violations.
func (m *API_GATEWAY_PUBLISH_SWAGGER_GET_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on
// API_GATEWAY_PUBLISH_SWAGGER_GET_Request with the rules defined in the proto
// definition for this message. If any rules are violated, the result is a
// list of violation errors wrapped in
// API_GATEWAY_PUBLISH_SWAGGER_GET_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_PUBLISH_SWAGGER_GET_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_PUBLISH_SWAGGER_GET_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	// no validation rules for ApiPublishId

	if len(errors) > 0 {
		return API_GATEWAY_PUBLISH_SWAGGER_GET_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_PUBLISH_SWAGGER_GET_RequestMultiError is an error wrapping
// multiple validation errors returned by
// API_GATEWAY_PUBLISH_SWAGGER_GET_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_PUBLISH_SWAGGER_GET_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_PUBLISH_SWAGGER_GET_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_PUBLISH_SWAGGER_GET_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_PUBLISH_SWAGGER_GET_RequestValidationError is the validation
// error returned by API_GATEWAY_PUBLISH_SWAGGER_GET_Request.Validate if the
// designated constraints aren't met.
type API_GATEWAY_PUBLISH_SWAGGER_GET_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_PUBLISH_SWAGGER_GET_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_PUBLISH_SWAGGER_GET_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_PUBLISH_SWAGGER_GET_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_PUBLISH_SWAGGER_GET_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_PUBLISH_SWAGGER_GET_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_PUBLISH_SWAGGER_GET_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_PUBLISH_SWAGGER_GET_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_PUBLISH_SWAGGER_GET_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_PUBLISH_SWAGGER_GET_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_PUBLISH_SWAGGER_GET_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_REGISTER_APPS_INFO_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the first error encountered is returned, or nil if
// there are no violations.
func (m *API_GATEWAY_REGISTER_APPS_INFO_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on
// API_GATEWAY_REGISTER_APPS_INFO_Request with the rules defined in the proto
// definition for this message. If any rules are violated, the result is a
// list of violation errors wrapped in
// API_GATEWAY_REGISTER_APPS_INFO_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_REGISTER_APPS_INFO_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_REGISTER_APPS_INFO_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return API_GATEWAY_REGISTER_APPS_INFO_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_REGISTER_APPS_INFO_RequestMultiError is an error wrapping
// multiple validation errors returned by
// API_GATEWAY_REGISTER_APPS_INFO_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_REGISTER_APPS_INFO_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_REGISTER_APPS_INFO_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_REGISTER_APPS_INFO_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_REGISTER_APPS_INFO_RequestValidationError is the validation
// error returned by API_GATEWAY_REGISTER_APPS_INFO_Request.Validate if the
// designated constraints aren't met.
type API_GATEWAY_REGISTER_APPS_INFO_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_REGISTER_APPS_INFO_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_REGISTER_APPS_INFO_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_REGISTER_APPS_INFO_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_REGISTER_APPS_INFO_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_REGISTER_APPS_INFO_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_REGISTER_APPS_INFO_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_REGISTER_APPS_INFO_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_REGISTER_APPS_INFO_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_REGISTER_APPS_INFO_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_REGISTER_APPS_INFO_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_REGISTER_PUBLISH_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the first error encountered is returned, or nil if
// there are no violations.
func (m *API_GATEWAY_REGISTER_PUBLISH_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_REGISTER_PUBLISH_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_REGISTER_PUBLISH_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_REGISTER_PUBLISH_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_REGISTER_PUBLISH_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	// no validation rules for ApiRegisterId

	if len(errors) > 0 {
		return API_GATEWAY_REGISTER_PUBLISH_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_REGISTER_PUBLISH_RequestMultiError is an error wrapping multiple
// validation errors returned by
// API_GATEWAY_REGISTER_PUBLISH_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_REGISTER_PUBLISH_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_REGISTER_PUBLISH_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_REGISTER_PUBLISH_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_REGISTER_PUBLISH_RequestValidationError is the validation error
// returned by API_GATEWAY_REGISTER_PUBLISH_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_REGISTER_PUBLISH_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_REGISTER_PUBLISH_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_REGISTER_PUBLISH_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_REGISTER_PUBLISH_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_REGISTER_PUBLISH_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_REGISTER_PUBLISH_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_REGISTER_PUBLISH_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_REGISTER_PUBLISH_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_REGISTER_PUBLISH_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_REGISTER_PUBLISH_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_REGISTER_PUBLISH_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_REGISTER_Request with the
// rules defined in the proto definition for this message. If any rules are
// violated, the first error encountered is returned, or nil if there are no violations.
func (m *API_GATEWAY_REGISTER_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_REGISTER_Request with the
// rules defined in the proto definition for this message. If any rules are
// violated, the result is a list of violation errors wrapped in
// API_GATEWAY_REGISTER_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_REGISTER_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_REGISTER_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return API_GATEWAY_REGISTER_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_REGISTER_RequestMultiError is an error wrapping multiple
// validation errors returned by API_GATEWAY_REGISTER_Request.ValidateAll() if
// the designated constraints aren't met.
type API_GATEWAY_REGISTER_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_REGISTER_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_REGISTER_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_REGISTER_RequestValidationError is the validation error returned
// by API_GATEWAY_REGISTER_Request.Validate if the designated constraints
// aren't met.
type API_GATEWAY_REGISTER_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_REGISTER_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_REGISTER_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_REGISTER_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_REGISTER_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_REGISTER_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_REGISTER_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_REGISTER_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_REGISTER_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_REGISTER_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_REGISTER_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_REGISTER_STATUS_GET_Request
// with the rules defined in the proto definition for this message. If any
// rules are violated, the first error encountered is returned, or nil if
// there are no violations.
func (m *API_GATEWAY_REGISTER_STATUS_GET_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on
// API_GATEWAY_REGISTER_STATUS_GET_Request with the rules defined in the proto
// definition for this message. If any rules are violated, the result is a
// list of violation errors wrapped in
// API_GATEWAY_REGISTER_STATUS_GET_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_REGISTER_STATUS_GET_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_REGISTER_STATUS_GET_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	// no validation rules for ApiRegisterId

	if len(errors) > 0 {
		return API_GATEWAY_REGISTER_STATUS_GET_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_REGISTER_STATUS_GET_RequestMultiError is an error wrapping
// multiple validation errors returned by
// API_GATEWAY_REGISTER_STATUS_GET_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_REGISTER_STATUS_GET_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_REGISTER_STATUS_GET_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_REGISTER_STATUS_GET_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_REGISTER_STATUS_GET_RequestValidationError is the validation
// error returned by API_GATEWAY_REGISTER_STATUS_GET_Request.Validate if the
// designated constraints aren't met.
type API_GATEWAY_REGISTER_STATUS_GET_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_REGISTER_STATUS_GET_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_REGISTER_STATUS_GET_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_REGISTER_STATUS_GET_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_REGISTER_STATUS_GET_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_REGISTER_STATUS_GET_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_REGISTER_STATUS_GET_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_REGISTER_STATUS_GET_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_REGISTER_STATUS_GET_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_REGISTER_STATUS_GET_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_REGISTER_STATUS_GET_RequestValidationError{}

// Validate checks the field values on API_GATEWAY_UI_TYPE_INFO_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the first error encountered is returned, or nil if there are
// no violations.
func (m *API_GATEWAY_UI_TYPE_INFO_Request) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on API_GATEWAY_UI_TYPE_INFO_Request with
// the rules defined in the proto definition for this message. If any rules
// are violated, the result is a list of violation errors wrapped in
// API_GATEWAY_UI_TYPE_INFO_RequestMultiError, or nil if none found.
func (m *API_GATEWAY_UI_TYPE_INFO_Request) ValidateAll() error {
	return m.validate(true)
}

func (m *API_GATEWAY_UI_TYPE_INFO_Request) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return API_GATEWAY_UI_TYPE_INFO_RequestMultiError(errors)
	}

	return nil
}

// API_GATEWAY_UI_TYPE_INFO_RequestMultiError is an error wrapping multiple
// validation errors returned by
// API_GATEWAY_UI_TYPE_INFO_Request.ValidateAll() if the designated
// constraints aren't met.
type API_GATEWAY_UI_TYPE_INFO_RequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m API_GATEWAY_UI_TYPE_INFO_RequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m API_GATEWAY_UI_TYPE_INFO_RequestMultiError) AllErrors() []error { return m }

// API_GATEWAY_UI_TYPE_INFO_RequestValidationError is the validation error
// returned by API_GATEWAY_UI_TYPE_INFO_Request.Validate if the designated
// constraints aren't met.
type API_GATEWAY_UI_TYPE_INFO_RequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e API_GATEWAY_UI_TYPE_INFO_RequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e API_GATEWAY_UI_TYPE_INFO_RequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e API_GATEWAY_UI_TYPE_INFO_RequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e API_GATEWAY_UI_TYPE_INFO_RequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e API_GATEWAY_UI_TYPE_INFO_RequestValidationError) ErrorName() string {
	return "API_GATEWAY_UI_TYPE_INFO_RequestValidationError"
}

// Error satisfies the builtin error interface
func (e API_GATEWAY_UI_TYPE_INFO_RequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sAPI_GATEWAY_UI_TYPE_INFO_Request.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = API_GATEWAY_UI_TYPE_INFO_RequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = API_GATEWAY_UI_TYPE_INFO_RequestValidationError{}
