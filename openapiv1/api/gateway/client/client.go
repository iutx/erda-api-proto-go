// Code generated by protoc-gen-go-client. DO NOT EDIT.
// Sources: api_gateway.proto

package client

import (
	context "context"

	grpc "github.com/erda-project/erda-infra/pkg/transport/grpc"
	pb "github.com/erda-project/erda-proto-go/openapiv1/api/gateway/pb"
	grpc1 "google.golang.org/grpc"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// Client provide all service clients.
type Client interface {
	// ApiGateway api_gateway.proto
	ApiGateway() pb.ApiGatewayClient
}

// New create client
func New(cc grpc.ClientConnInterface) Client {
	return &serviceClients{
		apiGateway: pb.NewApiGatewayClient(cc),
	}
}

type serviceClients struct {
	apiGateway pb.ApiGatewayClient
}

func (c *serviceClients) ApiGateway() pb.ApiGatewayClient {
	return c.apiGateway
}

type apiGatewayWrapper struct {
	client pb.ApiGatewayClient
	opts   []grpc1.CallOption
}

func (s *apiGatewayWrapper) API_GATEWAY_API_CREATE(ctx context.Context, req *pb.API_GATEWAY_API_CREATE_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_API_CREATE(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_API_DELETE(ctx context.Context, req *pb.API_GATEWAY_API_DELETE_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_API_DELETE(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_API_LIST(ctx context.Context, req *pb.API_GATEWAY_API_LIST_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_API_LIST(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_API_UPDATE(ctx context.Context, req *pb.API_GATEWAY_API_UPDATE_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_API_UPDATE(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_CATEGORY_CREATE(ctx context.Context, req *pb.API_GATEWAY_CATEGORY_CREATE_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_CATEGORY_CREATE(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_CATEGORY_CREATE_OR_UPDATE(ctx context.Context, req *pb.API_GATEWAY_CATEGORY_CREATE_OR_UPDATE_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_CATEGORY_CREATE_OR_UPDATE(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_CATEGORY_DELETE(ctx context.Context, req *pb.API_GATEWAY_CATEGORY_DELETE_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_CATEGORY_DELETE(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_CATEGORY_INFO(ctx context.Context, req *pb.API_GATEWAY_CATEGORY_INFO_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_CATEGORY_INFO(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_CATEGORY_UPDATE(ctx context.Context, req *pb.API_GATEWAY_CATEGORY_UPDATE_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_CATEGORY_UPDATE(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_CHECK_COMPAT(ctx context.Context, req *pb.API_GATEWAY_CHECK_COMPAT_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_CHECK_COMPAT(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_CONSUMER_API_EDIT(ctx context.Context, req *pb.API_GATEWAY_CONSUMER_API_EDIT_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_CONSUMER_API_EDIT(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_CONSUMER_API_INFO(ctx context.Context, req *pb.API_GATEWAY_CONSUMER_API_INFO_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_CONSUMER_API_INFO(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_CONSUMER_CREATE(ctx context.Context, req *pb.API_GATEWAY_CONSUMER_CREATE_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_CONSUMER_CREATE(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_CONSUMER_DELETE(ctx context.Context, req *pb.API_GATEWAY_CONSUMER_DELETE_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_CONSUMER_DELETE(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_CONSUMER_EDIT(ctx context.Context, req *pb.API_GATEWAY_CONSUMER_EDIT_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_CONSUMER_EDIT(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_CONSUMER_INFO(ctx context.Context, req *pb.API_GATEWAY_CONSUMER_INFO_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_CONSUMER_INFO(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_CONSUMER_INFO_UPDATE(ctx context.Context, req *pb.API_GATEWAY_CONSUMER_INFO_UPDATE_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_CONSUMER_INFO_UPDATE(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_CONSUMER_LIST(ctx context.Context, req *pb.API_GATEWAY_CONSUMER_LIST_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_CONSUMER_LIST(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_DOMAIN_CREATE_OR_UPDATE(ctx context.Context, req *pb.API_GATEWAY_DOMAIN_CREATE_OR_UPDATE_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_DOMAIN_CREATE_OR_UPDATE(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_DOMAIN_INFO(ctx context.Context, req *pb.API_GATEWAY_DOMAIN_INFO_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_DOMAIN_INFO(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_OPENAPI_CREATE(ctx context.Context, req *pb.API_GATEWAY_OPENAPI_CREATE_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_OPENAPI_CREATE(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_OPENAPI_DELETE(ctx context.Context, req *pb.API_GATEWAY_OPENAPI_DELETE_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_OPENAPI_DELETE(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_OPENAPI_GET(ctx context.Context, req *pb.API_GATEWAY_OPENAPI_GET_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_OPENAPI_GET(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_OPENAPI_UPDATE(ctx context.Context, req *pb.API_GATEWAY_OPENAPI_UPDATE_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_OPENAPI_UPDATE(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_PUBLISH_AUTHN_GET(ctx context.Context, req *pb.API_GATEWAY_PUBLISH_AUTHN_GET_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_PUBLISH_AUTHN_GET(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_PUBLISH_SUBSCRIBE(ctx context.Context, req *pb.API_GATEWAY_PUBLISH_SUBSCRIBE_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_PUBLISH_SUBSCRIBE(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_PUBLISH_SWAGGER_GET(ctx context.Context, req *pb.API_GATEWAY_PUBLISH_SWAGGER_GET_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_PUBLISH_SWAGGER_GET(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_REGISTER(ctx context.Context, req *pb.API_GATEWAY_REGISTER_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_REGISTER(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_REGISTER_APPS_INFO(ctx context.Context, req *pb.API_GATEWAY_REGISTER_APPS_INFO_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_REGISTER_APPS_INFO(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_REGISTER_PUBLISH(ctx context.Context, req *pb.API_GATEWAY_REGISTER_PUBLISH_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_REGISTER_PUBLISH(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_REGISTER_STATUS_GET(ctx context.Context, req *pb.API_GATEWAY_REGISTER_STATUS_GET_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_REGISTER_STATUS_GET(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *apiGatewayWrapper) API_GATEWAY_UI_TYPE_INFO(ctx context.Context, req *pb.API_GATEWAY_UI_TYPE_INFO_Request) (*emptypb.Empty, error) {
	return s.client.API_GATEWAY_UI_TYPE_INFO(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}
