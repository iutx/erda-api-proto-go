// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: core_services.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterCoreServicesImp core_services.proto
func RegisterCoreServicesImp(regester transport.Register, srv CoreServicesServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterCoreServicesHandler(regester, CoreServicesHandler(srv), _ops.HTTP...)
	RegisterCoreServicesServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.openapiv1.core.CoreServices",
	)
}

var (
	coreServicesClientType  = reflect.TypeOf((*CoreServicesClient)(nil)).Elem()
	coreServicesServerType  = reflect.TypeOf((*CoreServicesServer)(nil)).Elem()
	coreServicesHandlerType = reflect.TypeOf((*CoreServicesHandler)(nil)).Elem()
)

// CoreServicesClientType .
func CoreServicesClientType() reflect.Type { return coreServicesClientType }

// CoreServicesServerType .
func CoreServicesServerType() reflect.Type { return coreServicesServerType }

// CoreServicesHandlerType .
func CoreServicesHandlerType() reflect.Type { return coreServicesHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		coreServicesClientType,
		// server types
		coreServicesServerType,
		// handler types
		coreServicesHandlerType,
	}
}
