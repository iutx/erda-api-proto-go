// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: search.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterSearchServiceImp search.proto
func RegisterSearchServiceImp(regester transport.Register, srv SearchServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterSearchServiceHandler(regester, SearchServiceHandler(srv), _ops.HTTP...)
	RegisterSearchServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.dop.search.SearchService",
	)
}

var (
	searchServiceClientType  = reflect.TypeOf((*SearchServiceClient)(nil)).Elem()
	searchServiceServerType  = reflect.TypeOf((*SearchServiceServer)(nil)).Elem()
	searchServiceHandlerType = reflect.TypeOf((*SearchServiceHandler)(nil)).Elem()
)

// SearchServiceClientType .
func SearchServiceClientType() reflect.Type { return searchServiceClientType }

// SearchServiceServerType .
func SearchServiceServerType() reflect.Type { return searchServiceServerType }

// SearchServiceHandlerType .
func SearchServiceHandlerType() reflect.Type { return searchServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		searchServiceClientType,
		// server types
		searchServiceServerType,
		// handler types
		searchServiceHandlerType,
	}
}
