// Code generated by protoc-gen-go-json. DO NOT EDIT.
// Source: stream.proto

package pb

import (
	bytes "bytes"
	json "encoding/json"

	jsonpb "github.com/erda-project/erda-infra/pkg/transport/http/encoding/jsonpb"
	protojson "google.golang.org/protobuf/encoding/protojson"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "encoding/json" package it is being compiled against.
var _ json.Marshaler = (*CommentIssueStreamCreateRequest)(nil)
var _ json.Unmarshaler = (*CommentIssueStreamCreateRequest)(nil)
var _ json.Marshaler = (*MRCommentInfo)(nil)
var _ json.Unmarshaler = (*MRCommentInfo)(nil)
var _ json.Marshaler = (*CommentIssueStreamBatchCreateRequest)(nil)
var _ json.Unmarshaler = (*CommentIssueStreamBatchCreateRequest)(nil)
var _ json.Marshaler = (*CommentIssueStreamBatchCreateResponse)(nil)
var _ json.Unmarshaler = (*CommentIssueStreamBatchCreateResponse)(nil)
var _ json.Marshaler = (*IssueStreamCreateRequest)(nil)
var _ json.Unmarshaler = (*IssueStreamCreateRequest)(nil)
var _ json.Marshaler = (*IssueStreamCreateResponse)(nil)
var _ json.Unmarshaler = (*IssueStreamCreateResponse)(nil)
var _ json.Marshaler = (*PagingIssueStreamsRequest)(nil)
var _ json.Unmarshaler = (*PagingIssueStreamsRequest)(nil)
var _ json.Marshaler = (*PagingIssueStreamsResponse)(nil)
var _ json.Unmarshaler = (*PagingIssueStreamsResponse)(nil)
var _ json.Marshaler = (*IssueStreamPagingResponseData)(nil)
var _ json.Unmarshaler = (*IssueStreamPagingResponseData)(nil)
var _ json.Marshaler = (*IssueStream)(nil)
var _ json.Unmarshaler = (*IssueStream)(nil)

// CommentIssueStreamCreateRequest implement json.Marshaler.
func (m *CommentIssueStreamCreateRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CommentIssueStreamCreateRequest implement json.Marshaler.
func (m *CommentIssueStreamCreateRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// MRCommentInfo implement json.Marshaler.
func (m *MRCommentInfo) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// MRCommentInfo implement json.Marshaler.
func (m *MRCommentInfo) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CommentIssueStreamBatchCreateRequest implement json.Marshaler.
func (m *CommentIssueStreamBatchCreateRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CommentIssueStreamBatchCreateRequest implement json.Marshaler.
func (m *CommentIssueStreamBatchCreateRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CommentIssueStreamBatchCreateResponse implement json.Marshaler.
func (m *CommentIssueStreamBatchCreateResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CommentIssueStreamBatchCreateResponse implement json.Marshaler.
func (m *CommentIssueStreamBatchCreateResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// IssueStreamCreateRequest implement json.Marshaler.
func (m *IssueStreamCreateRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// IssueStreamCreateRequest implement json.Marshaler.
func (m *IssueStreamCreateRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// IssueStreamCreateResponse implement json.Marshaler.
func (m *IssueStreamCreateResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// IssueStreamCreateResponse implement json.Marshaler.
func (m *IssueStreamCreateResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PagingIssueStreamsRequest implement json.Marshaler.
func (m *PagingIssueStreamsRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PagingIssueStreamsRequest implement json.Marshaler.
func (m *PagingIssueStreamsRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PagingIssueStreamsResponse implement json.Marshaler.
func (m *PagingIssueStreamsResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PagingIssueStreamsResponse implement json.Marshaler.
func (m *PagingIssueStreamsResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// IssueStreamPagingResponseData implement json.Marshaler.
func (m *IssueStreamPagingResponseData) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// IssueStreamPagingResponseData implement json.Marshaler.
func (m *IssueStreamPagingResponseData) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// IssueStream implement json.Marshaler.
func (m *IssueStream) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// IssueStream implement json.Marshaler.
func (m *IssueStream) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}
