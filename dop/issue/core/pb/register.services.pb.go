// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: core.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterIssueCoreServiceImp core.proto
func RegisterIssueCoreServiceImp(regester transport.Register, srv IssueCoreServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterIssueCoreServiceHandler(regester, IssueCoreServiceHandler(srv), _ops.HTTP...)
	RegisterIssueCoreServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.dop.issue.core.IssueCoreService",
	)
}

var (
	issueCoreServiceClientType  = reflect.TypeOf((*IssueCoreServiceClient)(nil)).Elem()
	issueCoreServiceServerType  = reflect.TypeOf((*IssueCoreServiceServer)(nil)).Elem()
	issueCoreServiceHandlerType = reflect.TypeOf((*IssueCoreServiceHandler)(nil)).Elem()
)

// IssueCoreServiceClientType .
func IssueCoreServiceClientType() reflect.Type { return issueCoreServiceClientType }

// IssueCoreServiceServerType .
func IssueCoreServiceServerType() reflect.Type { return issueCoreServiceServerType }

// IssueCoreServiceHandlerType .
func IssueCoreServiceHandlerType() reflect.Type { return issueCoreServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		issueCoreServiceClientType,
		// server types
		issueCoreServiceServerType,
		// handler types
		issueCoreServiceHandlerType,
	}
}
